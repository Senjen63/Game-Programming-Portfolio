#pragma once

#include <vector>

#include "Color.h"
#include "Vector2D.h"

class Level final : public Trackable
{
    Vector2D mTilesResolution;

    std::vector< Vector2D > mWalls;

    Color mWallColor = Color( 0, 0, 0 );
    std::string mName;
    int mEndSize{};
    int mPointsPerFood{};
    float mSnakeSpeed{};
    int mStartSize{};

    std::tuple< Color, Color > mBackgroundColors = std::tuple( Color( 0, 0, 0 ), Color( 240, 240, 240 ) );
    Color mSnakeColor = Color( 60, 179, 113 );
    Color mFoodColor = Color( 50, 50, 0 );
    int mPowerUpRate{};

public:
    Level();
    ~Level();

    void addWall( Vector2D wall );
    [[nodiscard]] std::tuple< Color, Color > getBackgroundColors() const;
    [[nodiscard]] int getEndSize() const;
    [[nodiscard]] Color & getFoodColor();
    [[nodiscard]] std::string getName() const;
    [[nodiscard]] int getPointsPerFood() const;
    [[nodiscard]] int getPowerUpRate() const;
    [[nodiscard]] Vector2D getResolution() const;
    [[nodiscard]] Color getSnakeColor() const;
    [[nodiscard]] float getSnakeSpeed() const;
    [[nodiscard]] int getStartSize() const;
    [[nodiscard]] std::vector< Vector2D > getWalls() const;
    [[nodiscard]] Color getWallColor() const;
    void setBackgroundColors( const Color & color1, const Color & color2 );
    void setEndSize( int endSize );
    void setFoodColor( const Color & color );
    void setName( const std::string & name );
    void setPointsPerFood( int points );
    void setPowerUpRate( int rate );
    void setResolution( const Vector2D & res );
    void setSnakeColor( const Color & color );
    void setSnakeSpeed( float snakeSpeed );
    void setStartSize( int startSize );
    void setWallColor( const Color & color );
};
