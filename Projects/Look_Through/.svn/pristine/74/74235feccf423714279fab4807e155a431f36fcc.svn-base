#include "Snake.h"

Snake::Snake(UnitManager* um, GraphicsBufferManager* gm, int numPieces)
{
	mpUnitManager = um;
	mpGraphicsBufferManager = gm;
	mNumPieces = numPieces;

	const int BACKGROUND_SIZE = 800;
	double fps = 30;

	const string SNAKE_TAG = "Snake";

	//Created snake head
	mpUnitManager->addUnit(BACKGROUND_SIZE / 2, BACKGROUND_SIZE / 2, 1, 1, SNAKE_TAG);
	Unit* head = mpUnitManager->getLastUnit();
	mSnakePieces.push_back(head);
	Animation* anim = new Animation;
	anim->addSprite(mpGraphicsBufferManager->getBuffer("snakeHeadImg"), 1, 1, fps, false);
	head->setAnimation(anim);

	//Creates snake body pieces.
	for (int i = 1; i <= mNumPieces; i++)
	{
		mpUnitManager->addUnit(BACKGROUND_SIZE / 2, (BACKGROUND_SIZE / 2) - (30 * i), 1, 1, SNAKE_TAG);
		Unit* body = mpUnitManager->getLastUnit();
		mSnakePieces.push_back(body);
		Animation* anim = new Animation;
		anim->addSprite(mpGraphicsBufferManager->getBuffer("snakeBodyImg"), 1, 1, fps, false);
		body->setAnimation(anim);
	}
}

void Snake::addSnakePiece(Vector2D vec)
{
	int fps = 30;
	mpUnitManager->addUnit(vec.getX(), vec.getY(), 1, 1, "Snake");
	Unit* body = mpUnitManager->getLastUnit();
	mSnakePieces.push_back(body);
	Animation* anim = new Animation;
	anim->addSprite(mpGraphicsBufferManager->getBuffer("snakeBodyImg"), 1, 1, fps, false);
	body->setAnimation(anim);
}