//     -------------------------------------------------------------------------
//     Final Project
//         InputTranslator.hpp
//     
//             Created:
//                 16-04-2022
//             Author(s):
//                 Aven Presseisen
//     -------------------------------------------------------------------------

#pragma once

#include <unordered_map>

#include "InputSystem.hpp"

using InputType = std::variant< MouseButton, KeyCode >;

struct AxisType
{
    bool positiveButton;

    InputType input;
};

class InputTranslator final : public EventListener
{
    friend class Game;

    std::shared_ptr< EventSystem > mpEventSystem;
    std::shared_ptr< InputSystem > mpInputSystem;

    std::unordered_map< std::string, std::vector< AxisType > > mBindings;
    std::unordered_map< InputType, ButtonState > mStates;
public:
    InputTranslator();

    void createBinding( const std::string & name, AxisType axis );
    float getAxis( const std::string & name );
    bool getButtonDown( InputType input );
    bool getButtonUp( InputType input );
    void handleEvent( const Event & event ) override;
    void update();
};
