#pragma once
#include "GraphicsBuffer.h"
#include "Sprite.h"
#include "Unit.h"
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

using namespace std;

class GraphicsSystem : public Trackable
{
public:
	GraphicsSystem() { mpDisplay = nullptr; mColor = al_map_rgba(255, 255, 255, 255); };
	~GraphicsSystem ();

	//getters
	int getHeight() { return al_get_display_height( mpDisplay ); };
	int getWidth() { return al_get_display_width( mpDisplay ); };
	ALLEGRO_BITMAP* getBackBuffer() { return al_get_backbuffer( mpDisplay ); };

	void init(int dispW, int dispH);
	void clean();

	void flip();
	void draw( GraphicsBuffer* buff );
	void draw( GraphicsBuffer* buff, float scale );
	void draw( Sprite* spr, int locX, int locY, float scale );
	void draw( GraphicsBuffer* backBuff, GraphicsBuffer*, int locX, int locY, float scale );
	void draw( GraphicsBuffer* buff, Sprite* spr, int locX, int locY, float scale );
	void writeText( string txt, int locX, int locY );
	void writeText( GraphicsBuffer* buff, string txt, int locX, int locY );
	void saveBuffer( GraphicsBuffer* buff, string fileName );

private:
	ALLEGRO_DISPLAY* mpDisplay = nullptr;
	ALLEGRO_FONT* mpFont = nullptr;
	ALLEGRO_COLOR mColor;
};