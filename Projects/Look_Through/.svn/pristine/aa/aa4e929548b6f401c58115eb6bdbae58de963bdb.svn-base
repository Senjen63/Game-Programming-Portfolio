#include "InputSystem.h"
#include "EventSystem.h"
#include "InputEvents.h"

InputSystem::InputSystem()
{

}

InputSystem::~InputSystem()
{
	cleanup();
}

void InputSystem::init()
{
	al_install_keyboard();
	al_install_mouse();
	al_get_keyboard_state( &mpKeyboardState );
	al_get_mouse_state( &mpMouseState );
	mpEventQueue = al_create_event_queue();
	al_register_event_source( mpEventQueue, al_get_keyboard_event_source() );
	al_register_event_source( mpEventQueue, al_get_mouse_event_source() );
}

void InputSystem::cleanup()
{
	al_unregister_event_source( mpEventQueue, al_get_mouse_event_source() );
	al_unregister_event_source( mpEventQueue, al_get_keyboard_event_source());
	al_destroy_event_queue( mpEventQueue ); 
}

void InputSystem::update()
{
	while ( !al_event_queue_is_empty( mpEventQueue ) )
	{
		ALLEGRO_EVENT curEvent = {};
		al_get_next_event( mpEventQueue, &curEvent );
		switch ( curEvent.type )
		{
		case ALLEGRO_EVENT_KEY_DOWN:
			EventSystem::getInstance()->fireEvent( KeyInputEvent( ( KeyCode )curEvent.keyboard.keycode, KEY_DOWN_EVENT ) );
			break;
		case ALLEGRO_EVENT_KEY_UP:
			EventSystem::getInstance()->fireEvent( KeyInputEvent( ( KeyCode )curEvent.keyboard.keycode, KEY_UP_EVENT ) );
			break;
		}
	}
}

bool InputSystem::getKeyboardInput( KeyCode key )
{
	al_get_keyboard_state( &mpKeyboardState );
	return al_key_down( &mpKeyboardState, ( int ) key );
}

bool InputSystem::getMouseInput( KeyCode mouse )
{
	al_get_mouse_state( &mpMouseState );
	return al_mouse_button_down( &mpMouseState, ( int ) mouse );
}