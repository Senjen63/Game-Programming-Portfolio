#include "Unit.h"

Unit::Unit()
{
	mX = 0;
	mY = 0;
	mCurAnim = 0;
}

Unit::Unit(int x, int y)
{
	mX = x;
	mY = y;
	mCurAnim = 0;
}

Unit::~Unit()
{

}

void Unit::addAnim( GraphicsBuffer* gbuff, float targetTime )
{
	Animation smurfsAnim = Animation( gbuff, targetTime );
	mAnims.push_back( smurfsAnim );
}

void Unit::update( float deltaTime )
{
	getCurAnim().update( deltaTime );
}

void Unit::draw( float scale )
{
	al_draw_scaled_bitmap( getCurAnim().getCurrentSprite().getGraphicsBuffer()->getBitmap(), getCurAnim().getCurrentSprite().getLocX(),
		getCurAnim().getCurrentSprite().getLocY(), getCurAnim().getCurrentSprite().getWidth(), getCurAnim().getCurrentSprite().getHeight(),
		mX, mY, getCurAnim().getCurrentSprite().getWidth() * scale, getCurAnim().getCurrentSprite().getHeight() * scale, 0 );
}

void Unit::setAnimation()
{
	if ( mCurAnim >= mAnims.size() - 1 )
		mCurAnim = 0;
	else
		mCurAnim++;
}
