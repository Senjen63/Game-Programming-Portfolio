#pragma once

#include <Trackable.h>
#include <Vector2D.h>
#include "Animation.h"
#include "GraphicsSystem.h"

class Entity : public Trackable
{
public:
    Entity() = default;
    Entity(const Entity&) = default;
    ~Entity();

    Entity(Vector2D position, Animation* pAnimation);
    Entity(Vector2D position, const std::string& pathToSpriteSheet, int spriteWidth, int spriteHeight, int numSprites, float frameRate, bool loops = true);

    void update(double deltaTime);
    void draw(const GraphicsSystem& sys, float scale = 1.0f) const;

    Animation* getAnimation() { return mpAnimation; }
    void setAnimation(Animation* pAnimation) { mpAnimation = pAnimation; }

private:
    Vector2D mPosition;
    Animation* mpAnimation;

    bool mCreatedAnimation;
};
