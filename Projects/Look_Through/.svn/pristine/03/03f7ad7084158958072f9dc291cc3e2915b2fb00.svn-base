#pragma once

#include "Unit.h"

class UnitManager : public Trackable
{
public:
	UnitManager() {};
	~UnitManager();
	void setScreenSize(int width, int height);

	void createAndAddUnit(AnimationPrototype* anim1, AnimationPrototype* anim2, AnimationPrototype* anim3, AnimationPrototype* anim4);
	void createAndAddUnit(AnimationPrototype* anim1, AnimationPrototype* anim2, AnimationPrototype* anim3);
	void createAndAddUnit(AnimationPrototype* anim1, AnimationPrototype* anim2);
	void createAndAddUnit(AnimationPrototype* anim1);

	void cleanup();
	void update(double dt);

	void draw(GraphicsSystem* graphSys);
	void setAnimation(int index, int unitIndex);

	Vector2D getLocation() { return mLocation; }
	void setLocation(Vector2D loc);
	void setLocation(Vector2D loc, int index);

	Unit* getUnit(int index);

protected:
	std::vector<Unit*> mpUnits;
	Vector2D mLocation;

	float mTimePerFrame = 0;
	float mTimeLeft = 0;

	int mScreenWidth = 0;
	int mScreenHeight = 0;
};
