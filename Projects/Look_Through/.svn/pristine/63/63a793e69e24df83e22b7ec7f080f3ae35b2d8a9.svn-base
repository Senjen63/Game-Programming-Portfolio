#pragma once
#include "Sprite.h"
#include "Vector2D.h"
#include <vector>

class AnimationBase : public Trackable
{
	friend class Animation;

public:
	AnimationBase(bool isLooping = true);
	~AnimationBase();

	//sprites are stored in a vector that is looped through at a given speed
	void addSprite(Sprite* toAdd) { mSpritesToUse.push_back(new Sprite(toAdd)); }
	Sprite* getSprite(int i) { return mSpritesToUse[i]; }
	int getSize() { return mSpritesToUse.size(); }
private:
	/*A NOTE ABOUT SPEED:
	 - the "speed" variable is based on the framerate
	 - a speed of 1 means the animation updates every frame
	 - a speed <1 means the animation runs slower than the game's fps (this will probably be used most commonly)
	 - a speed of >1 means the animation runs faster than the game's fps, and will skip frames
	 */

	std::vector<Sprite*> mSpritesToUse;
	bool mIsLooping;
};
