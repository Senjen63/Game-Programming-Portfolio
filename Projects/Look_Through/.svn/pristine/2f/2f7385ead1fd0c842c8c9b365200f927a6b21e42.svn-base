#include "FriendManager.h"

FriendManager::FriendManager() {}

FriendManager::~FriendManager()
{
	friendCleanup();
}

void FriendManager::friendCleanup()
{
	mMap.clear();
	cleanup();
}

int FriendManager::collideWithFriend(Vector2D loc)
{
	float dist = 0;

	for (int i = 0; i < mpUnits.size(); i++)
	{
		Unit* pUnit = mpUnits[i];
		
		Vector2D friendLocation = pUnit->getLocation();
		Vector2D tobbLocation = loc;

		dist = friendLocation.getDistanceBetween(friendLocation, tobbLocation);

		if (dist < 128)
		{
			return i;
		}
	}

	return -1;
}

void FriendManager::setFriendMood(int index, int mood)
{
	// 0 - happy, 1 - meh, 2 - sad
	Unit* pUnit = mpUnits[index];
	pUnit->setAnimation(mood);

	mMap[index] = mood;
}

bool FriendManager::incFriendMood(int index)
{
	int newMood = 0;

	auto iter = mMap.find(index);
	if (iter != mMap.end())
	{
		newMood = iter->second - 1;
		if (newMood < 0)
		{
			newMood = 0;
			return false;
		}
	}

	Unit* pUnit = mpUnits[index];
	pUnit->setAnimation(newMood);
	mMap[index] = newMood;

	if (newMood == 0)
	{
		return true;
	}
	else
	{
		return false;
	}
}

int FriendManager::getFriendMood(int index)
{
	auto iter = mMap.find(index);

	if (iter != mMap.end())
		return iter->second;
}