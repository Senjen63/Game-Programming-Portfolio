#pragma once

#include "..\Unit.h"

class PieceManager;

class King : public Unit
{
private:
	bool mSelected = false;
	bool mFirstMove;
	vector<Unit*> mpMovePts;
	vector<Unit*> mpAttackPts;

public:
	King();
	King(GraphicsBuffer* pBuffer, Vector2D location, bool firstMove);
	~King();

	void cleanUp();
	void createMovePts();
	void draw(GraphicsSystem* pGraphicsSystem, PieceManager& team, PieceManager& otherTeam);
	void selected(bool selected);
	void checkMovePts(Vector2D mousePos, PieceManager& team, PieceManager& otherTeam);
	bool checkAttackPts(Vector2D position);
	bool checkCheck(PieceManager& team, PieceManager& otherTeam);
	void setPosition(Vector2D position);

	bool getSelected() { return mSelected; };
	bool getFirstMove() { return mFirstMove; };
	void setFirstMove() { mFirstMove = false; };
	unsigned int getNumAttackPts() { return mpAttackPts.size(); };
};