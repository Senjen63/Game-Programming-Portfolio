#include "Unit.h"
#include "Game.h"
#include "InputSystem.h"

Unit::Unit()
{
	mPos = Vector2D();
	mCurrentAnimat = 1;
	//mpAnimation = new Animation(Game::startUp()->getBuff(SMURF), FRAMES_PER_SECOND, START_TIME, true);
	mPaused = false;
	mTime = 0;
}

Unit::Unit(Vector2D position, string name)
{
	mPos = position;
	mCurrentAnimat = 1;
	if (name != "player.png")
	{
		mpAnimation = new Animation(Game::getInstance()->getBuff(name), 4, START_TIME, true);

	}
	else
	{
		mpAnimation = new Animation(Game::getInstance()->getBuff(name), 1, START_TIME, true);

	}
	mPaused = false;
	mTime = 0;
	mName = name;
}

Unit::Unit(Animation* pAnimation1, Animation* pAnimation2, Vector2D position)
{
	mPos = position;
	mCurrentAnimat = 1;
	mpAnimation = pAnimation1;
	mPaused = false;
	mTime = 0;
}

Unit::~Unit()
{
	mCurrentAnimat = 1;
	delete mpAnimation;
	mpAnimation = nullptr;
}

void Unit::update(float time, int xMove, int yMove)
{
	time++;
	if (time < getTime())
	{
		mpAnimation->update();

		mPos += Vector2D(xMove, yMove);
	}
}

void Unit::update(float time, Vector2D pos, Unit* snakeHead)
{
	Vector2D range;

	if (range.getDistanceBetween(mPos, pos) <= snakeHead->getSprite()->getWidth())
	{
		Vector2D newPos = Vector2D(rand() % (DISPLAY_WIDTH - 120), rand() % (DISPLAY_HEIGHT - 120));
		mPos = newPos;
	}

	mTime += time;
	if (mTime > getTime())
	{
		mTime = 0;
		mpAnimation->update();
	}
}

void Unit::update(float time, Vector2D pos, Unit* snakeHead, int& mod)
{
	Vector2D range;

	if (range.getDistanceBetween(mPos, pos) <= snakeHead->getSprite()->getWidth())
	{
		Vector2D newPos = Vector2D(rand() % (DISPLAY_WIDTH - 120), rand() % (DISPLAY_HEIGHT - 120));
		mPos = newPos;

		if (mName == "points.png")
		{
			mod += 10;
		}
		else if (mName == "speedUp.png")
		{
			if (mod < 60)
				mod += 20;
		}
		else if (mName == "slowDown.png")
		{
			if (mod > 20)
				mod -= 20;
		}
	}

	mTime += time;
	if (mTime > getTime())
	{
		mTime = 0;
		mpAnimation->update();
	}
}

float Unit::getTime()
{
	return mpAnimation->getTime();
}

Vector2D Unit::getPos()
{
	return mPos;
}

void Unit::draw(GraphicsSystem* pSystem)
{
	pSystem->draw(mPos, getSprite(), 60, 60);
}

void Unit::setAnimation()
{
	if (mCurrentAnimat == 1)
	{
		mCurrentAnimat = 0;
	}
	else {
		mCurrentAnimat = 1;
	}
}

void Unit::setTime(float time)
{
	mpAnimation->adjustTiming(time);
}

void Unit::setPos(Vector2D unitPos)
{
	mPos = unitPos;
}

Sprite* Unit::getSprite()
{
	return mpAnimation->getCurrentSprite();
}

void Unit::togglePause()
{
	mPaused = !mPaused;
}