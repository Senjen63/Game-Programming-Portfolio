#include "GraphicsBufferManager.h"

void GraphicsBufferManager::cleanup()
{
	// don't understand how : works but it works so :/
	for ( auto iter : mGBs )
	{
		GraphicsBuffer* pGB = iter.second;
		delete pGB;
	}
	mGBs.clear();
}

void GraphicsBufferManager::addGraphicsBuff( string file, string name )
{
	// I DO NOT UNDERSTAND THIS (what is iter?) BUT IM TOO AFRAID TO ASK
	GraphicsBuffer* aGB = NULL;
	auto iter = mGBs.find( name );
	if ( iter == mGBs.end() )
	{
		aGB = new GraphicsBuffer( file );
		mGBs[ name ] = aGB;
	}

	/*if (mGBs.find(name) == mGBs.end())
	{
		GraphicsBuffer* aGB = new GraphicsBuffer(file);
		mGBs[name] = aGB;
	} UNSURE WHY THIS DOESN'T WORK */
}

GraphicsBuffer* GraphicsBufferManager::getGraphicsBuff( string name )
{
	auto iter = mGBs.find(name);
	if (iter != mGBs.end())
	{
		return iter->second;
	}
}

void GraphicsBufferManager::deleteGraphicsBuff( string name )
{
	if (mGBs.find(name) != mGBs.end())
	{
		delete mGBs[name];
		mGBs.erase(name);
	}
}
