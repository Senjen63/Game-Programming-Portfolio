#pragma once

#include <Trackable.h>
#include <Vector2D.h>
#include <vector>

enum class UnitType;

class GraphicsBuffer;
class Animation;
class Unit;

using namespace std;

class UnitManager : public Trackable
{
public:

	UnitManager() {};
	UnitManager(Animation* wallAnim, Animation* snakeAnim, Animation* foodAnim, Animation* pointsAnim, Animation* speedAnim, Animation* slowAnim);
	~UnitManager();

	Unit* getLastUnit();
	Unit* getUnitAt(Vector2D location);
	
	void addUnitAt(Vector2D location, UnitType type);
	//void addUnitAt(Vector2D location, Animation mainAnim);
	void deleteAllUnitsAt(Vector2D location);
	void clearUnits();

	void setPauseAllUnitAnims(bool pause);

	void updateAll(double dt);
	void drawAll();

private:

	vector<Unit*> mvpUnits;

	Animation* mpWallAnim = nullptr;
	Animation* mpSnakeAnim = nullptr;
	Animation* mpFoodAnim = nullptr;
	Animation* mpPointsAmim = nullptr;
	Animation* mpSpeedAnim = nullptr;
	Animation* mpSlowAnim = nullptr;

};

