#pragma once

#include <Trackable.h>
#include <vector>
#include "Unit.h"
#include "GraphicsSystem.h"
#include <Vector2D.h>
#include "LevelManager.h"
#include "Level.h"

class SnakeManager : public Trackable
{
public:
	SnakeManager();
	~SnakeManager();

	void cleanup();

	void createAndAddUnit(Animation anim);
	void draw(GraphicsSystem* graphSys);
	Unit* getUnit();
	Unit* getUnit(int index);
	Unit* getHead() { return mpSnakeUnits[0]; };
	int getSize() { return mpSnakeUnits.size(); };

	void setSpeed(int speed) { mSpeed = speed; mTimePerFrame = 1000.0 / mSpeed; };

	void update(int dir, double dt);
	void changeSpeed(int speed);

	bool collideWithSelf();

private:
	std::vector<Unit*> mpSnakeUnits;
	Vector2D mPrevPos = Vector2D(256, 352);

	float mTimePerFrame;
	float mTimeLeft;
	int mSpeed;

	Vector2D mUp = Vector2D(0, -32);
	Vector2D mDown = Vector2D(0, 32);
	Vector2D mRight = Vector2D(32, 0);
	Vector2D mLeft = Vector2D(-32, 0);
};