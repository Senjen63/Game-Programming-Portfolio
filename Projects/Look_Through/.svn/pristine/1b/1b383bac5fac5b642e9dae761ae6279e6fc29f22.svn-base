#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <iostream>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>
#include <Timer.h>
#include <random>


using namespace std;
class Sprite;
class GraphicsBuffer;

class GraphicsSystem
{
public:
	GraphicsSystem();

	GraphicsSystem(const int DISP_WIDTH, const int DISP_HEIGHT);

	~GraphicsSystem();
	
	void Draw(GraphicsBuffer* buffer);

	void Draw(float locX, float locY, Sprite* sprite, const int DISP_WIDTH, const int DISP_HEIGHT);

	void Draw(GraphicsBuffer* tBuffer, GraphicsBuffer* sBuffer, float locX, float locY);

	void Draw(GraphicsBuffer* tBuffer, GraphicsBuffer* sBuffer, float locX, float locY, float scale_factor);

	void Draw(GraphicsBuffer* buffer, float locX, float locY, float scale_factor);

	void Draw(GraphicsBuffer* buffer, float locX, float locY, Sprite* sprite, float scale_factor);
	
	void Draw(float locX, float locY, Sprite* sprite, const int DISP_WIDTH, const int DISP_HEIGHT, float worldX, float worldY);

	void WriteText(float locX, float locY, ALLEGRO_FONT* cour_font, ALLEGRO_COLOR color, const char* TEXT);

	void WriteText(GraphicsBuffer* buffer, float locX, float locY, ALLEGRO_FONT* cour_font, ALLEGRO_COLOR color, const char* TEXT);

	void Flip();

	void saveBitmap(GraphicsBuffer* buffer, string outputName);

	int getWidth();

	int getHeight();

private:
	ALLEGRO_DISPLAY* display;
	int width;
	int height;
};
