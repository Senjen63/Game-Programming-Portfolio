#pragma once
#include "Animation.h"
#include <vector>

enum class UnitTypes
{
	INVALID = -1, DEFAULT_UNIT_TYPE, SNAKE_UNIT_TYPE, WALL_UNIT_TYPE, FREE_SPACE_TYPE, SPEED_UP_TYPE, SLOW_DOWN_TYPE, BONUS_POINT_TYPE, FOOD_UNIT_TYPE, HUD_UNIT_TYPE, NUM_UNIT_TYPES
};

class Unit : public Trackable
{
	friend class UnitManager;
public:
	void update( float deltaTime );
	void draw( float scale );
	void setAnimation();
	void setX( int x ) { mX = x; };
	void setY( int y ) { mY = y; };

	void addAnim( GraphicsBuffer* gbuff, float targetTime );
	void addAnim( int rnum, int cnum, GraphicsBuffer* gbuff, float targetTime, bool isSnake );
	Animation& getCurAnim() { return mAnims[ mCurAnim ]; };
	vector<Animation> getAnims() { return mAnims; };
	Unit* getUnit() { return this; };
	UnitTypes getType() { return mType; };

	int getX() { return mX; };
	int getY() { return mY; };

private:
	Unit();
	Unit( int x, int y, UnitTypes type );
	~Unit();

	int mX, mY, mCurAnim;
	UnitTypes mType;
	vector< Animation > mAnims;
};