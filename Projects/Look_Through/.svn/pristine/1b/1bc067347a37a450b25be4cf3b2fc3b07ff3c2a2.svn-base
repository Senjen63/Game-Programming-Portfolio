#pragma once

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>
#include <string>
#include <iostream>

#include "GraphicsBuffer.h"
#include "Font.h"
#include "Sprite.h"
#include "Color.h"

using namespace std;

class GraphicsSystem : public Trackable
{
public:
	GraphicsSystem();
	GraphicsSystem(int height, int width);
	~GraphicsSystem();
	
	//void coloring(GraphicsBuffer* targetBuffer, Color* color);
	void draw(Vector2D targetLocation, Sprite* sprite, float scale);
	void draw(Vector2D targetLocation, Sprite sprite, float scale);
	void draw(GraphicsBuffer* targetBuffer, Vector2D targetLocation, Sprite* sprite, float scale);
	void flip();
	bool init();
	void saveBuffer(GraphicsBuffer* buffer, string fileName);
	void cleanup();
	void writeText(Vector2D targetLocation, Font* font, Color color, string text);
	void writeText(GraphicsBuffer* targetBuffer, Vector2D targetLocation, Font* font, Color color, string text);
	void writeText(Vector2D targetLocation, Font font, Color color, string text);
	int getHeight();
	int getWidth();
	GraphicsBuffer* getBackBuffer();

private:
	ALLEGRO_DISPLAY* mpDisplay;
	GraphicsBuffer* mpBuffer;
	int mWidth;
	int mHeight;
};
