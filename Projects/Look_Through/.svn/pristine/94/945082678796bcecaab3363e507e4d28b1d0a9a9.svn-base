#include "GraphicsBufferManager.h"

GraphicsBufferManager::GraphicsBufferManager()
{

}

GraphicsBufferManager::~GraphicsBufferManager()
{
	mMap.clear();
}

void GraphicsBufferManager::addBuffer(GraphicsBuffer * buffer, string label)
{
	mMap.emplace(label, buffer);
	mKeys.push_back(label);
}

void GraphicsBufferManager::clearList()
{
	for (int i = 0; i < mKeys.size(); i++)
	{
		if (mMap.at(mKeys.at(i)))
		{
			delete mMap.at(mKeys.at(i));
		}
	}
	mMap.clear();
}

void GraphicsBufferManager::deleteBuffer(string label)
{
	delete mMap.at(label);
	mMap.erase(label);
}

GraphicsBuffer* GraphicsBufferManager::getBuffer(string label)
{
	if (mMap.at(label))
	{
		return mMap.at(label);
	}
	else
	{
		mMap.emplace(label, new GraphicsBuffer());
		mKeys.push_back(label);
		return mMap.at(label);
	}
}
