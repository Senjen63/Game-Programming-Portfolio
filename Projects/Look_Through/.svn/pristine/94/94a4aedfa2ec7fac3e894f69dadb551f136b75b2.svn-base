#pragma once
#include <Trackable.h>
#include <EventSystem.h>
#include <EventListener.h>

#include <list>

#include "Animation.h"
#include "UnitTypes.h"
#include "PhysicsComponent.h"

const int DEFAULT_X = 0;
const int DEFAULT_Y = 0;
const int DEFAULT_FPS = 60;
const bool DEFAULT_LOOP = true;

class Unit : public EventListener
{
    protected:
        GraphicsSystem* mpGraphicsSystem;

        Vector2D mPos;
        vector<Animation> mAnims;
        int mCurrentIndex;
        int mFps;
        float* mTimeScale;
        float mTimePerFrame;
        bool mPlay = true;
        bool mDelete = false;
        

        //does PhysicsComponent collision see this object? i.e. collectible would be false, wall would be true
        bool mPhysicsColliderActive = true; 

        float mAngle = 0;

        PhysicsComponent mPhysics;

        EventSystem* mpEventSystem;

    public:
        int mType;
        Unit();
        Unit(Vector2D pos, int fps, bool physicsActive, bool gravityActive, bool physicsColliderActive);
        Unit(Vector2D pos, AnimationFrames* anim, int fps , bool loopAnimation, int type, bool physicsActive, bool gravityActive, bool physicsColliderActive);
        ~Unit();

        virtual void init();

        int getAnimCount(); //number of different animations
        int getCurrentIndex();
        int getCurrentFrameIndex();
        bool getIsPlaying();
        Vector2D getPosition();
        Vector2D getDimensions();
        bool getDelete();
        int getType();
        int getFps();
        float getTimeScale();
        float getFrameCount();
        bool getPhysicsColliderActive();
        float getAngle();

        void setDelete(bool del);
        void setType(int type);
        void setPosition(Vector2D pos);
        void setPhysicsColliderActive(bool active);
        void setAngle(float angle);

        virtual void handleEvent(const Event& currentEvent) {   }

        virtual void update(float timeElapsed);
        void draw();
        void changePosition(Vector2D newPos);
        void addAnimation(AnimationFrames* anim);
        void addAnimation(AnimationFrames* anim, int fps, bool loop);
        void setAnimation(int index);
        void setFps(int fps);
        void togglePlay(bool play);
        bool isMouseOver(Vector2D mousePos);
};