//BP
#pragma once
#include "Font.h"
#include "Sprite.h"
#include <iostream>
#include <Trackable.h>

class GraphicsSystem : public Trackable
{
private:
    Vector2D mBuffSize;
    GraphicsBuffer* mpBackBuff;
    ALLEGRO_DISPLAY* mpDisplay;
public:
    GraphicsSystem();
    GraphicsSystem(int hori, int vert);
    ~GraphicsSystem();
    bool init();
    void cleaner();
    void flip() { al_flip_display(); }
    GraphicsBuffer* getBackBuff() { return mpBackBuff; }
    bool saveBuff(GraphicsBuffer* saveBuff, string name);
    int getWidth() { return al_get_display_width(mpDisplay); }
    int getHeight() { return al_get_display_height(mpDisplay); }
    void displayMessage(int hori, int vert, Font* font, Color color, string text);
    void draw(int hori, int vert, Sprite sprite, float horiScale = 1.0f, float vertScale = 1.0f);
    void draw(GraphicsBuffer* pBackBuff, int hori, int vert, float horiScale = 1.0f, float vertScale = 1.0f);
    void displayMessage(GraphicsBuffer* pBackBuff, int hori, int vert, Font* font, Color color, string text);
    void draw(GraphicsBuffer* pBackBuff, int hori, int vert, Sprite sprite, float horiScale = 1.0f, float vertScale = 1.0f);
    void draw(GraphicsBuffer* pBackBuff, int horiCenter, int vertCenter, int horiPos, int vertPos, float horiScale = 1.0f, float vertScale = 1.0f, float angle = 0.0f);
};