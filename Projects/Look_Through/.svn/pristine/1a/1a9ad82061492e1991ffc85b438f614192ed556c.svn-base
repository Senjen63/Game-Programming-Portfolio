#include "ArrowUnit.h"
#include "UnitManager.h"
#include "Game.h"


ArrowUnit::ArrowUnit(Vector2D pos, AnimationFrames* anim, int fps, bool loopAnimation, int type, bool physicsActive,
    bool gravityActive, bool physicsColliderActive, float maxLife, Vector2D velocity) : Unit(pos, anim, fps, loopAnimation,
        type, physicsActive, gravityActive, physicsColliderActive)
{
    mMaxLife = maxLife;
    mVelocity = velocity;
}


ArrowUnit::~ArrowUnit()
{

}


void ArrowUnit::init()
{
    Unit::init();

    mpUnitManager = Game::getGame()->getUnitManager();

    mPhysics.setVelocity(mVelocity);
}


void ArrowUnit::cleanup()
{

}


void ArrowUnit::update(float timeElapsed)
{
    Unit::update(timeElapsed);
    
    mMaxLife -= timeElapsed / 1000;

    //if been alive too long, mark for deletion
    if (mMaxLife <= 0)
    {
        mDelete = true;
    }

    vector<Unit*> colliders = mpUnitManager->checkAnyCollisions(this, true);

    if (colliders.size() > 0)
    {
        for (auto collider : colliders)
        {
            if (collider->getType() != UnitTypes::PLAYER_UNIT_TYPE)
            {
                setDelete(true);
            }
        }
    }
}