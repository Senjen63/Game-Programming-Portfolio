#include "Animation.h"

Animation::Animation()
{
	mNumSprites = 0;
	mTimePerFrame = 0;
	mTimeLeft = 0;
	mCurrentSprite = 0;
	mLooping = false;
	mPause = false;
}
Animation::Animation(GraphicsBuffer* buffer, int size, int totalSprites, float timePFrame, bool loop, Sprite sprite)
{
	mCurrentSprite = 0;
	mNumSprites = totalSprites;
	mTimePerFrame = timePFrame;
	mTimeLeft = mTimePerFrame;
	mLooping = loop;
	mPause = false;

	for (int j = 0; j < size; j++)
	{
		for (int i = 0; i < size; i++)
		{
			sprite = Sprite(buffer, Vector2D((buffer->getWidth() / size) * i, (buffer->getHeight() / size) * j), Vector2D(buffer->getWidth() / size, buffer->getHeight() / size));
			mSpriteList.push_back(sprite);
		}
	}

}
Animation::~Animation()
{
	mSpriteList.clear();
	mNumSprites = 0;
	mTimePerFrame = 0;
	mTimeLeft = 0;
	mCurrentSprite = 0;
	mLooping = false;
	mPause = false;

}

void Animation::update(float removeTime)
{
	if (!mPause)
	{
		mTimeLeft -= removeTime;
		if (mTimeLeft <= 0)
		{
			mCurrentSprite++;
			mTimeLeft = mTimePerFrame;
			if (mCurrentSprite == mNumSprites) {
				if (mLooping) {
					mCurrentSprite = 0;
				}
			}
		}
	}
}

Sprite Animation::getCurrentSprite()
{
	return mSpriteList[mCurrentSprite];
}

void Animation::adjustTime(float speed)
{
	mTimePerFrame = speed;
}

void Animation::pause()
{
	if (mPause)
	{
		mPause = false;
	}
	else
	{
		mPause = true;
	}
}