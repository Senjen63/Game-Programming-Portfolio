#include "Animation.h"

Animation::Animation()
{
	mTimePerFrame = 1000.0 / 12;
	mTimeLeft = 0;
	mCurrentSprite = 0;
}

Animation::~Animation() {}

void Animation::addSprite(GraphicsBuffer* buffer, int x, int y, int height, int width)
{
	// create 4 sprites and add them to the vector
	int srcX, srcY;
	for (int i = 0; i < 6; i++)
	{
		srcX = 32 * i + x;
		srcY = 32 + y;
		Sprite mSprite(buffer, srcX, srcY, (buffer->getHeight() / 8), (buffer->getWidth() / 11));
		mSprites.push_back(mSprite);
	}
}

void Animation::singleSprite(GraphicsBuffer* buffer, int x, int y, int height, int width)
{
	Sprite mSprite(buffer, x, y, buffer->getHeight(), buffer->getWidth());
	mSprites.push_back(mSprite);
}

void Animation::update(double dt)
{
	// animates the sprites
	mTimeLeft -= dt;
	if (mTimeLeft <= 0)
	{
		// loops while there is remaining time
		mCurrentSprite++;
		mTimeLeft = mTimePerFrame + mTimeLeft;
		// if reached the end of the vector, move back to the front again
		if (mCurrentSprite >= mSprites.size())
			mCurrentSprite = 0;
	}
}

Sprite Animation::getCurrentSprite()
{
	return mSprites[mCurrentSprite];
}