#include "LevelManager.h"
#include "Level.h"
#include "Game.h"

LevelManager::LevelManager()
{
	Game* pGame = Game::getGameInstance();

	createLevel(pGame->ASSET_PATH + "level1.txt");
	createLevel(pGame->ASSET_PATH + "level2.txt");
	createLevel(pGame->ASSET_PATH + "level3.txt");

	this->mCurrentLevel = 1;
}

LevelManager::~LevelManager()
{
	clearLevels();
}

void LevelManager::createLevel(std::string filename)
{
	Level* level = new Level(filename);

	mpLevelList.push_back(level);
}

void LevelManager::deleteLevel(Level* pLevelToDelete)
{
	for (int i = 0; i < mpLevelList.size(); i++)
	{
		Level* pLevel = mpLevelList[i];

		if (pLevel == pLevelToDelete)
		{
			delete pLevel;
			mpLevelList.erase(mpLevelList.begin() + i);
			break;
		}
	}
}

void LevelManager::clearLevels()
{
	for (auto level : mpLevelList)
	{
		delete level;
	}

	mpLevelList.clear();
}

void LevelManager::increaseLevelIndex()
{
	if (mCurrentLevel == 3)
	{
		mCurrentLevel = 1;
	}
	else
	{
		mCurrentLevel++;
	}
}

void LevelManager::resetCurrentLevel()
{
	mCurrentLevel = 1;
}