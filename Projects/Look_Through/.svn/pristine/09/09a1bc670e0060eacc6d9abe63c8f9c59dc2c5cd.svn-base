#pragma once

#include <vector>

#include "Sprite.h"
#include "Conversion.h"
#include "AnimationManager.h"

class AnimationManager;

class Animation : public Trackable
{
	std::vector<Sprite>* mFrames = nullptr;

	float mFramesPerSecond = 1.0f;
	float mMillisecondsBetweenFrames = 1.0f;

	float mMillisecondsOnCurrentFrame = 0.0f;

	int mCurrentFrameIndex = 0;
	bool mLoop = true;

public:
	Animation() {}
	Animation(AnimationManager& am, std::string framesName, float fps, bool shouldLoop = false);

	~Animation() {}

	float getFramesPerSecond() { return mFramesPerSecond; }
	void setFramesPerSecond(float fps);

	float getMillisecondsBetweenFrames() { return mMillisecondsBetweenFrames; }
	void setMillisecondsBetweenFrames(float ms);

	Sprite getCurrentFrame() { return (*mFrames)[mCurrentFrameIndex]; }

	void update(float dt); // Delta time in milliseconds
};

