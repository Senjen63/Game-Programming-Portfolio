//     -------------------------------------------------------------------------
//     Final Project
//         AssetManager.hpp
//     
//             Created:
//                 09-04-2022
//             Author(s):
//                 Aven Presseisen
//     -------------------------------------------------------------------------

#pragma once

#include <string>
#include <unordered_map>

#include "Asset.hpp"
#include "BufferManager.hpp"
#include "GraphicsSystem.hpp"

class AssetManager
{
    std::vector< Asset * > mAssets;

    BufferManager * mpBufferManager;
    SoundSystem * mpSoundSystem;

    std::unordered_map< std::string, Sprite * > mSprites;
    std::unordered_map< std::string, Font * > mFonts;

public:
    AssetManager();
    ~AssetManager();

    void generateAssets( const GraphicsSystem * pGraphicsSystem );
    Font * getFont( const std::string & name );
    Sprite * getSprite( const std::string & name );
    void importAsset( Asset * asset );

    void playSound( const std::string & name ) const;
};
