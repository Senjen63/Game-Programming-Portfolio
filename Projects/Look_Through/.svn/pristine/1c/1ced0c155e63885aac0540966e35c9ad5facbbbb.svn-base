#pragma once

#include <PerformanceTracker.h>
#include <vector>
#include <iostream>
#include "GraphicsSystem.h"
#include "Vector2D.h"

using namespace std;

class Unit;

class UnitManager : public Trackable
{
private:
	vector<Unit*> mpUnits;
	int mNumUnits;

public:
	UnitManager();
	~UnitManager();

	void cleanup();

	void createAndAddUnit();
	void setUnitPos(Vector2D& position);
	void destroyUnit(Unit* pUnit);
	void deleteUnits(Vector2D mousePos);
	void update(float elapsedTime);
	void updateTiming(float amount);
	void doAnimation();
	void draw(GraphicsSystem* pGraphicsSystem);
	int getNumUnits();
	Unit* getUnit();
	Unit* getUnit(int index);
	Unit* getLastUnit();
	Vector2D getPosition(int index);

	void setLast();

	friend class Game;
};