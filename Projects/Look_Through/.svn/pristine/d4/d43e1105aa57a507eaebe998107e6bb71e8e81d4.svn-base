#include "LevelManager.h"

LevelManager::LevelManager()
{
    currentLevel = 0;
}

LevelManager::~LevelManager()
{
    cleanup();
}

void LevelManager::cleanup()
{

    for (int i = 0; i < mpLevels.size(); i++)
    {
        Level* pUnit = mpLevels[i];
        delete pUnit;
    }

    mpLevels.clear();
}

// creates a new level
void LevelManager::changeLevel(int levelNum)
{
    currentLevel = levelNum - 1;
}

void LevelManager::createAndAddLevel(int levelNum, Animation anim, GraphicsSystem* mpGraphics, GraphicsBuffer* buffer)
{
    Level* pLevel = new Level();
    mpLevels.push_back(pLevel);
    pLevel->loadLevel(levelNum);
	pLevel->loadWalls(anim, mpGraphics, buffer, levelNum);
}

void LevelManager::loadLevel(GraphicsSystem* mpGraphics)
{
    mpLevels[currentLevel]->draw(mpGraphics);
}

bool LevelManager::collisionWithWall(Unit* snakeHead)
{
    return mpLevels[currentLevel]->collideWithWall(snakeHead);
}

bool LevelManager::isFoodOnWall(Vector2D pos)
{
    return mpLevels[currentLevel]->isFoodOnWall(pos);
}