#pragma once
#include <vector>
#include <iostream>
#include <PerformanceTracker.h>
#include "GraphicsSystem.h"
#include "Vector2D.h"
using namespace std;
class Unit;
class UnitManager : public Trackable
{
private:
	vector<Unit*> mpUnits;
	int mNumUnits;

public:
	UnitManager();
	~UnitManager();
	void CleanUp();

	void CreateUnit();
	void SetUnitPos(Vector2D& position);
	Vector2D GetPosition(int index);
	void DestroyUnit(Unit* pUnit);
	void DestroyUnits(Vector2D mousePos);
	void Update(float elapsedTime);
	void UpdateTime(float amount);
	int GetNumUnits();
	Unit* GetUnit();
	Unit* GetUnit(int index);
	Unit* GetLastUnit();
	void DoAnimation();
	void Draw(GraphicsSystem* pGraphicsSystem);
	void SetLastUnit();

	friend class Game;
};