
#include "GraphicsBuffer.h"
#include "Color.h"

GraphicsBuffer::GraphicsBuffer()
{
	mpBitmap = NULL;
	mOwnsBitmap = false;
}

GraphicsBuffer::GraphicsBuffer(string& fileName)
{
	mpBitmap = SDL_LoadBMP(fileName.c_str());

	if (mpBitmap == NULL)
	{
		cout << "Error loading bitmap " << SDL_GetError() << endl;
	}

	mOwnsBitmap = true;
}

GraphicsBuffer::GraphicsBuffer(SDL_Surface* pBitmap)
{
	mpBitmap = pBitmap;
	mOwnsBitmap = false;
}

GraphicsBuffer::GraphicsBuffer(Color color, int width, int height)
{
	//Are the commented out needed? Idk man
	//SDL_Surface* oldBitmap = al_get_target_bitmap();

	mSaveColor = color;

	mpBitmap = SDL_CreateRGBSurface(0, width, height, 32, 0, 0, 0, 0);


	SDL_FillRect(mpBitmap, NULL, SDL_MapRGBA(mpBitmap->format, color.getColor().r, color.getColor().g, color.getColor().b, color.getColor().a));
	//SDL_SetAlpha(mpBitmap, 0, 0);
	//assert(mpBitmap);

	//al_set_target_bitmap(oldBitmap);

	mOwnsBitmap = false;
}

GraphicsBuffer::~GraphicsBuffer()
{
	if (mOwnsBitmap)
	{
		SDL_FreeSurface(mpBitmap);
	}
}

void GraphicsBuffer::clearToColor(Color color)
{
	SDL_FillRect(mpBitmap, NULL, SDL_MapRGB(mpBitmap->format, color.getColor().r, color.getColor().g, color.getColor().b));
}

//accessors
SDL_Surface* GraphicsBuffer::getBitmap()
{
	return mpBitmap;
}

int GraphicsBuffer::getHeight()
{
	return mpBitmap->h;
}

int GraphicsBuffer::getWidth()
{
	return mpBitmap->w;
}