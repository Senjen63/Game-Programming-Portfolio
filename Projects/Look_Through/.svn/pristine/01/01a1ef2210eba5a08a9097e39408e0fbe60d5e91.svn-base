#include "Color.h"

/*
Initialize to default values, currently solid black (0, 0, 0, 255)
*/
Color::Color()
{
	mr = DEFAULT_RED;
	mg = DEFAULT_GREEN;
	mb = DEFAULT_BLUE;
	ma = DEFAULT_ALPHA;

	updateInternalColor();
}


/*
Initialize to the provided rgb values with the default alpha value, currently 255
*/
Color::Color(unsigned char r, unsigned char g, unsigned char b)
{
	mr = r;
	mg = g;
	mb = b;
	ma = DEFAULT_ALPHA;

	updateInternalColor();
}


/*
Initialize to the provided rgba values.
*/
Color::Color(unsigned char r, unsigned char g, unsigned char b, unsigned char a)
{
	mr = r;
	mg = g;
	mb = b;
	ma = a;

	updateInternalColor();
}


/*
The Color class doesn't use any dynamic memory so we don't need to do anything here.
*/
Color::~Color()
{

}


void Color::updateInternalColor()
{
	mInternalColor = al_map_rgba(mr, mg, mb, ma);
}


unsigned char Color::getR() const
{
	return mr;
}


unsigned char Color::getG() const
{
	return mg;
}


unsigned char Color::getB() const
{
	return mb;
}


unsigned char Color::getA() const
{
	return ma;
}


/*
Update the stored color to the provided rgb values, leaves the alpha channel unchanged.
*/
void Color::setColor(unsigned char r, unsigned char g, unsigned char b)
{
	mr = r;
	mg = g;
	mb = b;

	updateInternalColor();
}


/*
Updates the stored color to the provided rgba values.
*/
void Color::setColor(unsigned char r, unsigned char g, unsigned char b, unsigned char a)
{
	mr = r;
	mg = g;
	mb = b;
	ma = a;

	updateInternalColor();
}
