#include "UnitManager.h"
#include "Unit.h"

UnitManager::~UnitManager()
{
	clearAll();
}

void UnitManager::createUnit( int x, int y, float targetTime, GraphicsBuffer* anim1, GraphicsBuffer* anim2 )
{
	Unit* aUnit = new Unit( x, y );
	aUnit->addAnim( anim1, targetTime);
	aUnit->addAnim( anim2, targetTime );
	mpUnits.push_back( aUnit );
}

void UnitManager::addUnit( Unit* unit )
{
	mpUnits.push_back( unit );
}

void UnitManager::deleteUnit( Unit* unit )
{
	for ( int i = 0; i < mpUnits.size(); i++ )
	{
		Unit* pUnit = mpUnits[ i ];
		if ( pUnit == unit )
		{
			delete pUnit;
			mpUnits.erase( mpUnits.begin() + i );
			break;
		}
	}
}

void UnitManager::clearAll()
{
	for (int i = 0; i < mpUnits.size(); i++)
	{
		delete mpUnits[i];
	}
	mpUnits.clear();
}

void UnitManager::updateAll( float deltaTime )
{
	for (int i = 0; i < mpUnits.size(); i++)
	{
		mpUnits[i]->update( deltaTime );
	}
}

void UnitManager::drawAll()
{
	for (int i = 0; i < mpUnits.size(); i++)
	{
		mpUnits[i]->draw( 1 );
	}
}

Unit* UnitManager::getLastUnit()
{
	if ( mpUnits.size() > 0 )
		return mpUnits[ mpUnits.size() - 1 ];
	else
		return nullptr;
}