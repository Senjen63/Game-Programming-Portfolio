/*
Author: David Silverman
Class: GPR-250-01
Assignment: Assignment 3
Certification of Authenticity:
I certify that this assignment is entirely my own work.
 */


#pragma once
#include "inputsystem.h"

using namespace std;

/* Pre:  Nothing
*  Post:  An Input System
*  Purpose:  Create an input system
*********************************************************/
InputSystem::InputSystem()
{
	
}

/* Pre:  The input system
*  Post:  Nothing
*  Purpose:  Destroy the input system
*********************************************************/
InputSystem::~InputSystem()
{

}

/* Pre:  Nothing
*  Post:  Nothing
*  Purpose:  Initialize the input system
*********************************************************/
void InputSystem::Init()
{
	al_install_keyboard();
	al_install_mouse();
}

/* Pre:  The system
*  Post:  Nothing
*  Purpose:  Cleanup the system for deletion
*********************************************************/
void InputSystem::Cleanup()
{
	al_uninstall_mouse();
	al_uninstall_keyboard();
}

/* Pre:  Nothing
*  Post:  A keycode
*  Purpose:  Get a key pressed
*********************************************************/
bool InputSystem::getKeyState(mKeyCode code)
{
	ALLEGRO_KEYBOARD_STATE mState;
	al_get_keyboard_state(&mState);
	return al_key_down(&mState, code);
}

/* Pre:  Nothing
*  Post:  A mouse button
*  Purpose:  Get mouse clicked
*********************************************************/
bool InputSystem::getLeftMouseState()
{
	ALLEGRO_MOUSE_STATE mMouseState;
	al_get_mouse_state(&mMouseState);
	if (mMouseState.buttons & 1)
	{
		return true;
	}
	else
	{
		return false;
	}
}

/* Pre:  Nothing
*  Post:  A mouse button
*  Purpose:  Get mouse clicked
*********************************************************/
bool InputSystem::getRightMouseState()
{
	ALLEGRO_MOUSE_STATE mMouseState;
	al_get_mouse_state(&mMouseState);
	if (mMouseState.buttons & 2)
	{
		return true;
	}
	else
	{
		return false;
	}
}

/* Pre:  Nothing
*  Post:  A position
*  Purpose:  Get the unit position
*********************************************************/
Vector2D InputSystem::getPosition()
{
	ALLEGRO_MOUSE_STATE mMouseState;
	al_get_mouse_state(&mMouseState);
	mPos = Vector2D(mMouseState.x, mMouseState.y);
	return mPos;
}