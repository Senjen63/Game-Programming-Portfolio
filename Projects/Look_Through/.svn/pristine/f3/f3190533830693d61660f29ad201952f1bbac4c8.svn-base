#include "HUD.h"

HUD::HUD()
{

}

HUD::HUD(Font* font, Color color)
{
	mpFont = font;
	mColor = color;
}

HUD::~HUD()
{
	//cleanUp();
}

void HUD::cleanUp()
{
	delete mpFont;
}

void HUD::operator=(const HUD& aHud)
{
	mpFont = aHud.mpFont;
	mColor = aHud.mColor;
}

void HUD::display(GraphicsSystem* system, int points, float frames, int time)
{
	system->writeText(POINTS_LOCATION, mpFont, mColor, (POINTS_TEXT + to_string(points)));
	system->writeText(FRAMES_LOCATION, mpFont, mColor, (FRAMES_TEXT + to_string(frames)));
	system->writeText(TIMER_LOCATION, mpFont, mColor, (TIMER_TEXT + to_string(time)));
}

void HUD::display(GraphicsSystem* system, int points, float frames, int time, string pointsText, string framesText, string timerText)
{
	system->writeText(POINTS_LOCATION, mpFont, mColor, (pointsText + ": " + to_string(points)));
	system->writeText(FRAMES_LOCATION, mpFont, mColor, (framesText + ": " + to_string(frames)));
	system->writeText(TIMER_LOCATION, mpFont, mColor, (timerText + ": " + to_string(time)));
}