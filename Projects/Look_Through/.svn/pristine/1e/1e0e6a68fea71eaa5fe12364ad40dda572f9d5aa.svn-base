#include "unit.h"
#include <iostream>
using namespace std;

Unit::Unit()
{
	mLocation = Vector2D(400,300);
	mSmurf = true;

}

Unit::Unit(Animation aniSmurf, Animation aniDean)
{
	mSmurf = true;
	mpAniSmurf = aniSmurf;
	mpAniDean = aniDean;
}
Unit::~Unit()
{
	mSmurf = true;
	
}

void Unit::setSpeed(int speed)
{
	mpAniSmurf.speedUpSlowDown(speed);
	mpAniDean.speedUpSlowDown(speed);
}

float Unit::getSpeed()
{
	return mpAniSmurf.getTime();
}

void Unit::setAnimation()//switch to new animation
{
	if (mSmurf == true)
	{
		mSmurf = false;//first animation
	}	
	else 
	{
		mSmurf = true; //second animation
	}
		
}

void Unit::setLocation(Vector2D location)
{
	mLocation = location;
}

void Unit::update(double dt)//adjust state of Unit: call Animation's update function
{
	if (mSmurf == true)
	{
		mpAniSmurf.update(dt);
	}
	else
	{
		mpAniDean.update(dt);
	}
}
void Unit::draw(GraphicsSystem*& pSystem)//draw the current animation's current sprite in location of unit
{
	int locX = 1;
	int locY = 1;
	if (mSmurf == true)
	{
		pSystem->draw(mLocation.getX(), mLocation.getY(), mpAniSmurf.getCurrentSprite(), 1);
	}	
	else
	{
		pSystem->draw(mLocation.getX(), mLocation.getY(), mpAniDean.getCurrentSprite(), 1);
	}
}