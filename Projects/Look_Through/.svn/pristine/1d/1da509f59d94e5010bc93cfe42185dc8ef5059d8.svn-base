#pragma once

#include "Text.h"
#include <Trackable.h>
#include <vector>

enum MenuType
{
	MAIN = 0,
	OPTIONS,
	VICTORY,
	GAMEOVER
};

class Menu : public Trackable
{
public:
	Menu(MenuType type);
	~Menu();

	//menu functions
	void resetTexts(std::string state = "");
	void resetHighlight();
	void setText(std::string newText, int lineNum) { mpTexts[lineNum]->setText(newText); }
	void setType(MenuType type) { mType = type; resetTexts(); }
	void goDown();
	void goUp();
	int getCurrentHighlight() { return mCurrentHighlight; }

	void draw();

	//variables for menus
	const float MENU_OFFSET = 24;
	const float MENU_SPACING = 60;
	const int MENU_FONT_SIZE = 26;
	
	const int MENU_MOVE_DELAY = 15;
	const int MENU_NUM_LINES = 7;
	const int OPTIONS_NUM_LINES = 8;
	const std::string FONT_ASSET_PATH = "assets/cour.ttf";

	const Color MENU_COLOR = Color(0,255,0);
	const Color HIGHLIGHT_COLOR = Color(255, 255, 0);
private:
	std::vector<Text*> mpTexts;
	Font* mpFont;
	MenuType mType;
	int mCurrentHighlight;
};