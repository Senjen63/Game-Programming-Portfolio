
#include <iostream>
#include <cassert>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>
#include <Timer.h>

#include "Unit.h"
#include "Game.h"


//----------------------------------------Unit----------------------------------------
Unit::Unit()
{
	xPos = 0;
	yPos = 0;
	currentAnimation = nullptr;
}

Unit::Unit(int x, int y, Animation* animation)
{
	xPos = x;
	yPos = y;
	currentAnimation = animation;
}

Unit::~Unit()
{

}

//change to new animation
void Unit::setAnimation(Animation* newAnimation) 
{
	this->currentAnimation = newAnimation;
}

//adjust state of animation through Animation's update function + other
void Unit::update(float timeElapsed)
{
	currentAnimation->update(timeElapsed);
}

//draw current sprite in unit location
void Unit::draw()
{
	game->getGraphicsSystem()->draw(xPos, yPos, currentAnimation->getCurrentSprite());
}