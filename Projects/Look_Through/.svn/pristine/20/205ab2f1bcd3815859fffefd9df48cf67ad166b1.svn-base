/*
Author: David Silverman
Class: GPR-250-01
Assignment: Assignment 2
Certification of Authenticity:
I certify that this assignment is entirely my own work.
 */

#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>
#include <Trackable.h>
#include <Vector2D.h>

#include <vector>

#include "graphicsbuffer.h"
#include "sprite.h"

using namespace std;

class Animation : public Trackable
{
		friend class Unit;
		const int SIXTY_FRAMES = 62.5f;
		vector<Sprite> mFrames;
		float mTiming;
		int mCurrentSprite;
		int mLastSprite;
		int mTotalSprites;
		float mSprWidth;
		float mSprHeight;
		bool mIsEndSprite;
	public:
		Animation();
		Animation(float time);
		Animation(GraphicsBuffer* buffer, int rows, int columns, float bufferWidth, float bufferHeight, float time);
		~Animation();
		void addSprite(Sprite* spri);
		void addSprite(GraphicsBuffer* buffer, int rows, int columns, float bufferWidth, float bufferHeight);
		void update();
		Sprite getCurrentSprite();
		void speedUp(float rate);
		void slowDown(float rate);
		Animation operator = (Animation const& ani);
};