#pragma once
#include "GraphicsBuffer.h"
#include <unordered_map>

typedef std::string BufferKey;

class GraphicsBufferManager : public Trackable
{
public:
	GraphicsBufferManager();
	~GraphicsBufferManager() { cleanup(); }

	void cleanup(); //clears all GraphicsBuffers

	void createBuffer(ALLEGRO_BITMAP* bitmap, const BufferKey& key);
	void createBuffer(int width, int height, const BufferKey& key);
	void createBuffer(std::string filename, const BufferKey& key);
	void createBuffer(GraphicsBuffer* buffer, const BufferKey& key);
	void deleteBuffer(const BufferKey& key);

	GraphicsBuffer* getBuffer(const BufferKey& key) const;

private:
	std::unordered_map<BufferKey, GraphicsBuffer*> mMap;
};
