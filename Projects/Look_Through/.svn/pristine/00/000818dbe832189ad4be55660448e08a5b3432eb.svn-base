#pragma once

#include <vector>

#include "Trackable.h"
#include "Unit.h"
#include "Vector2D.h"
#include "UnitParameters.h"

class UnitManager : public Trackable
{
	std::vector<Unit*> mUnits;

public:
	UnitManager();
	~UnitManager() { cleanup(); }

	Unit& createUnit(const UnitParameters &params); // Creates unit with parameters from UnitParameters
	bool deleteUnit(Unit& unit); // Returns whether or not unit found
	std::vector<Unit*> getUnitsAtPos(Vector2D pos);

	int getNumUnits() { return mUnits.size(); }
	Unit* getUnit(int index) { return mUnits[index]; }

	void cleanup();

	void update(float dt); // dt in milliseconds
	void draw(GraphicsSystem* gSys);
};

