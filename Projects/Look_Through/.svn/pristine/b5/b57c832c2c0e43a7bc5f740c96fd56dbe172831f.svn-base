#include "Unit.h"


Unit::Unit(Vector2D startPos, std::unordered_map<std::string, Animation*> animations, std::string startAnimName)
{
	mPosition = startPos;
	mpAnimations = animations;

	mpCurrentAnimation = nullptr;

	if (startAnimName != "")
	{
		setCurrentAnimation(startAnimName);
	}
}


void Unit::addAnimation(std::string animName, Animation* newAnim)
{
	mpAnimations[animName] = newAnim;
}


Animation* Unit::getAnimation(std::string animName)
{
	assert(mpAnimations.find(animName) != mpAnimations.end());
	return mpAnimations[animName];
}


void Unit::setCurrentAnimation(std::string animName)
{
	assert(mpAnimations.find(animName) != mpAnimations.end());
	mpCurrentAnimation = mpAnimations[animName];
	mCurrentAnimationName = animName;
}


void Unit::update(float dt)
{
	mpCurrentAnimation->update(dt);
}


void Unit::draw(GraphicsSystem* gSys)
{
	if (mpCurrentAnimation != nullptr)
	{
		gSys->draw(mPosition, mpCurrentAnimation->getCurrentFrame());
	}
}
