#include "LanguageManager.h"
#include <fstream>
#include <algorithm>
#include <string>
#include "Game.h"
#include "OptionsManager.h"

LanguageManager::LanguageManager()
{
}

LanguageManager::~LanguageManager()
{
}

void LanguageManager::init(int language)
{
	Game* pGame = Game::getInstance();

	string menuFileName;
	string hudFileName;

	if (language == pGame->getOptionsManager()->ENGLISH)
	{
		menuFileName = ENGLISH_MENU_FILENAME;
		hudFileName = ENGLISH_HUD_FILENAME;
	}
	else if (language == pGame->getOptionsManager()->SPANISH)
	{
		menuFileName = SPANISH_MENU_FILENAME;
		hudFileName = SPANISH_HUD_FILENAME;
	}
	else if (language == pGame->getOptionsManager()->FRENCH)
	{
		menuFileName = FRENCH_MENU_FILENAME;
		hudFileName = FRENCH_HUD_FILENAME;
	}

	string tempStr;

	ifstream inputMenu("../GalahadAssets/data/" + menuFileName);
	if (inputMenu.good())
	{
		string key;

		while (!inputMenu.eof())
		{
			inputMenu >> key;
			if (key == "play_text")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "option_text")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "sound_text")
			{
				inputMenu >> tempStr;

				replace(tempStr.begin(), tempStr.end(), '_', ' ');

				mTextMap[key] = tempStr;
			}
			else if (key == "sound_change_text_on")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "sound_change_text_off")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "difficulty_text")
			{
				inputMenu >> tempStr;

				replace(tempStr.begin(), tempStr.end(), '_', ' ');

				mTextMap[key] = tempStr;
			}
			else if (key == "difficulty_change_text_easy")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "difficulty_change_text_normal")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "difficulty_change_text_hard")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "language_text")
			{
				inputMenu >> tempStr;

				replace(tempStr.begin(), tempStr.end(), '_', ' ');

				mTextMap[key] = tempStr;
			}
			else if (key == "language_change_text_english")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "language_change_text_french")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "language_change_text_spanish")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "title_text")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "load_game_text")
			{
				inputMenu >> tempStr;

				replace(tempStr.begin(), tempStr.end(), '_', ' ');

				mTextMap[key] = tempStr;
			}
			else if (key == "quit_text")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "back_text")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "game_over")
			{
				inputMenu >> tempStr;

				replace(tempStr.begin(), tempStr.end(), '_', ' ');

				mTextMap[key] = tempStr;
			}
			else if (key == "restart")
			{
				inputMenu >> tempStr;

				mTextMap[key] = tempStr;
			}
		}
	}
	inputMenu.close();

	ifstream inputHud("../GalahadAssets/data/" + hudFileName);
	if (inputHud.good())
	{
		string key;

		while (!inputHud.eof())
		{
			inputHud >> key;
			if (key == "score_text")
			{
				inputHud >> tempStr;

				mTextMap[key] = tempStr;
			}
			else if (key == "lives_text")
			{
				inputHud >> tempStr;

				mTextMap[key] = tempStr;
			}
		}
	}
	inputHud.close();
}

string LanguageManager::getText(const TextKey& key)
{
	auto text = mTextMap.find(key);

	if (text != mTextMap.end())
	{
		return text->second;
	}
	else
	{
		return nullptr;
	}
}
