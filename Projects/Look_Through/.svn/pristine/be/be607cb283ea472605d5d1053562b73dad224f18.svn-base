
#include "Unit.h"
#include "Game.h"

Unit::Unit()
{
	mPosition = Vector2D();
	mCurrentAnim = 1;
	mTime = 0;
	mpAnimation1 = new Animation(Game::getInstance()->getGraphicsBuffer(SMURF_FILENAME), NUM_FRAMES, STARTING_TIMING, true);
	mpAnimation2 = new Animation(Game::getInstance()->getGraphicsBuffer(DEAN_FILENAME), NUM_FRAMES, STARTING_TIMING, true);

	mPaused = false;
}

Unit::Unit(Animation* pAnim1, Animation* pAnim2, Vector2D position)
{
	mPosition = position;
	mCurrentAnim = 1;
	mTime = 0;
	mpAnimation1 = pAnim1;
	mpAnimation2 = pAnim2;

	mPaused = false;
}

Unit::~Unit()
{
	mCurrentAnim = 1;
	mTime = 0;

	delete mpAnimation1;
	delete mpAnimation2;

	mpAnimation1 = nullptr;
	mpAnimation2 = nullptr;
}

float Unit::getTiming()
{
	return mpAnimation1->getTiming();
}

void Unit::update(float elapsedTime)
{
	mTime += elapsedTime;
	
	if (mTime > getTiming() && !mPaused)
	{
		mpAnimation1->update();
		mpAnimation2->update();
	}
}

void Unit::draw(GraphicsSystem* pGraphicsSystem)
{
	if (mCurrentAnim == 1)
		pGraphicsSystem->draw(currentSprite()->getLocation(), currentSprite(), getPosition().getX(), getPosition().getY());
	else
		pGraphicsSystem->draw(currentSprite()->getLocation(), currentSprite(), getPosition().getX(), getPosition().getY());
}

Sprite* Unit::currentSprite()
{
	if (mCurrentAnim == 1)
		return mpAnimation1->getCurrentSprite();
	else
		return mpAnimation2->getCurrentSprite();
}

void Unit::setAnimation()
{
	if (mCurrentAnim == 1)
		mCurrentAnim = 0;
	else
		mCurrentAnim = 1;
}

void Unit::setTiming(float timing)
{
	mpAnimation1->adjustTiming(timing);
	mpAnimation2->adjustTiming(timing);
}

void Unit::setPosition(Vector2D position)
{
	mPosition = position;
}

void Unit::setPaused()
{
	if (mPaused)
		mPaused = false;
	else
		mPaused = true;
}

Vector2D Unit::getPosition()
{
	return mPosition;
}
