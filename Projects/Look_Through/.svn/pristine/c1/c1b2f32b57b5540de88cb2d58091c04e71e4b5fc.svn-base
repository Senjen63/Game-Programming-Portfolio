#pragma once

#include<Trackable.h>
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
//#include <allegro5/allegro_audio.h>
//#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>
#include <Vector2D.h>
#include "GraphicsBuffer.h"
#include "Font.h"
#include "Color.h"
#include "Sprite.h"

enum class Alignment
{
	left = ALLEGRO_ALIGN_LEFT,
	right = ALLEGRO_ALIGN_RIGHT,
	center = ALLEGRO_ALIGN_CENTER,
};

class GraphicsSystem : public Trackable
{
public:
	GraphicsSystem(int width, int height);
	~GraphicsSystem();

	int getWidth() const { return width; };
	int getHeight() const { return height; };

	void flip() const;
	void draw(const Vector2D& loc, const Sprite& sprite, float scale = 1.0f);
	void draw(const GraphicsBuffer& buffer, const Vector2D& loc, const Sprite& sprite, float scale = 1.0f);
	void drawText(const Vector2D& loc, const Font& font, const Color& color, const Alignment alignment, const std::string& text);
	void drawText(const GraphicsBuffer& buffer, const Vector2D& loc, const Font& font, const Color& color, const Alignment alignment, const std::string& text);
	void saveBuffer(const GraphicsBuffer& buffer, const string& path) const;

private:
	int width;
	int height;

	ALLEGRO_DISPLAY* display;

	void Init();
	void CleanUp();
};