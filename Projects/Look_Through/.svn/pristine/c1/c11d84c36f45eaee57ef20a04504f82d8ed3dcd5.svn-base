#pragma once

#include <string>
#include <Trackable.h>
#include "GraphicsBuffer.h"
#include "Vector2D.h"
#include "Color.h"

class Sprite : public Trackable
{
private:
	GraphicsBuffer* mpBuffer;
	Vector2D mSourcePos;
	Vector2D mSize;

	bool mOwnsBuffer;

public:
	Sprite(std::string fullPath, Vector2D sourcePos, Vector2D size);
	Sprite(std::string fullPath, Vector2D sourcePos = Vector2D(0, 0));
	Sprite(GraphicsBuffer* buffer, Vector2D sourcePos, Vector2D size);
	Sprite(GraphicsBuffer* buffer);
	Sprite(Color color, Vector2D size);
	~Sprite();

	Vector2D getSourcePos() { return mSourcePos; }
	int getWidth() { return mSize.getX(); }
	int getHeight() { return mSize.getY(); }
	Vector2D getSize() { return mSize; }
	GraphicsBuffer* getBuffer() { return mpBuffer; }

	void setSourcePos(Vector2D sourcePos) { mSourcePos = sourcePos; }
	void setWidth(int width) { mSize.setX(width); }
	void setHeight(int height) { mSize.setY(height); }
	void setSize(Vector2D size) { mSize = size; }
};

