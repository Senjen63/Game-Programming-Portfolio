#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>

#include <iostream>
#include <Vector2D.h>
#include "Color.h"
#include "Font.h"
#include "Sprite.h"
using namespace std;

const int DISPLAY_HEIGHT = 600;
const int DISPLAY_WIDTH = 840;

class GraphicsSystem : public Trackable
{
public:
	friend class Game;
	friend class Level;

	GraphicsSystem();
	//GraphicsSystem(int height, int width);
	~GraphicsSystem();

	bool init(int height, int width);
	void cleanUp();

	int getHeight();
	int getWidth();

	void flip();

	void draw(GraphicsBuffer* pBuff);
	void draw(Vector2D location, Sprite* sprite, float width, float height);
	void draw(GraphicsBuffer* pBuff, Vector2D location, float scale);
	void draw(GraphicsBuffer* pTarget, GraphicsBuffer* pBuff, Vector2D location, float scale);
	void draw(GraphicsBuffer* pGraphicsBuffer, Vector2D location, Sprite* sprite, float scale);
	void drawText(Vector2D location, Font* pFont, Color color, string text);
	void drawText(GraphicsBuffer* pGraphicsBuffer, Vector2D location, Font* pFont, Color color, string text);

	void saveBuffer(GraphicsBuffer* pBuff, string filename);
private:
	ALLEGRO_DISPLAY* getBackBuff();
	ALLEGRO_BITMAP* getBitmap();

	ALLEGRO_DISPLAY* mpDisplay;
};