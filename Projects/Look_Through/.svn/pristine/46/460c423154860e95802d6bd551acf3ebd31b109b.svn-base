#include "GraphicsBufferManager.h"
#include "Game.h"

GraphicsBufferManager::GraphicsBufferManager()
{

}


GraphicsBufferManager::~GraphicsBufferManager()
{
	unordered_map<string, GraphicsBuffer*>::iterator it = mpBuffers.begin();
	for (it; it != mpBuffers.end(); it++)
	{
		delete it->second;
		it->second = nullptr;
	}

	mpBuffers.clear();
}


GraphicsBuffer* GraphicsBufferManager::getBackBuffer()
{
	return Game::getInstance()->getDisplay()->getBackBuffer();
}


void GraphicsBufferManager::deleteBuffer(string key)
{
	delete mpBuffers[key];
	mpBuffers[key] = nullptr;
	mpBuffers.erase(key);
}


void GraphicsBufferManager::deleteAll()
{
	unordered_map<string, GraphicsBuffer*>::iterator it = mpBuffers.begin();
	for (it; it != mpBuffers.end(); it++)
	{
		delete it->second;
		it->second = nullptr;
	}

	mpBuffers.clear();
}


GraphicsBuffer*& GraphicsBufferManager::operator [](string key)
{
	return mpBuffers[key];
}
