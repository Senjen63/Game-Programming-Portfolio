#pragma once
#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <queue>
#include <Vector2D.h>
#include "Unit.h"
#include "GraphicsSystem.h"

const int TILE_SIZE = 60;
class SnakeManager : public Trackable
{
public:
	SnakeManager();
	~SnakeManager();


	void Update(Vector2D dir);
	void Move(bool isGrowing); 
	void Draw(); 
	void Clear();

	/*
	Clear: removes previous snake, if there is one

	Update: get direction (makes new head location by getting current head location and adding the vector (1,0) for right, (0,1) for down, etc.
	Move: Adds head location, pops out last location (include powerup check, only pop last location if no powerup)
	Draw: Draws (Creates and draws buffer at each location in the queue)


	*/

private:
	std::queue<Vector2D> snakeLoc;
	Vector2D currentHead;

};

