#include "UnitManager.h"

UnitManager::UnitManager()
{
	mSize = 0;
}

UnitManager::~UnitManager()
{
	clearAll();
}

void UnitManager::addUnit( Sprite smurf, Vector2D pos)
{
	Unit* unit = new Unit(pos.getX(), pos.getY(), smurf);
	mUnitList.push_back(unit);
	mSize++;
}

void UnitManager::addUnit(int x, int y, Animation* smurf)
{
	Unit* unit = new Unit(x, y, smurf);
	mUnitList.push_back(unit);
	mSize++;
}

void UnitManager::addUnit(int x, int y, Animation* smurf, Animation* dean)
{
	Unit* unit = new Unit(x, y, smurf, dean);
	mUnitList.push_back(unit);
	mSize++;
}

void UnitManager::removeUnit()
{
	mSize--;
	mUnitList.erase(mUnitList.begin());
}

Unit* UnitManager::getUnit(int unitSpot)
{
	if (unitSpot < mSize)
	{
		return mUnitList[unitSpot];
	}
	return nullptr;
}

int UnitManager::getSize()
{
	return mSize;
}

void UnitManager::clearAll()
{
	for (int i = 0; i < mSize; i++)
	{
		delete mUnitList[i];
	}
	mSize = 0;
	mUnitList.clear();
}

void UnitManager::updateAll(float time)
{
	for (int i = 0; i < mSize; i++)
	{
		mUnitList[i]->update(time);
	}
}

void UnitManager::drawAll(GraphicsSystem* display)
{
	Vector2D pos;
	for (int i = 0; i < mSize; i++)
	{
		
		mUnitList[i]->drawSprite(display, mUnitList[i]->getPos());
	}
}

void UnitManager::drawAll(GraphicsSystem* display, Vector2D pos)
{
	for (int i = 0; i < mSize; i++)
	{

		mUnitList[i]->drawSprite(display,pos);
	}
}
