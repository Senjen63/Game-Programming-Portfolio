#include <EventListener.h>

#include "GraphicsSystem.h"

class Hud : public EventListener
{
public:
    Hud(const std::string& fontFilePath, int fontSize, const Color& color = COLOR_WHITE);
    Hud() = default;
    ~Hud();

    void init();
    void cleanUp();

    int getScore() const { return mScore; }
    float getElapseTime() const { return mElapseTime; }
    float getFPS() const { return mFPS; }

    Font* getFont() const { return mpFont; }
    Color getColor() const { return mColor; }

    void setFont(const std::string& pathToFont, int fontSize);
    void setColor(Color color) { mColor = color; }

    void setScore(int score) { mScore = score; }
    void setFPS(float fps) { mFPS = fps; }
    void resetElapseTime() { mElapseTime = 0; }

    void update(double deltaTime);

    void handleEvent(const Event& theEvent);

    void draw(GraphicsSystem& sys);

private:
    bool mInitted = false;

    int mScore = 0;
    float mElapseTime = 0;
    float mFPS = 0;

    Font* mpFont = nullptr;
    Color mColor = COLOR_WHITE;
};
