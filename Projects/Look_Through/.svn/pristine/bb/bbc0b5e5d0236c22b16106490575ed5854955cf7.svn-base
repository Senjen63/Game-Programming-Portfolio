#pragma once
#include <PerformanceTracker.h>
#include <vector>

using namespace std;

enum class UnitTypes;
class Unit;
class GraphicsBuffer;

class UnitManager : public Trackable
{
public:
	UnitManager() {};
	~UnitManager();

	void createUnit( int x, int y, UnitTypes type, float targetTime, GraphicsBuffer* anim1 );
	void createUnit(int x, int y, int r, int c, UnitTypes type, float targetTime, GraphicsBuffer* anim, bool isSnake);
	void addUnit( Unit* unit );
	void deleteUnit( Unit* unit );
	void checkCollision(Unit* unit);
	void updateAll( float deltaTime );
	void drawAll();
	void clearAll();

	Unit* getLastUnit();
	Unit* getFirstUnit();
	vector< Unit* > getUnits() { return mpUnits; };

private:
	vector< Unit* > mpUnits;
};