#include "Sprite.h"

using namespace std;

std::vector<Sprite> Sprite::slice(const GraphicsBuffer* pBuffer, int spriteWidth, int spriteHeight)
{
    // Find numSprites to preallocate memory 
    int numSprites = (pBuffer->getHeight() / spriteHeight) * (pBuffer->getWidth() / spriteWidth);
    vector<Sprite> sprites = vector<Sprite>();
    sprites.reserve(numSprites);

    for (int y = 0; y < pBuffer->getHeight(); y += spriteHeight)
    {
        for (int x = 0; x < pBuffer->getWidth(); x += spriteWidth)
        {
            sprites.push_back(Sprite(pBuffer, Vector2D(x, y), spriteWidth, spriteHeight));
        }
    }

    return sprites;
}

Sprite::Sprite(const GraphicsBuffer* pBuffer, const Vector2D& loc, int width, int height) :
    mpBuffer(pBuffer),
    mLoc(loc),
    mWidth(width),
    mHeight(height)
{}

Sprite::Sprite(const GraphicsBuffer* pBuffer) : 
    Sprite(pBuffer, Vector2D(), pBuffer->getWidth(), pBuffer->getHeight()) {}

Sprite::~Sprite() {}
