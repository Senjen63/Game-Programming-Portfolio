#pragma once
#include <allegro5/allegro.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Timer.h>

#include "Animation.h"
#include "GraphicsSystem.h"
#include "InputSystem.h"
#include "Unit.h"
#include "GraphicsBufferManager.h"
#include "UnitManager.h"
#include "HUD.h"
#include "Level.h"
#include "LevelManager.h"
#include "PowerUps.h"

#include "EventListener.h"
#include "EventSystem.h"

#include <iostream>
#include <string>
#include <vector>
using namespace std;

const string ASSET_PATH = "..\\..\\common\\assets\\";
const string BACKGROUND = "Woods.png";
//const string SMURF = "smurf_sprites.png";
const string DEAN = "dean_sprites.png";

const int SPRITE_HEIGHT = 60;
const int SPRITE_WIDTH = 60;

const int FRAMES_PER_SECOND = 20;
const float FPS = 16.7;
const float START_TIME = 0.01;

const double SLEEP_TIME = 16.7;

const enum KeyCode
{
	LEFT = ALLEGRO_KEY_LEFT,
	RIGHT = ALLEGRO_KEY_RIGHT,
	UP = ALLEGRO_KEY_UP,
	DOWN = ALLEGRO_KEY_DOWN,
	KEY_ENTER = ALLEGRO_KEY_ENTER,
	KEY_SPACE = ALLEGRO_KEY_SPACE,
	KEY_ESCAPE = ALLEGRO_KEY_ESCAPE
};

class Game : public EventListener
{
public:
	friend Unit;

	Game();
	~Game();

	static Game* getInstance();
	static void createInstance();
	static void destroyInstance();

	void init();
	void cleanup();

	GraphicsBuffer* getBuff(string name);

	void doLoop();

	virtual void handleEvent(const Event& event);

private:
	static Game* gpGame;
	GraphicsSystem* mpSystem;
	InputSystem mInputSystem;
	GraphicsBufferManager mBuffMan;
	UnitManager mUnitMan;
	LevelManager mLevelMan;
	Font* mpFont;
	EventSystem* mpEventSystem;

	int xMove = 0, yMove = 0, speed = 0, bonus = 0, level = 0;

	string key, assetPath, background, foodSprite, playerSprite, 
		wallSprite, pointsSprite, slowDownSprite, speedUpSprite;
	bool start = false, keepGoing = true, lose = false;

	int wallArray1[10][14], wallArray2[10][14], wallArray3[10][14];
};