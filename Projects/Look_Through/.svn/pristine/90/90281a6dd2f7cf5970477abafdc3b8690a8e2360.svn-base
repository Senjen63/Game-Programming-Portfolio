#pragma once
#include "Menu.h"
#include "LanguageSystem.h"

#include <Trackable.h>

#include <unordered_map>

class AnimationManager;
class GraphicsBufferManager;
class GraphicsSystem;
class Font;

enum MenuType
{
    START_MENU = 0,
    OPTIONS_MENU,
    BETWEEN_MENU,
    END_MENU
};


/*
=======================================

Everything in MenuSystem could be done 
in game (hence the requried references 
to AnimationManager and GraphicsManager
but this class tidies up Game and makes
it more readable

======================================
*/
class MenuSystem : public Trackable
{
    private:
        unordered_map<MenuType, Menu*> mMenus;

        MenuType mCurrentMenuKey;

        AnimationManager* mpAnimManager = nullptr;
        GraphicsSystem* mpGraphics = nullptr;

        LanguageSystem* mpLangSystem = nullptr;

        int mFps;

    public:
        MenuSystem();
        MenuSystem(int fps);
        ~MenuSystem();

        void init(AnimationManager* animManager, GraphicsSystem* graphics);
        void cleanup();

        Menu* getCurrentMenu();
        MenuType getCurrentMenuType() { return mCurrentMenuKey; }

        void setCurrentMenu(MenuType menuType);
        void resetAllTitles(string start, string options, string between, string end);

        void generateStartMenu();
        void generateOptionsMenu();
        void generateBetweenMenu();
        void generateEndMenu();

        void update(float timeElapsed);

        //void drawMenu(Font* titleFont);
        void drawMenu(Font* titleFont, int points, string pointsText);
        void toggleButtons(bool toggle); //toggle activeness of buttons
};