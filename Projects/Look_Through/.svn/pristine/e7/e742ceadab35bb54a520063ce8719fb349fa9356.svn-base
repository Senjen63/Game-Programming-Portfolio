#include "GraphicsSystem.h"

GraphicsSystem::GraphicsSystem()
{
	mpBackbuffer = nullptr;
	mpDisplay = nullptr;

	mHeight = 0;
	mWidth = 0;
}

GraphicsSystem::~GraphicsSystem()
{
	cleanup();
}

void GraphicsSystem::init(int width, int height)
{
	assert(al_init());
	assert(al_init_image_addon());
	assert(al_init_font_addon());
	assert(al_init_ttf_addon());
	assert(al_init_primitives_addon());

	mHeight = height;
	mWidth = width;

	mpDisplay = al_create_display(width, height);

	mpBackbuffer = new GraphicsBuffer(al_get_backbuffer(mpDisplay));
}

void GraphicsSystem::cleanup()
{
	al_destroy_display(mpDisplay);

	delete mpBackbuffer;

	mpBackbuffer = nullptr;
	mpDisplay = nullptr;
}

void GraphicsSystem::flip()
{
	al_flip_display();
}

// draw to current backbuffer
void GraphicsSystem::draw(int locX, int locY, Sprite sprite, int scale)
{
	// source x, source y, source width, source height, destination x, destination y, destination width, destination height, flags
	al_draw_scaled_bitmap(sprite.getBuffer()->getBitmap(), sprite.getX(), sprite.getY(), sprite.getWidth(), 
							sprite.getHeight(), locX, locY, scale * sprite.getWidth(), scale * sprite.getHeight(), 0);
}

// draw to given GraphicsBuffer
void GraphicsSystem::draw(GraphicsBuffer* buffer, int locX, int locY, Sprite sprite, int scale)
{
	ALLEGRO_BITMAP* oldBitmap = al_get_target_bitmap();

	al_set_target_bitmap(buffer->getBitmap());

	// source x, source y, source width, source height, destination x, destination y, destination width, destination height, flags
	al_draw_scaled_bitmap(sprite.getBuffer()->getBitmap(), sprite.getX(), sprite.getY(), sprite.getWidth(), sprite.getHeight(), 
							locX, locY, scale * sprite.getWidth(), scale * sprite.getHeight(), 0);

	al_set_target_bitmap(oldBitmap);
}

// draw given GraphicsBuffer onto current backbuffer
void GraphicsSystem::draw(GraphicsBuffer* buffer, float locX, float locY, float scale)
{
	// source x, source y, source width, source height, destination x, destination y, destination width, destination height, flags
	//al_draw_scaled_bitmap(buffer->getBitmap(), 0, 0, buffer->getWidth(), buffer->getHeight(), locX, locY, 800 * scale, 600 * scale, 0);
	al_draw_scaled_bitmap(buffer->getBitmap(), 0, 0, buffer->getWidth(), buffer->getHeight(), locX, locY, buffer->getWidth() * scale, buffer->getHeight() * scale, 0);
}

// draw given GraphicsBuffer onto current backbuffer
void GraphicsSystem::draw(GraphicsBuffer* buffer, float locX, float locY, float scaleX, float scaleY)
{
	// source x, source y, source width, source height, destination x, destination y, destination width, destination height, flags
	al_draw_scaled_bitmap(buffer->getBitmap(), 0, 0, buffer->getWidth(), buffer->getHeight(), locX, locY, scaleX , scaleY, 0);
}

// write to current backbuffer
void GraphicsSystem::writeText(int locX, int locY, Font* font, Color color, const char* text)
{
	// font, color, position x, position y, flags, text
	al_draw_text(font->getFont(), color.getColor(), locX, locY, ALLEGRO_ALIGN_CENTER, text);
}

// write to given GraphicsBuffer
void GraphicsSystem::writeText(GraphicsBuffer* buffer, int locX, int locY, Font* font, Color color, const char* text)
{
	ALLEGRO_BITMAP* oldBitmap = al_get_target_bitmap();
	
	al_set_target_bitmap(buffer->getBitmap());

	// font, color, position x, position y, flags, text
	al_draw_text(font->getFont(), color.getColor(), locX, locY, ALLEGRO_ALIGN_CENTER, text);

	al_set_target_bitmap(oldBitmap);
}

// save the contents of a graphics buffer to a file
void GraphicsSystem::saveBuffer(GraphicsBuffer* buffer, const char* filename)
{
	// filename, bitmap
	al_save_bitmap(filename, buffer->getBitmap());
}