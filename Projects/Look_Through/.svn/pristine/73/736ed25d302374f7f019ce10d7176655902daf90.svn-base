
#include "AnimationManager.h"
#include "Game.h"

AnimationManager::AnimationManager()
{

}

AnimationManager::~AnimationManager()
{
	cleanUp();
}

void AnimationManager::cleanUp()
{
	//go through all entries in map and delete
	for (auto iter : mMap)
	{
		Animation* pAnim = iter.second;
		delete pAnim;
	}

	mMap.clear();
}

void AnimationManager::createAnimation(const AnimationName& key, Animation* pAnimation)
{
	//figure out if it exists already
	auto iter = mMap.find(key);

	//already in map?
	if (iter == mMap.end())
	{
		//not already there - just create and add it
		mMap[key] = pAnimation;
	}
}

void AnimationManager::update(float elapsedTime)
{
	bool hit = false;

	mTime += elapsedTime;

	//go through all entries in map and delete
	for (auto iter : mMap)
	{
		if (iter.second->getTiming() != 0 && mTime > iter.second->getTiming())
		{
			hit = true;
			iter.second->update();
		}
	}

	if (hit)
		mTime = 0;
}

Animation* AnimationManager::getAnimation(const AnimationName& key)
{
	auto iter = mMap.find(key);

	if (iter != mMap.end())
	{
		return iter->second;
	}
	else
	{
		return NULL;
	}
}
