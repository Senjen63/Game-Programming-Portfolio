#pragma once

#include <queue>
#include <Vector2D.h>
#include "Unit.h"

class SnakeUnit : public Unit
{
    public:
        SnakeUnit();
        SnakeUnit(Vector2D, Vector2D, int);
        SnakeUnit(Vector2D, Vector2D, GraphicsBuffer*, int, float, float, bool, int);
        ~SnakeUnit();

        Vector2D getDir();
        float getStartTimer() { return mStartTimer; }
        int getTurnListSize() { return mTurnList.size(); }

        void setDirection(Vector2D);
        void setTurnTimer(float turnTimer) { mTurnTimer = turnTimer; }

        void updateUnit(float timeElapsed) override;
        void updateTurns();
        void addTurn(Vector2D, int);
        void syncTurnList(SnakeUnit*, int);
        void speedChange(float, float, float);
private:
    Vector2D mDir;

    vector<pair<Vector2D, int>*> mTurnList;

    float mStartTimer = 0;
    float mTurnTimer = 0;

};