#include "GraphicsBufferManager.h"

void GraphicsBufferManager::createBuffer(string buffName, string path)
{
    GraphicsBuffer* buffer = new GraphicsBuffer(path);
    mpGraphicsBuffers[buffName] = buffer;
}

void GraphicsBufferManager::createBuffer(string buffName, Color color, int height, int width)
{
    GraphicsBuffer* buffer = new GraphicsBuffer(color, height, width);
    mpGraphicsBuffers[buffName] = buffer;
}

void GraphicsBufferManager::createBuffer(string buffName, ALLEGRO_BITMAP* pBitmap)
{
    GraphicsBuffer* buffer = new GraphicsBuffer(pBitmap);
    mpGraphicsBuffers[buffName] = buffer;
}

void GraphicsBufferManager::delBuffer(string buffName)
{
    for (map<std::string, GraphicsBuffer*>::iterator itr = mpGraphicsBuffers.begin(); itr != mpGraphicsBuffers.end(); itr++)
    {
        if (itr->first == buffName)
        {
            delete itr->second;
            mpGraphicsBuffers.erase(itr);
            return;
        }
    }
}

void GraphicsBufferManager::removeAllBuffers()
{
    for (map<string, GraphicsBuffer*>::iterator itr = mpGraphicsBuffers.begin(); itr != mpGraphicsBuffers.end(); itr++)
    {
        delete itr->second;
    }

    mpGraphicsBuffers.clear();
}