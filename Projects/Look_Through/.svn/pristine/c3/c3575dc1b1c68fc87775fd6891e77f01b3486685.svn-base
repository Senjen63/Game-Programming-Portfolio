#pragma once

#include "Trackable.h"
#include "GraphicsSystem.h"
#include "Unit.h"
#include <EventListener.h>


class Component : public Trackable, public EventListener
{
	friend class Unit;

protected:
	Unit* mpUnit = nullptr;

	void setAttachedUnit(Unit* unit);
	void removeFromUnit();

public:
	Component() {}
	Component(const Component& comp) { mpUnit = comp.mpUnit; }

	virtual void update(float dt) = 0;
	virtual void draw(GraphicsSystem* gSys) = 0;

	virtual std::string getIdentifier() = 0;

	Unit* getAttachedUnit();
};

