#include "HudManager.h"

void HudManager::drawEnd(GraphicsSystem* system, int lang)
{
	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	if (lang == English)
	{
		system->writeText(pHudBuffer, 200, 250, pFont, Color(255, 255, 255), "Press Space to Play Again");
		system->writeText(pHudBuffer, 200, 300, pFont, Color(255, 255, 255), "Press Escape to Exit Game");
	}
	else if (lang == Spanish)
	{
		system->writeText(pHudBuffer, 200, 250, pFont, Color(255, 255, 255), "Presiona la Barra Espaciadora para Volver a Jugar");
		system->writeText(pHudBuffer, 200, 300, pFont, Color(255, 255, 255), "Presione Escape para Salir del Juego");
	}
	else if (lang == French)
	{
		system->writeText(pHudBuffer, 200, 250, pFont, Color(255, 255, 255), "Appuyez sur Espace pour Rejouer");
		system->writeText(pHudBuffer, 200, 300, pFont, Color(255, 255, 255), "Appuyez sur Échap pour Quitter le Jeu");
	}
	system->drawCurrent(Vector2D(0, 0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

void HudManager::drawFPS(GraphicsSystem* system, float time)
{
	float actualTime = time;

	string s = to_string(actualTime);

	string screenScore = "FPS: " + s;

	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	system->writeText(pHudBuffer, 600, 0, pFont, Color(255, 255, 255), screenScore);
	system->drawCurrent(Vector2D(0, 0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

void HudManager::drawOptions(GraphicsSystem* system, int diff, int lang, int opt, int sound)
{

	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	//Displays an arrow next to the currently changeable option
	if (opt == 1)
	{
		system->writeText(pHudBuffer, 50, 200, pFont, Color(255, 255, 255), "->");
	}
	else if (opt == 2)
	{
		system->writeText(pHudBuffer, 50, 250, pFont, Color(255, 255, 255), "->");
	}
	else if (opt == 3)
	{
		system->writeText(pHudBuffer, 50, 300, pFont, Color(255, 255, 255), "->");
	}

	//Display difficulty
	if (lang == English)
	{
		if (diff == easy)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Current Difficulty: Easy");
		}
		else if (diff == medium)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Current Difficulty: Medium");
		}
		else if (diff == hard)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Current Difficulty: Hard");
		}
	}
	else if (lang == Spanish)
	{
		if (diff == easy)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Dificultad actual: Facil");
		}
		else if (diff == medium)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Dificultad Actual: Media");
		}
		else if (diff == hard)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Dificultad actual: Duro");
		}
	}
	else if (lang == French)
	{
		if (diff == easy)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Difficulte Actuelle : Facile");
		}
		else if (diff == medium)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Difficulte Actuelle : Moyenne");
		}
		else if (diff == hard)
		{
			system->writeText(pHudBuffer, 100, 200, pFont, Color(255, 255, 255), "Difficulte Actuelle : Difficile");
		}
	}

	//Display language
	if (lang == English)
	{
		system->writeText(pHudBuffer, 100, 250, pFont, Color(255, 255, 255), "Current Language: English");
	}
	else if (lang == Spanish)
	{
		system->writeText(pHudBuffer, 100, 250, pFont, Color(255, 255, 255), "Idioma Actual: Espanol");
	}
	else if (lang == French)
	{
		system->writeText(pHudBuffer, 100, 250, pFont, Color(255, 255, 255), "Langue Actuelle : Francais");
	}

	//Display sound options
	if (lang == English)
	{
		if (sound == 1)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Sound: On");
		}
		else if (sound == 2)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Sound: Off");
		}
	}
	else if (lang == Spanish)
	{
		if (sound == 1)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Sonido: Encendido");
		}
		else if (sound == 2)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Sonido: Apagado");
		}
	}
	else if (lang == French)
	{
		if (sound == 1)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Son : Active");
		}
		else if (sound == 2)
		{
			system->writeText(pHudBuffer, 100, 300, pFont, Color(255, 255, 255), "Son : Desactive");
		}
	}

	//Draw backspace directions
	if (lang == English)
	{
		system->writeText(pHudBuffer, 20, 400, pOptionsFont, Color(255, 255, 255), "Press Backspace to Return to Main Menu");
	}
	else if (lang == Spanish)
	{
		system->writeText(pHudBuffer, 20, 400, pOptionsFont, Color(255, 255, 255), "Presione Retroceso para Volver al Menu Principal");
	}
	else if (lang == French)
	{
		system->writeText(pHudBuffer, 20, 400, pOptionsFont, Color(255, 255, 255), "Appuyez sur Retour Arriere pour Revenir au Menu Principal");
	}

	system->drawCurrent(Vector2D(0, 0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

void HudManager::drawScore(GraphicsSystem* system, int score, int lang)
{
	string s = to_string(score);

	string screenScore;

	if (lang == English)
	{
		screenScore = "Score: " + s;
	}
	else if (lang == Spanish)
	{
		screenScore = "Puntaje: " + s;
	}
	else if (lang == French)
	{
		screenScore = "Score: " + s;
	}

	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	system->writeText(pHudBuffer, 0, 0, pFont, Color(255, 255, 255), screenScore);
	system->drawCurrent(Vector2D(0,0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

void HudManager::drawStart(GraphicsSystem* system, int lang)
{
	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	if (lang == English)
	{
		system->writeText(pHudBuffer, 25, 200, pFont, Color(255, 255, 255), "Press Space to Start");
		system->writeText(pHudBuffer, 25, 235, pFont, Color(255, 255, 255), "Press O for Options");
		system->writeText(pHudBuffer, 25, 270, pFont, Color(255, 255, 255), "Press Enter to Load Game");
		system->writeText(pHudBuffer, 25, 305, pFont, Color(255, 255, 255), "Press Esc to End");
	}
	else if (lang == Spanish)
	{
		system->writeText(pHudBuffer, 25, 200, pFont, Color(255, 255, 255), "Presiona la Barra Espaciadora para Comenzar");
		system->writeText(pHudBuffer, 25, 235, pFont, Color(255, 255, 255), "Presiona O para Opciones");
		system->writeText(pHudBuffer, 25, 270, pFont, Color(255, 255, 255), "Presiona Enter para Cargar el Juego");
		system->writeText(pHudBuffer, 25, 305, pFont, Color(255, 255, 255), "Presione Esc para Finalizar");
	}
	else if (lang == French)
	{
		system->writeText(pHudBuffer, 25, 200, pFont, Color(255, 255, 255), "Appuyez sur Espace pour Commencer");
		system->writeText(pHudBuffer, 25, 235, pFont, Color(255, 255, 255), "Appuyez sur O pour les Options");
		system->writeText(pHudBuffer, 25, 270, pFont, Color(255, 255, 255), "Appuyez sur Entree pour Charger le Jeu");
		system->writeText(pHudBuffer, 25, 305, pFont, Color(255, 255, 255), "Appuyez sur Esc pour Terminer");
	}

	system->drawCurrent(Vector2D(0, 0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

void HudManager::drawTimer(GraphicsSystem* system, double time, double saved, int lang)
{
	int actualTime = (time + saved) / 1000.0;

	string s = to_string(actualTime);
	string screenScore;

	if (lang == English)
	{
		screenScore = "Time: " + s + " Seconds";
	}
	else if (lang == Spanish)
	{
		screenScore = "Tiempo: " + s + " Segundos";
	}
	else if (lang == French)
	{
		screenScore = "Temps: " + s + " Secondes";
	}

	GraphicsBuffer* pHudBuffer = new GraphicsBuffer(800, 600);

	system->writeText(pHudBuffer, 230, 0, pFont, Color(255, 255, 255), screenScore);
	system->drawCurrent(Vector2D(0, 0), Sprite(pHudBuffer), 1.0);

	delete pHudBuffer;
}

HudManager::HudManager()
{
	fontFileName = "cour.ttf";
	fontSize = 30;
	optionsFontSize = 22;

	pFont = new Font("..\\..\\common\\assets\\" + fontFileName, fontSize);
	pOptionsFont = new Font("..\\..\\common\\assets\\" + fontFileName, optionsFontSize);
}

HudManager::~HudManager()
{
	delete pFont;
	pFont = nullptr;
	delete pOptionsFont;
	pOptionsFont = nullptr;
}