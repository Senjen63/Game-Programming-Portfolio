#pragma once
#include "Sprite.h"

#include <PerformanceTracker.h>
#include <MemoryTracker.h>

class Animation : public Trackable
{
public:
    Animation();
    Animation(std::string spriteSheet, int width, int height, int numSprites, float speed, bool loop);
    Animation(GraphicsBuffer* pBuff, int numSprites, float speed, bool loop);
    ~Animation();

    void Update(float dt);

    Sprite getCurrentSprite();
    float getFrameRate();
    int getSpriteCount();

    void setFrameRate(float speed);
    void changeSpeed(float x);

private:
    bool mShouldLoop;
    Sprite* mAnim;
    float mTimePerFrame;
    float mTimeLeft;
    int mCurrentSprite = 0;
    int mNumSprites;
};