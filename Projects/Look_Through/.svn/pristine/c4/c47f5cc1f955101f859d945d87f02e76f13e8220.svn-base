//BP
#pragma once
#include <vector>
#include <fstream>
#include "Vector2D.h"
#include "Trackable.h"

using namespace std;

class GameLevel : public Trackable
{
private:
    int mEndBodyParts = 0;
    int mFoodScoreValue = 0;
    int mBeginBodyParts = 0;
    float mPlayerSnakeSpeed = 0;
    float mFastItemProbability = 0;
    float mSlowItemProbability = 0;
    vector<Vector2D> mWallLocations;
    float mBeginItemProbability = 0;
    float mBonusItemProbability = 0;
    float mRandomItemProbability = 0;
public:
    GameLevel();
    GameLevel(float speed, int beginBodyParts, int endBodyParts, int foodVal, float beginItemProb, float randItemProb, float bonusItemProb, float fastProb, float slowProb);
    ~GameLevel();
    void printCurrentLevelStats();
    void addWallLocation(Vector2D location);
    int getFoodScoreValue() { return mFoodScoreValue; }
    int getEndBodyParts() { return mEndBodyParts; }
    float getPlayerSnakeSpeed() { return mPlayerSnakeSpeed; }
    int getBeginBodyParts() { return mBeginBodyParts; }
    float getFastItemProbability() { return mFastItemProbability; }
    float getSlowItemProbability() { return mSlowItemProbability; }
    float getBonusItemProbability() { return mBonusItemProbability; }
    void setFoodScoreValue(int newNum) { mFoodScoreValue = newNum; }
    void setEndBodyParts(int newNum) { mEndBodyParts = newNum; }
    vector<Vector2D> getWallLocations() { return mWallLocations; }
    float getRandItemProbability() { return mRandomItemProbability; }
    void setPlayerSnakeSpeed(float newNum) { mPlayerSnakeSpeed = newNum; }
    float getBeginItemProbability() { return mBeginItemProbability; }
    void setBeginBodyParts(int newNum) { mBeginBodyParts = newNum; }
    void setFastItemProbability(float newNum) { mFastItemProbability = newNum; }
    void setSlowItemProbability(float newNum) { mSlowItemProbability = newNum; }
    void setBonusItemProbability(float newNum) { mBonusItemProbability = newNum; }
    void setRandomItemProbability(float newNum) { mRandomItemProbability = newNum; }
    void setBeginItemProbability(float newNum) { mBeginItemProbability = newNum; }
};