#include "Sprite.h"

Sprite::Sprite(Vector2D location, int wide, int tall, GraphicsBuffer* graphicsBuffer)
{
	spriteLocation = location;
	mWidth = wide;
	mHeight = tall;
	mpGraphicsBuffer = graphicsBuffer;
}

Sprite::Sprite()
{
	mpGraphicsBuffer = NULL;
	spriteLocation = Vector2D(0, 0);
	mWidth = 0;
	mHeight = 0;
}

Sprite::Sprite(GraphicsBuffer* pBuff, Vector2D loc, int width, int height)
{
	mpGraphicsBuffer = pBuff;

	spriteLocation = loc;
	mWidth = width;
	mHeight = height;
}


Sprite::Sprite(Vector2D location, GraphicsBuffer* graphicsBuffer)
{
	spriteLocation = location;
	mWidth = graphicsBuffer->getWidth();
	mHeight = graphicsBuffer->getHeight();
	mpGraphicsBuffer = graphicsBuffer;
}

Sprite::Sprite(GraphicsBuffer* pBuffer) :
	Sprite(Vector2D(), pBuffer->getWidth(), pBuffer->getHeight(), pBuffer) {}

Vector2D Sprite::getLocation()
{
	return spriteLocation;
}

int Sprite::getWidth()
{
	return mWidth;
}

int Sprite::getHeight()
{
	return mHeight;
}

GraphicsBuffer* Sprite::getBuffer()
{
	return mpGraphicsBuffer;
}

Sprite* Sprite::getSmurfs(GraphicsBuffer* pBuff, int width, int height, int numSprites)
{
	Sprite* sprites = new Sprite[numSprites];
	int count = 0;
	int buffHeight = pBuff->getHeight();
	int buffWidth = pBuff->getWidth();
	for (int y = 0; y < buffHeight; y += height)
	{
		for (int x = 0; x < buffWidth; x += width)
		{
			sprites[count] = Sprite(Vector2D(x, y), width, height, pBuff); //give x and y to Draw instead of 0, 0
			count++;
			if (count >= numSprites)
			{
				return sprites;
			}
		}
	}
	return sprites;
}

Sprite::~Sprite()
{
}
