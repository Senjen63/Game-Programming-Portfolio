#include "Square.h"

Square::Square()
{
	mHasWall = false;
	mHasSpeed = false;
	mHasSlow = false;
	mHasFood = false;
	mHasPoint = false;
	mHasSnake = false;
	mY = 0;
	mX = 0;
	mPosition = Vector2D(0, 0);
}
Square::Square(int row, int column)
{
	mHasWall = false;
	mHasSpeed = false;
	mHasSlow = false;
	mHasFood = false;
	mHasPoint = false;
	mHasSnake = false;
	mY = row;
	mX = column;
	mPosition = Vector2D((mX * SQUARE_SIZE), (mY * SQUARE_SIZE));
}


Square::Square(bool wall, int row, int column)
{
	mHasWall = wall;
	mHasSpeed = false;
	mHasSlow = false;
	mHasFood = false;
	mHasPoint = false;
	mHasSnake = false;
	mY = row;
	mX = column;
	mPosition = Vector2D((mX * SQUARE_SIZE), (mY * SQUARE_SIZE));
}

Square::~Square()
{

}

void Square::operator=(const Square& aSquare)
{
	this->mHasWall = aSquare.mHasWall;
	this->mHasSpeed = aSquare.mHasSpeed;
	this->mHasSlow = aSquare.mHasSlow;
	this->mHasFood = aSquare.mHasFood;
	this->mHasPoint = aSquare.mHasPoint;
	this->mHasSnake = aSquare.mHasSnake;
	this->mY = aSquare.mY;
	this->mX = aSquare.mX;
	this->mPosition = aSquare.mPosition;
}

int Square::getY()
{
	return mY;
}
int Square::getX()
{
	return mX;
}

bool Square::checkWall()
{
	return mHasWall;
}

bool Square::checkFood()
{
	return mHasFood;
}
bool Square::checkSlow()
{
	return mHasSlow;
}
bool Square::checkPoint()
{
	return mHasPoint;
}
bool Square::checkSpeed()
{
	return mHasSpeed;
}
bool Square::checkSnake()
{
	return mHasSnake;
}

Vector2D Square::getPosition()
{
	return mPosition;
}

bool Square::isOccupied()
{
	if (mHasSpeed || mHasSlow || mHasFood || mHasPoint || mHasSnake || mHasWall)
	{
		return true;
	}
	return false;
}

void Square::reset()
{
	mHasSnake = false;
	mHasSlow = false;
	mHasSpeed = false;
	mHasFood = false;
	mHasPoint = false;
}

void Square::setSnake()
{
	mHasSnake = true;
}
void Square::setSpeed()
{
	mHasSpeed = true;
}
void Square::setSlow()
{
	mHasSlow = true;
}
void Square::setFood()
{
	mHasFood = true;
}
void Square::setPoint()
{
	mHasPoint = true;
}
