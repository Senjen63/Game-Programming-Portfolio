#pragma once

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <Trackable.h>
#include <Vector2D.h>

#include <iostream>
#include <cassert>
#include <string>
#include <vector>
#include <stdlib.h>
#include <time.h>

#include <PerformanceTracker.h>
#include <Timer.h>

#include "UnitManager.h"
#include "Animation.h"
#include "EventListener.h"

using namespace std;

class Collectible : public Trackable
{
public:
	Collectible(UnitManager* manager, Animation* anim1, Animation* anim2, Animation* anim3, Animation* food, int initSpawnRate);
	~Collectible();

	void spawnCollectible(int frame);
	void spawnFood();
	void setSpawnRate(int rate);

private:
	UnitManager* mpUnitManager;
	Animation* mpPowerAnimation1;
	Animation* mpPowerAnimation2;
	Animation* mpPowerAnimation3;
	Animation* mpFoodAnimation;

	int spawnRate;
};