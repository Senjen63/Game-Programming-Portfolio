#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>

#include <iostream>
#include <Vector2D.h>
#include "Sprite.h"
#include "Color.h"
#include "Font.h"

class GraphicsSystem : public Trackable
{
public:
	GraphicsSystem(int tall, int wide);
	~GraphicsSystem();

	void init();
	void cleanUp();

	int getHeight();
	int getWidth();
	GraphicsBuffer* getBackBuffer();

	void flip(); //call al_flip to display what is in backbuffer

	void Draw(Vector2D dispLocation, Sprite* pSprite, float scale); //draw to current backbuffer
	
	void Draw(GraphicsBuffer* pBuff, Vector2D location, Sprite* pSprite, float scale);

	void WriteText(Vector2D location, Font* pFont, Color* pColor, std::string msg); //write to current backbuffer
	void WriteText(GraphicsBuffer* pBuff, Vector2D location, Font* pFont, Color* pColor, std::string msg); //write to given backbuffer



	void saveBuffer(GraphicsBuffer* pBuffer, std::string fileName); //save contents of backbuffer to file
private:
	GraphicsBuffer* mpBackBuffer;
	
	int width;
	int height;

	ALLEGRO_DISPLAY* pDisplay;

};