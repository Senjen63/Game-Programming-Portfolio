#pragma once
#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include "Unit.h"
#include <Vector2D.h>

class UnitManager : public Trackable
{
public:
    UnitManager();
    ~UnitManager();

    void cleanUp();

	void makeUnit();
	void setUnitPos(Vector2D& position);
	void clearUnit(Unit* pUnit);
	void clearUnitsinArea(Vector2D mousePos);
	void UpdateAll();
	void updateTiming(float change);
	void DrawAll(GraphicsSystem* pSys);

	void stopOrStart();
	int getUnitCount();

	Unit* getUnit();
	Unit* getUnit(int index);

	Unit* getRecentUnit();

	Vector2D getPosition(int index);

	void swapLast();

	friend class Game;

private:
    std::vector<Unit*> mpUnitVector;
    int mUnitCount;

};