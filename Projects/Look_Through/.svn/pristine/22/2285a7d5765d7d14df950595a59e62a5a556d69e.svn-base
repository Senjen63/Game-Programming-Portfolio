#include "InputTranslator.h"
#include "Game.h"

InputTranslator::InputTranslator()
{
    mpEventSystem = nullptr;
}


InputTranslator::~InputTranslator()
{

}


void InputTranslator::init()
{
    mpEventSystem = EventSystem::getInstance();

    mpEventSystem->getInstance()->addListener((EventType)MESSAGE_EVENT, this);
    mpEventSystem->getInstance()->addListener((EventType)INPUT_GAME_EVENT, this);
}


void InputTranslator::handleEvent(const Event& currentEvent)
{
    if (currentEvent.getType() == MESSAGE_EVENT)
    {
        const MessageEvent& messageEvent = static_cast<const MessageEvent&>(currentEvent);
        cout << "Input Translator Message - " << messageEvent.getMessage() << endl;
    }

    if (currentEvent.getType() == INPUT_GAME_EVENT)
    {
        bool actionFired = false;
        //cout << endl << "InputTranslator - ";

        const InputEvent& inputEvent = static_cast<const InputEvent&>(currentEvent);

        int keyCode = inputEvent.getKeyCode();

        if(keyCode > 0) //key pressed events
        {
            if (keyCode == W_KEY || keyCode == UP)
            {
                //mpEventSystem->fireEvent(ActionEvent(MOVE_UP));
                mpEventSystem->fireEvent(ActionEvent(JUMP));
                actionFired = true;
            }

            if (keyCode == A_KEY || keyCode == LEFT)
            {
                mpEventSystem->fireEvent(ActionEvent(MOVE_LEFT));
                actionFired = true;
            }

            /*if (keyCode == S_KEY || keyCode == DOWN)
            {
                mpEventSystem->fireEvent(ActionEvent(MOVE_DOWN));
                actionFired = true;
            }*/

            if (keyCode == D_KEY || keyCode == RIGHT)
            {
                mpEventSystem->fireEvent(ActionEvent(MOVE_RIGHT));
                actionFired = true;
            }

            if (keyCode == SPACE)
            {
                //mpEventSystem->fireEvent(ActionEvent(START_GAME));
                mpEventSystem->fireEvent(ActionEvent(JUMP));
                actionFired = true;
            }

            if (keyCode == LEFT_MOUSE)
            {
                mpEventSystem->fireEvent(ActionEvent(SELECT));
                actionFired = true;
            }

            if (keyCode == ESCAPE)
            {
                mpEventSystem->fireEvent(ActionEvent(EXIT_GAME));
                actionFired = true;
            }
        }
        else if (keyCode < 0) //key released events
        {
            keyCode *= -1;

            if (keyCode == A_KEY || keyCode == LEFT)
            {
                mpEventSystem->fireEvent(ActionEvent(STOP_MOVE_LEFT));
                actionFired = true;
            }

            if (keyCode == D_KEY || keyCode == RIGHT)
            {
                mpEventSystem->fireEvent(ActionEvent(STOP_MOVE_RIGHT));
                actionFired = true;
            }
        }

        if (!actionFired)
        {
            //cout << "No Action Event" << endl;
        }
    }
    
}