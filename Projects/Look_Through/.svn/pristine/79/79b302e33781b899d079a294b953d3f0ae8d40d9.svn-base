#include "Snake.h"


Snake::Snake(bool isPlayer1, float xPos, float yPos, UnitManager* um, AnimationManager* am, GraphicsBufferManager* gm, int numPieces)
{
	mIsPlayer1 = isPlayer1;
	mpAnimationManager = am;
	mpUnitManager = um;
	mpGraphicsBufferManager = gm;
	mNumPieces = numPieces;

	double fps = 30;

	const string SNAKE_TAG = "Snake";
	const string SNAKE2_TAG = "Snake2";
	const string SNAKE2_BODY_TAG = "Snake2Body";
	const string SNAKE_BODY_TAG = "SnakeBody";

	//Created snake head
	if (mIsPlayer1)
	{
		mpUnitManager->addUnit(xPos, yPos, 1, 1, SNAKE_TAG);
	}
	else if (!mIsPlayer1)
	{
		mpUnitManager->addUnit(xPos, yPos, 1, 1, SNAKE2_TAG);
	}
	Unit* head = mpUnitManager->getLastUnit();
	mSnakePieces.push_back(head);
	Animation* anim;
	if (mIsPlayer1)
	{
		anim = am->getAnim("snakeHead");
	}
	else
	{
		anim = am->getAnim("snakeHead2");
	}
	head->setAnimation(anim);

	//Creates snake body pieces.
	for (int i = 1; i <= 0; i++)
	{
		if (mIsPlayer1)
		{
			mpUnitManager->addUnit(xPos, yPos, 1, 1, SNAKE_BODY_TAG);
		}
		else if (!mIsPlayer1)
		{
			mpUnitManager->addUnit(xPos, yPos, 1, 1, SNAKE2_BODY_TAG);
		}
		Unit* body = mpUnitManager->getLastUnit();
		mSnakePieces.push_back(body);
		Animation* anim;
		if (mIsPlayer1)
		{
			anim = am->getAnim("snakeBody");
		}
		else
		{
			anim = am->getAnim("snakeBody2");
		}
		body->setAnimation(anim);
	}
}

void Snake::addSnakePiece(Vector2D vec)
{
	const string SNAKE2_BODY_TAG = "Snake2Body";
	const string SNAKE_BODY_TAG = "SnakeBody";

	int fps = 30;
	if (mIsPlayer1)
	{
		mpUnitManager->addUnit(vec.getX(), vec.getY(), 1, 1, SNAKE_BODY_TAG);
	}
	else if (!mIsPlayer1)
	{
		mpUnitManager->addUnit(vec.getX(), vec.getY(), 1, 1, SNAKE2_BODY_TAG);
	}
	Unit* body = mpUnitManager->getLastUnit();
	mSnakePieces.push_back(body);
	Animation* anim;
	if (mIsPlayer1)
	{
		anim = mpAnimationManager->getAnim("snakeBody");
	}
	else
	{
		anim = mpAnimationManager->getAnim("snakeBody2");
	}
	body->setAnimation(anim);
}