#pragma once
#include "Trackable.h"
#include "EventSystem.h"
#include "Unit.h"
#include "CollisionEvent.h"
#include <vector>

class UnitManager : public Trackable
{
private:
	vector<Unit*> mpUnits;
public:
	UnitManager() {};
	~UnitManager() { removeAllUnits(); };

	//Inefficient, fix eventually
	Unit* getIntersect(Vector2D vec);

	Unit* getTargetUnit(int unit) { return mpUnits[unit]; };
	Unit* getTargetUnit(Unit* unit);
	int getNumUnits() { return mpUnits.size(); };
	Unit* getLastUnit();

	void addUnit(float posX, float posY, float scaleX, float scaleY);
	void addUnit(float posX, float posY, float scaleX, float scaleY, string tag);
	void delUnit(int unit);
	void delUnit(Unit* unit);

	void removeAllUnits();
	void drawAll();
	void updateAll(double dt);
	void collisionCheck();
};
