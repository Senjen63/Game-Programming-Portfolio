#pragma once

#include <vector>
#include <Trackable.h>
#include "GraphicsSystem.h"
#include "GraphicsBuffer.h"
#include "InputSystem.h"
#include "Entity.h"

class Game : public Trackable
{
public:
    Game() = delete;
    Game(const Game& other);
    ~Game();

    Game(int screenWidth, int screenHeight, float frameRate);

    void init();
    void cleanUp();

    void doLoop();

    void createEntity(Vector2D position, const std::string& pathToSpriteSheet, int spriteWidth, int spriteHeight, int numSprites, float frameRate, bool loops = true);

private:
    double mFrameTargetTime;

    std::vector<Entity>* mpEntities;
    GraphicsSystem mSys;

    // Game Specific stuff 
    Animation* mpSmurfAnimation = nullptr;
    Animation* mpDeanAnimation = nullptr;
    GraphicsBuffer* mpWoodsBuffer = nullptr;
    Sprite* mpWoodsSprite = nullptr;
    bool mUseingSmurfAnim = true;
};

extern Game* gpGame;

const std::string LOOP_TRACKER_NAME = "Loop";
