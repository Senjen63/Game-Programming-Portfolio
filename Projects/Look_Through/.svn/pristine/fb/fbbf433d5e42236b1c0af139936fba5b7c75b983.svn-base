#pragma once

#include <Trackable.h>
#include <Vector2D.h>

#include "Animation.h"

class Sprite;

enum class UnitType
{
	INVALID_TYPE = -1,
	WALL,
	SNAKE,
	FOOD,
	POINTS_POWER,
	SPEED_POWER,
	SLOW_POWER,
};

class Unit : public Trackable
{
	friend class UnitManager;

public:
		
	void update(double dt);
	void draw();
	void toggleAnimation();
	void setLocation(Vector2D location);
	UnitType getType() { return mType; };
	void pauseAnimation(bool pause);

	bool checkIfIntersecting(Vector2D location);

private:	

	Unit(Vector2D location, Animation mainAnim, UnitType type)
		: mLocation(location),
		mMainAnim(mainAnim),
		mType(type)
	{
		mpCurrentAnim = &mMainAnim;
		mAnimWidth = mpCurrentAnim->getCurrentSprite()->getWidth();
		mAnimHeight = mpCurrentAnim->getCurrentSprite()->getHeight();

		//updateDrawLocation();
	};
	~Unit() {};

	//void updateDrawLocation();

	Vector2D mLocation;
	//Vector2D mDrawLocation = Vector2D(0, 0);

	Animation mMainAnim;	
	Animation* mpCurrentAnim = nullptr;

	UnitType mType = UnitType::INVALID_TYPE;

	int mAnimWidth = 0;
	int mAnimHeight = 0;
};

