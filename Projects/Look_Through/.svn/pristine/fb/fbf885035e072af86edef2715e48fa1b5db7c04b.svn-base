#include "AudioSystem.h"

#include <SDL.h>
#include <cassert>

// Adjust this number if it sounds weird 
// If sounds skip, this is too small 
// If sounds lag, this is too large 
const int CHUNK_SIZE = 1080;
const int CHANNEL_NUM = MIX_CHANNELS;

AudioSystem::~AudioSystem()
{
    cleanUp();
}

/// <summary>
/// If repeatNum is -1 it will loop forever. If repeatNum is greater than 0 then it will repeat that many times. 
/// </summary>
int AudioSystem::play(const AudioSnippet& snippet, int repeatNum)
{
    int result = Mix_PlayChannel(-1, snippet.getChunk(), repeatNum);
    if (result < 0)
    {
        printf("Failed to Play Audio Snippet: %s\n", Mix_GetError());
        assert(false);
    }

    Mix_Volume(result, snippet.getVolume());
    return result;
}

void AudioSystem::stop(int channel)
{
    if (channel == -1)
        return;

    Mix_HaltChannel(channel);
}

void AudioSystem::stopAll()
{
    Mix_HaltChannel(-1);
}

void AudioSystem::init()
{
    if (mIsInitted)
        return;

    if (Mix_OpenAudio(MIX_DEFAULT_FREQUENCY, MIX_DEFAULT_FORMAT, CHANNEL_NUM, CHUNK_SIZE) < 0)
    {
        printf("Failed to Open Audio Mixer: %s\n", Mix_GetError());
        assert(false);
    }

    mIsInitted = true;
}

void AudioSystem::cleanUp()
{
    if (!mIsInitted)
        return;

    Mix_CloseAudio();

    mIsInitted = false;
}
