#pragma once

#include "Animation.h"
#include "Vector2D.h"
#include "GraphicsSystem.h"

class Unit : public Trackable
{
public:
	friend class UnitManager;

	// for tobb
	Unit(AnimationPrototype* anim1, AnimationPrototype* anim2, AnimationPrototype* anim3, AnimationPrototype* anim4);
	// for friends
	Unit(AnimationPrototype* anim1, AnimationPrototype* anim2, AnimationPrototype* anim3);
	// for tree
	Unit(AnimationPrototype* anim1, AnimationPrototype* anim2);
	// for babb
	Unit(AnimationPrototype* anim1);
	~Unit();

	void update(double dt);
	void update(double dt, Vector2D dir);

	void draw(GraphicsSystem* graphics);
	void setAnimation(int index);

	Vector2D getLocation() { return mLocation; }
	void setLocation(Vector2D loc);

private:
	float mTimePerFrame;
	float mTimeUntilNextFrame;

	Vector2D mLocation;
	int mCurrentAnimation;
	std::vector<Animation> mAnimations;

	bool mPause;
};