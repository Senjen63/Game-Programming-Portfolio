#include "Unit.h"
#include "Game.h"

Unit::Unit()
{
	mPos = Vector2D();
	mBufferLocation = Vector2D();
	mCurrentAnimation = 1;
	mPause = false;
	mpAnimation1 = nullptr;
	mpAnimation2 = nullptr;
	mTime = 0;
}

Unit::Unit(Animation* pAnimation, Vector2D pos)
{
	mPos = pos;
	mBufferLocation = Vector2D();
	mCurrentAnimation = 1;
	mpAnimation1 = pAnimation;
	mpAnimation2 = nullptr;
	mPause = false;
	mTime = 0;
}

Unit::Unit(Animation* pAnimation1, Animation* pAnimation2, Vector2D pos)
{
	mPos = pos;
	mBufferLocation = Vector2D();
	mCurrentAnimation = 1;
	mpAnimation1 = pAnimation1;
	mpAnimation2 = pAnimation2;
	mPause = false;
	mTime = 0;
}

Unit::Unit(GraphicsBuffer* pBuffer,Vector2D pos)
{
	mPos = pos;
	mBufferLocation = Vector2D();
	mCurrentAnimation = 1;
	mpAnimation1 = nullptr;
	mpAnimation2 = nullptr;
	mPause = false;
	mpSprite = new Sprite(pBuffer, Vector2D(), SPRITE_WIDTH, SPRITE_HEIGHT);
}

Unit::~Unit()
{
	delete mpAnimation1;
	mpAnimation1 = nullptr;
	delete mpAnimation2;
	mpAnimation2 = nullptr;
	delete mpSprite;
}

float Unit::getTiming()
{
	return mpAnimation1->getTiming();
}

void Unit::update(float time)
{
	mTime += time;
	if (mTime > getTiming() && !mPause)
	{
		mpAnimation1->update();
		if(mpAnimation2 != nullptr)
		mpAnimation2->update();
	}
}

void Unit::draw(GraphicsSystem* pGraphicsSystem, int option, int x, int y)
{
	Vector2D bufferLocation;
	if (option == 1)
	{
		if (mpAnimation1->getSpriteNum() == 0)
			bufferLocation = Vector2D();
		if (mpAnimation1->getSpriteNum() == 1)
			bufferLocation = Vector2D(60,0);
		if (mpAnimation1->getSpriteNum() == 2)
			bufferLocation = Vector2D(0,60);
		if (mpAnimation1->getSpriteNum() == 3)
			bufferLocation = Vector2D(60,60);
		if (mCurrentAnimation == 1)
			pGraphicsSystem->draw(bufferLocation, mpAnimation1->getCurrentSprite(), mPos.getX(), mPos.getY());
		else
			pGraphicsSystem->draw(bufferLocation, mpAnimation2->getCurrentSprite(), mPos.getX(), mPos.getY());
	}
	else
	{
		pGraphicsSystem->draw(Vector2D(x,y), getSprite());
	}
}

void Unit::setAnimation()
{
	if(this!=nullptr)
		if (mCurrentAnimation == 1)
			mCurrentAnimation = 0;
		else
			mCurrentAnimation = 1;
}

void Unit::setTiming(float timing)
{
	mpAnimation1->adjustTiming(timing);
	mpAnimation2->adjustTiming(timing);
}

Vector2D Unit::getPosition()
{
	if (this != nullptr)
		return mPos;
}

void Unit::setPosition(Vector2D pos)
{
		mPos = pos;
}

void Unit::setPaused()
{
	mPause = !mPause;
}

Sprite* Unit::getSprite()
{
	return mpSprite;
}