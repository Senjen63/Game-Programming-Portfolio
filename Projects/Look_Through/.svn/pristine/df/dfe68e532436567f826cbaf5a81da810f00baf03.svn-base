#pragma once
#include "SDL_FILES.h"
#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include "Vector2D.h"
#include "MoveEvent.h"
#include <EventSystem.h>

using namespace std;

enum class Key
{
	A = SDLK_a,
	B = SDLK_b,
	C = SDLK_c,
	D = SDLK_d,
	E = SDLK_e,
	F = SDLK_f,
	G = SDLK_g,
	H = SDLK_h,
	I = SDLK_i,
	J = SDLK_j,
	K = SDLK_k,
	L = SDLK_l,
	M = SDLK_m,
	N = SDLK_n,
	O = SDLK_o,
	P = SDLK_p,
	Q = SDLK_q,
	R = SDLK_r,
	S = SDLK_s,
	T = SDLK_t,
	U = SDLK_u,
	V = SDLK_v,
	W = SDLK_w,
	X = SDLK_x,
	Y = SDLK_y,
	Z = SDLK_z,

	ONE = SDLK_1,
	TWO = SDLK_2,
	THREE = SDLK_3,
	FOUR = SDLK_4,
	FIVE = SDLK_5,
	SIX = SDLK_6,
	SEVEN = SDLK_7,
	EIGHT = SDLK_8,
	NINE = SDLK_9,
	ZERO = SDLK_0,

	ESCAPE = SDLK_ESCAPE,
	TAB = SDLK_TAB,
	ENTER = SDLK_RETURN,
	SPACE = SDLK_SPACE,

	LEFT = SDLK_LEFT,
	RIGHT = SDLK_RIGHT,
	UP = SDLK_UP,
	DOWN = SDLK_DOWN
};

enum class Mouse 
{
	LEFT = 1,
	RIGHT = 2,
	MIDDLE = 3,
};

class InputSystem : public Trackable
{
public:
	InputSystem();
	~InputSystem();

	void init();
	void cleanup();
	void getKeyEvent();
	bool getKeyState(Key keyCode);

private:
	Uint32 mMouseState;
	Uint8 mKeyboardState;
	SDL_CommonEvent* mpEvent;
	EventSystem* mpSystem;
};
