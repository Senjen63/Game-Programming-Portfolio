#pragma once

#include <Event.h>
#include <Vector2D.h>

enum class KeyCode;
enum class MouseButton;

// Separte these enums so that complier yells at you when use the wrong type 
enum KeyEventType
{
	KEY_DOWN = NUM_BASE_EVENT_TYPES,
	KEY_UP,
	NUM_KEY_EVENT_TYPES
};

enum MouseEventType
{
	MOUSE_BUTTON_DOWN = NUM_KEY_EVENT_TYPES,
	MOUSE_BUTTON_UP,
	MOUSE_MOVE,
	NUM_MOUSE_EVENT_TYPES
};

class KeyboardEvent : public Event
{
private:

	KeyCode mKeyCode;

public:

	/// <summary> Type should be either KEY_DOWN OR KEY_UP </summary>
	KeyboardEvent(KeyEventType type, KeyCode keyCode);

	~KeyboardEvent() {};

	KeyCode getKeyCode() const { return mKeyCode; }

};

class MouseEvent : public Event
{
public:
	MouseEvent(MouseEventType type, Vector2D mousePos, Vector2D deltaMousePos);
	MouseEvent(MouseEventType type, Vector2D mousePos, MouseButton mouseButton);
	virtual ~MouseEvent() {};

	Vector2D getMousePos() const { return mMousePos; }
	Vector2D getDeltaMousePos() const { return mDeltaMousePos; }
	MouseButton getMouseButton() const { return mMouseButton; }

private:
	Vector2D mMousePos = Vector2D();
	Vector2D mDeltaMousePos = Vector2D();
	MouseButton mMouseButton = (MouseButton)-1;
};
