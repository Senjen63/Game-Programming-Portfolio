#include "Unit.h"

Unit::Unit()
{
	mpAnim = nullptr;
	mPosition = DEFAULT_UNIT_POS;
}


// It's your job to take care of the Animation object, the Unit destructor won't delete it in case
// you need it elsewhere so you'll have to delete it yourself.
Unit::Unit(Animation* pAnim, Vector2D location)
{
	mpAnim = pAnim;
	mPosition = location;
}


Unit::~Unit()
{
	// We don't allocate anything so we don't need to clean anything up.
}


Vector2D Unit::getPosition()
{
	return mPosition;
}


Animation* Unit::getAnimation()
{
	return mpAnim;
}


void Unit::setPosition(Vector2D position)
{
	mPosition = position;
}


void Unit::setAnimation(Animation* pAnim)
{
	mpAnim = pAnim;
}


void Unit::update(float dt)
{
	mpAnim->update(dt);
}


void Unit::draw(GraphicsSystem* pTarget)
{
	pTarget->draw(mPosition, mpAnim->getCurrentSprite());
}
