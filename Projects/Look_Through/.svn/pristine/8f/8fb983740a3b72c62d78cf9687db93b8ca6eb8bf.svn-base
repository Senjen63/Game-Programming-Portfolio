#include "GraphicsSystem.h"

GraphicsSystem::GraphicsSystem(int width, int height)
{
	this->width = width;
	this->height = height;

	Init();
	display = al_create_display(width, height);
}

GraphicsSystem::~GraphicsSystem()
{
	CleanUp();
}

void GraphicsSystem::Init()
{
    if (!al_init())
    {
        throw new std::exception("error initiating Allegro");
    }
    if (!al_init_image_addon())
    {
        throw new std::exception("error - Image");
    }
    if (!al_init_font_addon())
    {
        throw new std::exception("error - Font");
    }
    if (!al_init_ttf_addon())
    {
        throw new std::exception("error - TTF");
    }
    if (!al_init_primitives_addon())
    {
        throw new std::exception("error - primitives");
    }
}

void GraphicsSystem::flip() const
{
    al_flip_display();
}

void draw(const Vector2D& loc, Sprite& sprite, float scale = 1.0f) // draw to current backbuffer
{
    al_draw_scaled_bitmap(sprite.getBuffer()->getBitmap(), sprite.getLocation().getX(), sprite.getLocation().getY(), sprite.getWidth(), sprite.getHeight(), loc.getX(), loc.getY(), sprite.getWidth() * scale, sprite.getHeight() * scale, 0);
}

void draw(const GraphicsBuffer& buffer, const Vector2D& loc, Sprite& sprite, float scale = 1.0f) // draw to given backbuffer
{
    // Save the previous bitmap so we can go back to it
    ALLEGRO_BITMAP* oldBitmap = al_get_target_bitmap();
    al_set_target_bitmap(buffer.getBitmap());
    al_draw_scaled_bitmap(sprite.getBuffer()->getBitmap(), sprite.getLocation().getX(), sprite.getLocation().getY(), sprite.getWidth(), sprite.getHeight(), loc.getX(), loc.getY(), sprite.getWidth() * scale, sprite.getHeight() * scale, 0);
    al_set_target_bitmap(oldBitmap);
}

void GraphicsSystem::drawText(const Vector2D& loc, const Font& font, const Color& color, const Alignment alignment, const std::string& text) // write to current backbuffer
{
    al_draw_text(font.font, color, loc.getX(), loc.getY(), int(alignment), text.c_str());
}

void GraphicsSystem::drawText(const GraphicsBuffer& buffer, const Vector2D& loc, const Font& font, const Color& color, const Alignment alignment, const std::string& text) // write to given backbuffer
{
    // Save the previous bitmap so we can go back to it
    ALLEGRO_BITMAP* oldBitmap = al_get_target_bitmap();
    al_set_target_bitmap(buffer.getBitmap());
    al_draw_text(font.font, color, loc.getX(), loc.getY(), (int)alignment, text.c_str());
    al_set_target_bitmap(oldBitmap);
}

void saveBuffer(const GraphicsBuffer& buffer, const string& path)
{
    al_save_bitmap(path.c_str(), buffer.getBitmap());
}

void GraphicsSystem::CleanUp()
{
    al_destroy_display(display);
}