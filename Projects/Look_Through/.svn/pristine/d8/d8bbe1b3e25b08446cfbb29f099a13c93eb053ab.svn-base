#include "UnitManager.h"

UnitManager::UnitManager()
{
	mCurrentTime = 0;
	mSpeed = DEFAULT_SPEED;
	mCurrentDir = Direction::RIGHT;
	mNormalSpeed = 0;
	mSlowSpeed = 0;
	mFastSpeed = 0;
	mPowerUpTime = 0;
	mPowerCurrentTime = 0;
	canTurn = true;
}

UnitManager::~UnitManager()
{
	clear();
	mCurrentTime = 0;
	mNormalSpeed = 0;
	mSlowSpeed = 0;
	mFastSpeed = 0;
	mPowerUpTime = 0;
	mPowerCurrentTime = 0;
	canTurn = true;
}

void UnitManager::clear()
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		delete mUnitVector[i];
	}
	mUnitVector.clear();
}

void UnitManager::removeUnit(Unit* destroy)
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		Unit* tmp = mUnitVector[i];
		if (tmp == destroy)
		{
			delete tmp;
			mUnitVector.erase(mUnitVector.begin() + i);
		}
	}
}

void UnitManager::updateSnake(Direction newDir, float time)
{
	Vector2D newPos = mUnitVector[0]->getPos();

	if (newDir == Direction::DOWN && mCurrentDir != Direction::UP && canTurn)
	{
		setDirection(newDir, newPos);
		mCurrentDir = newDir;
		canTurn = false;
	}
	else if (newDir == Direction::UP && mCurrentDir != Direction::DOWN && canTurn)
	{
		setDirection(newDir, newPos);
		mCurrentDir = newDir;
		canTurn = false;
	}
	else if (newDir == Direction::LEFT && mCurrentDir != Direction::RIGHT && canTurn)
	{
		setDirection(newDir, newPos);
		mCurrentDir = newDir;
		canTurn = false;
	}
	else if (newDir == Direction::RIGHT && mCurrentDir != Direction::LEFT && canTurn)
	{
		setDirection(newDir, newPos);
		mCurrentDir = newDir;
		canTurn = false;
	}
	else
		setDirection(mCurrentDir, newPos);

	if (mSpeed != mNormalSpeed && mSpeed != DEFAULT_SPEED)
	{
		mPowerCurrentTime += time;
		if (mPowerCurrentTime > mPowerUpTime)
		{
			mSpeed = mNormalSpeed;
			mPowerCurrentTime = 0;
		}
	}	
	
	mCurrentTime += time;
	if (mCurrentTime > mSpeed)
	{
		mCurrentTime = 0;	
		updateSnakeBody();
		mUnitVector[0]->setPos(newPos);
		canTurn = true;
	}
}

void UnitManager::drawAll(GraphicsSystem* display)
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		mUnitVector[i]->draw(display);
	}
}

void UnitManager::setDirection(Direction dir, Vector2D& pos)
{
	if (dir == Direction::DOWN)
	{
		pos.setY(pos.getY() + MOVEMENT_DISTANCE);
	}
	else if (dir == Direction::UP)
	{
		pos.setY(pos.getY() - MOVEMENT_DISTANCE);
	}
	else if (dir == Direction::LEFT)
	{
		pos.setX(pos.getX() - MOVEMENT_DISTANCE);
	}
	else if (dir == Direction::RIGHT)
	{
		pos.setX(pos.getX() + MOVEMENT_DISTANCE);
	}
}

void UnitManager::updateSnakeBody()
{
	for (unsigned int i = mUnitVector.size() - 1; i > 0; i--)
	{
		mUnitVector[i]->setPos(mUnitVector[i - 1]->getPos());
	}
}
