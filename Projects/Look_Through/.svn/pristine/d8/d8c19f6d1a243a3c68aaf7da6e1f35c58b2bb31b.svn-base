#include "DeathScreen.h"
#include "Font.h"
#include "Color.h"
#include "Game.h"
#include "GraphicsSystem.h"
#include "GraphicsBuffer.h"
#include "GraphicsBufferManager.h"

DeathScreen::DeathScreen()
{
	Game* pGame = Game::getGameInstance();

	const std::string FONT_FILE = "cour.ttf";
	const int FONT_SIZE = 32;
	Font font = Font(FONT_FILE, FONT_SIZE);
	Color black = Color(0, 0, 0, 255);
	Color white = Color(255, 255, 255, 255);

	const std::string DEATH_SCREEN_KEY = "deathScreen";
	const std::string DEATH_SCREEN_INSTRUCTIONS = "YOU LOSE! Press Enter to try again from Level 1.";

	pGame->getGraphicsBufferManager()->createGraphicsBuffer(DEATH_SCREEN_KEY, pGame->DISP_WIDTH, pGame->DISP_HEIGHT);
	pGame->getGraphicsSystem()->setColor(pGame->getGraphicsBufferManager()->getGraphicsBuffer(DEATH_SCREEN_KEY), &black);
	pGame->getGraphicsSystem()->writeText(pGame->getGraphicsBufferManager()->getGraphicsBuffer(DEATH_SCREEN_KEY),
		pGame->CENTER_LOCATION, &font, white, DEATH_SCREEN_INSTRUCTIONS, ALLEGRO_ALIGN_CENTER);

	this->mpScreenSprite = new Sprite(pGame->ORIGIN_LOCATION,
		pGame->getGraphicsBufferManager()->getGraphicsBuffer(DEATH_SCREEN_KEY),
		pGame->getGraphicsBufferManager()->getGraphicsBuffer(DEATH_SCREEN_KEY)->getBitmapWidth(),
		pGame->getGraphicsBufferManager()->getGraphicsBuffer(DEATH_SCREEN_KEY)->getBitmapHeight());
}

DeathScreen::~DeathScreen()
{
	delete mpScreenSprite;
}

void DeathScreen::drawDeathScreen()
{
	Game::getGameInstance()->getGraphicsSystem()->draw(Game::getGameInstance()->ORIGIN_LOCATION, *mpScreenSprite);
}