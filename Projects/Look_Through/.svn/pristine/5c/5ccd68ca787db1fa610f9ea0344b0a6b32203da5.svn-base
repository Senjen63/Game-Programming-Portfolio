#include "InputSystem.h"

void InputSystem::cleanUp()
{
	al_uninstall_keyboard();
	al_uninstall_mouse();

	EventSystem::cleanupInstance();
}

bool InputSystem::getKeyState(int mKeyCode)
{
	al_get_keyboard_state(&mKeyState);
	return al_key_down(&mKeyState, mKeyCode);
}

Vector2D InputSystem::getMousePos()
{
	Vector2D pos;

	pos.setX(mMouseState.x);
	pos.setY(mMouseState.y);

	return pos;
}

bool InputSystem::getMouseStateLeft()
{
	al_get_mouse_state(&mMouseState);
	return al_mouse_button_down(&mMouseState, 1);
}

bool InputSystem::getMouseStateRight()
{
	al_get_mouse_state(&mMouseState);
	return al_mouse_button_down(&mMouseState, 2);
}

void InputSystem::Init()
{
	if (!isInit)
	{
		al_init();
		al_install_keyboard();
		al_install_mouse();

		queue = al_create_event_queue();
		al_register_event_source(queue, al_get_keyboard_event_source());
		al_register_event_source(queue, al_get_mouse_event_source());

		EventSystem::initInstance();
		pEventSystem = EventSystem::getInstance();

		pEventSystem->init();

		isInit = true;
	}
}

InputSystem::InputSystem()
{
	isInit = false;
	Init();
}

InputSystem::~InputSystem()
{
	cleanUp();
}

void InputSystem::runQueue()
{
	while (!al_is_event_queue_empty(queue))
	{
		ALLEGRO_EVENT theEvent;
		al_get_next_event(queue, &theEvent);

		if (theEvent.mouse.button == 1 && theEvent.type == ALLEGRO_EVENT_MOUSE_BUTTON_DOWN)
		{
			al_get_mouse_state(&mMouseState);
			pEventSystem->fireEvent(ClickEvent(mMouseState.x, mMouseState.y));
		}
		else if (theEvent.keyboard.keycode == SPACE_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("Space"));
		}
		else if (theEvent.keyboard.keycode == SPACE_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("OKey"));
		}
		else if (theEvent.keyboard.keycode == RIGHT_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("Right"));
		}
		else if (theEvent.keyboard.keycode == LEFT_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("Left"));
		}
		else if (theEvent.keyboard.keycode == UP_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("Up"));
		}
		else if (theEvent.keyboard.keycode == DOWN_KEY && theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			pEventSystem->fireEvent(MoveEvent("Down"));
		}
	}
}