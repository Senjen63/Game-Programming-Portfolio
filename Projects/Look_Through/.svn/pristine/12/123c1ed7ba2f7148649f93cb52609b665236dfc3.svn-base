#pragma once

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Trackable.h>
#include "EventSystem.h"
#include "EventListener.h"

enum KeyBindings{
	LMB = 1,
	RMB = 2,
	KEY_A = ALLEGRO_KEY_A,
	KEY_D = ALLEGRO_KEY_D,
	KEY_F = ALLEGRO_KEY_F,
	KEY_S = ALLEGRO_KEY_S,
	KEY_W = ALLEGRO_KEY_W,
	KEY_SPACE = ALLEGRO_KEY_SPACE,
	KEY_ENTER = ALLEGRO_KEY_ENTER,
	KEY_ESC = ALLEGRO_KEY_ESCAPE,
	KEY_UP = ALLEGRO_KEY_UP,
	KEY_DOWN = ALLEGRO_KEY_DOWN,
	KEY_LEFT = ALLEGRO_KEY_LEFT,
	KEY_RIGHT = ALLEGRO_KEY_RIGHT
};

class Unit;


/*
ALLEGRO_EVENT_QUEUE:
- al_create_event_queue();
- al_register_event_source(queue, al_get_keyboard_event_source()); //can also use al_get_mouse_event_source() to get mouse input
- al_destroy_event_queue(); //used for destroying event queue

ALLEGRO_EVENT:
- al_get_next_event(queue, &event);
- al_is_event_queue_empty(queue) //check to see if events happened
- ALLEGRO_EVENT_MOUSE_ENTER_DISPLAY //checks to see if mouse entered display (works with leave as well)
- ALLEGRO_EVENT_MOUSE_AXIS //checks to see if mouse moves
*/

/*
Requirments:
- Should not contain any "Game" code
- Should have its own update function and "Event Based" processing to create Events which are fired at EventSystem
- Should support "Input polling"
- loop to update inputs
*/


class InputSystem : public Trackable
{
	friend class Game;

public:
	//Constructor/Destructor
	InputSystem();
	~InputSystem();

	//accessors
	void getKeyState();
	bool getKeyState(KeyBindings keyPressed);
	bool getMouseState(KeyBindings mouseButton);
	int getMouseX();
	int getMouseY();

	//Member functions
	void init();
	void cleanup();

private:
	Unit* mpUnit;
	EventSystem* mpEventSystem;
	ALLEGRO_EVENT_QUEUE* mpQueue;

	bool leftClick;
	bool rightClick;
	
};