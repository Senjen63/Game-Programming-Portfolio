#include "InputSystem.h"

InputSystem::InputSystem()
{

}

InputSystem::~InputSystem()
{
	cleaner();
}

bool InputSystem::init()
{
	if (!al_install_keyboard())
	{
		std::cout << "Issues with keyboard." << std::endl;
		system("pause");
		return false;
	}
	if (!al_install_mouse())
	{
		std::cout << "Issues with mouse." << std::endl;
		system("pause");
		return false;
	}
	return true;
}

void InputSystem::cleaner()
{
	if (!mIsClean)
	{
		std::cout << "Cleaned!" << std::endl;
		mIsClean = true;
	}
}

Vector2D InputSystem::getMouse(int mouseButton)
{
	ALLEGRO_MOUSE_STATE mouse;
	al_get_mouse_state(&mouse);

	if (mouse.buttons & mouseButton)
	{
		return Vector2D(mouse.x, mouse.y);
	}
	return Vector2D(-100, -100);
}

bool InputSystem::getKeyPress(int key)
{
	ALLEGRO_KEYBOARD_STATE keyPress;
	al_get_keyboard_state(&keyPress);

	if (al_key_down(&keyPress, key))
	{
		return true;
	}
	return false;
}

bool InputSystem::getMouseButtonPress(int mouseButton)
{
	ALLEGRO_MOUSE_STATE mouseButtonPress;
	al_get_mouse_state(&mouseButtonPress);
	if (mouseButtonPress.buttons & mouseButton)
	{
		return true;
	}
	return false;
}