#include "GraphicsBuffer.h"

GraphicsBuffer::GraphicsBuffer(std::string imageFilePath)
{
	mpBitmap = al_load_bitmap(imageFilePath.c_str());
}

GraphicsBuffer::GraphicsBuffer(float bitmapScaleX, float bitmapScaleY, float leftBound, float topBound, float rightBound, float bottomBound, Color color)
{
	// Load color info into an Allegro Color
	float redVal = color.getRedValue();
	float blueVal = color.getBlueValue();
	float greenVal = color.getGreenValue();
	float alphaVal = color.getAlphaValue();
	ALLEGRO_COLOR rectangleColor = al_map_rgba(redVal, greenVal, blueVal, alphaVal);

	// Save the current buffer to a variable
	ALLEGRO_BITMAP* currentBuffer = al_get_target_bitmap();

	// Create an empty bitmap to switch and draw a rectangle to
	mpBitmap = al_create_bitmap(bitmapScaleX, bitmapScaleY);
	al_set_target_bitmap(mpBitmap);
	al_draw_filled_rectangle(leftBound, topBound, rightBound, bottomBound, rectangleColor);

	// Switch back to the old bitmap
	al_set_target_bitmap(currentBuffer);
}

GraphicsBuffer::~GraphicsBuffer()
{
	al_destroy_bitmap(mpBitmap);
}