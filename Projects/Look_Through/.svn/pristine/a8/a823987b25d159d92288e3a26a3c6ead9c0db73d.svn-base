#pragma once

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <iostream>
#include <cassert>
#include <string>

#include <Trackable.h>
#include "Assets.h"
#include "Sprite.h" //14 errors when not included due to Sprite.h required, yet includes itself as an error

const std::string FILE_PATH = "..\\..\\common\\assets\\";



//The class which creates and maintains the allegro display 
class GraphicsSystem {
public:
	//constructor/destructor
	GraphicsSystem(int width, int height);
	~GraphicsSystem();

	//accessors
	int getWidth() { return DISP_WIDTH; }
	int getHeight() { return DISP_HEIGHT; }
	ALLEGRO_DISPLAY* getDisplay() { return Display; }
	GraphicsBuffer* getBuffer() { return Back; }

	//Functions
	bool setup();
	void cleanup();
	void flip();
	void draw(int x, int y, Sprite sprite, float scale = 1.0);
	void draw(GraphicsBuffer* graphicsBuffer, int x, int y, Sprite sprite, float scale = 1.0);
	void writeText(int x, int y, Font* font, Color color, std::string text);
	void writeText(GraphicsBuffer* graphicsBuffer, int x, int y, Font* font, Color color, std::string text);
	void saveBuffer(GraphicsBuffer* graphicsBuffer, std::string fileName);

private:
	//allegro display
	int DISP_WIDTH = 800;
	int DISP_HEIGHT = 600;
	ALLEGRO_DISPLAY* Display = nullptr;
	GraphicsBuffer* Back = nullptr;
};