#include "Button.h"

Button::Button(std::pair<float, float>location, std::pair<float, float>scale, string text, string animationDataFilePath) : Unit(location, scale, animationDataFilePath)
{
	mDisplayText = text;
	mpFont = new Font("Assets/cour.ttf", 100, 0, 0, 0);
}

Button::~Button()
{
	delete mpFont;
}

void Button::draw(GraphicsSystem* currentGraphicsSystem)
{
	AnimationManager* animationManager = getAnimationManager();
	std::pair<float, float> scale = getScale();
	std::pair<float, float> location = getLocation();

	if (animationManager != nullptr)
	{
		float spriteWidth = animationManager->getCurrentAnimation()->getCurrentSprite().getWidth() * scale.first;
		float spriteHeight = animationManager->getCurrentAnimation()->getCurrentSprite().getHeight() * scale.second;
		currentGraphicsSystem->draw(animationManager->getCurrentAnimation()->getCurrentSprite(), location.first - (spriteWidth / 2), location.second - (spriteHeight / 2), spriteWidth, spriteHeight);

		currentGraphicsSystem->drawText(mpFont, location.first - (spriteWidth * 0.85 / 2), location.second - (spriteHeight / 2), spriteWidth * 0.85, spriteHeight, mDisplayText, mpTextBuffer);
	}
}

void Button::onClicked()
{

}
