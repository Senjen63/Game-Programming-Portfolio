#pragma once
#include <allegro5/allegro.h>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Timer.h>

#include "Animation.h"
#include "GraphicsSystem.h"
#include "InputSystem.h"
#include "Unit.h"
#include "GraphicsBufferManager.h"
#include "UnitManager.h"

#include <iostream>
#include <string>
#include <vector>
using namespace std;

const string ASSET_PATH = "..\\..\\common\\assets\\";
const string BACKGROUND = "Woods.png";
const string SMURF = "smurf_sprites.png";
const string DEAN = "dean_sprites.png";

const int SPRITE_HEIGHT = 60;
const int SPRITE_WIDTH = 60;

const int FRAMES_PER_SECOND = 16;
const float START_TIME = 0.01;

const double SLEEP_TIME = 16.7;

const enum KeyCode
{
	KEY_F = ALLEGRO_KEY_F,
	KEY_S = ALLEGRO_KEY_S,
	KEY_ENTER = ALLEGRO_KEY_ENTER,
	KEY_SPACE = ALLEGRO_KEY_SPACE,
	KEY_ESCAPE = ALLEGRO_KEY_ESCAPE
};

class Game : public Trackable
{
public:
	Game();
	~Game();

	static Game* startUp();

	void init();
	void cleanup();

	GraphicsBuffer* getBuff(string name);

	void doLoop();

private:
	static Game* gpGame;
	GraphicsSystem* mpSystem;
	InputSystem mInputSystem;
	GraphicsBufferManager mBuffMan;
	UnitManager mUnitMan;
};