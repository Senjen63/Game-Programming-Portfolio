//BP
#include "Items.h"

Items::Items()
{

}

Items::~Items()
{
    cleaner();
}

void Items::init()
{
    mpEventSystem = EventSystem::getInstance();
}

void Items::cleaner()
{

}

void Items::generateItem()
{
    int randomCreationValue = rand() % 100 + 1;
    if (randomCreationValue <= mFastItemProbability)
    {

        mpEventSystem->fireEvent(ItemCreation(SLOW_UNIT));

    }
    else if (randomCreationValue <= mFastItemProbability + mSlowItemProbability)
    {

        
        mpEventSystem->fireEvent(ItemCreation(SPEED_UNIT));

    }
    else
    {

        mpEventSystem->fireEvent(ItemCreation(BONUS_UNIT));

    }
}

void Items::updateItemCreation(float timePassed)
{
    if (mGameTimer <= 0)
    {

        mGameTimer = mDefaultTime + (rand() % (int)ceil(mRandom));
        generateItem();

    }
    else
    {

        mGameTimer -= timePassed;

    }
}

void Items::newGameLevel(float defaultTime, float random, float fastProb, float slowProb, float bonusProb)
{
    mFastItemProbability = fastProb;
    mSlowItemProbability = slowProb;
    mBonusItemProbability = bonusProb;
    mRandom = random;
    mDefaultTime = defaultTime;
    mGameTimer = 0;
}