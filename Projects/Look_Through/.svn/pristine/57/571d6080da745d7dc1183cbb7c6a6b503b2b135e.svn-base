#pragma once
#pragma once
#include <Trackable.h>
#include "UnitManager.h"
#include "SnakeUnit.h"
#include <vector>

#include <iostream>
#include <fstream>

using namespace std;

class SnakeUnit;

const int NORMAL_SPEED = 6;
const int SPEED_UP = 12;

class SnakeUnitManager : public Trackable
{
private:
	//stl vector of units
	vector<SnakeUnit*> mpSnakeUnit; //manages units
	float mTimePerFrame;
	float mTimeLeft;

	Vector2D PrevPos = Vector2D(300, 300);

public:

	SnakeUnitManager();
	~SnakeUnitManager() { cleanup(); };

	Vector2D getLocation();
	SnakeUnit* getUnit(int index);
	int getSize();

	//Clear: stop memory leaks
	void cleanup();

	//add unit
	void createAndAddSnakeUnit(Animation snake);

	//DrawAll: draw units to screen
	void draw(GraphicsSystem* graphicsSystem); 

	//Handles GridMovement
	void update(double dt, Vector2D dir);

	void speedUp();
	void normalSpeed();

	bool snakeCollisionWithSelf();
	bool snakeCoolideWithWall(UnitManager& mLevelUnitManager);
};