#include "InputSystem.h"

InputSystem::InputSystem()
{
	mouseX = 0;
	mouseY = 0;
	mpEventSystem = nullptr;
}

InputSystem::~InputSystem()
{
	cleanup();
}

void InputSystem::init()
{
	al_install_keyboard();
	al_install_mouse();

	mpQueue = al_create_event_queue();
	al_register_event_source(mpQueue, al_get_keyboard_event_source());

	mpEventSystem = EventSystem::getInstance();
	mpEventSystem->init();
}

void InputSystem::cleanup()
{
	mpEventSystem->cleanup();
}

bool InputSystem::getKeyState(int keyID)
{
	ALLEGRO_KEYBOARD_STATE keyState;
	al_get_keyboard_state(&keyState);

	return al_key_down(&keyState, keyID);
}

bool InputSystem::getMouseState(int mouseID)
{
	ALLEGRO_MOUSE_STATE mouseState;
	al_get_mouse_state(&mouseState);

    mouseX = mouseState.x;
    mouseY = mouseState.y;

	return al_mouse_button_down(&mouseState, mouseID);
}

void InputSystem::keyEvent()
{
	while (!al_is_event_queue_empty(mpQueue))
	{
		ALLEGRO_EVENT theEvent;
		al_get_next_event(mpQueue, &theEvent);
		if (theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			mpEventSystem->fireEvent(InputEvents((int)theEvent.keyboard.keycode));
		}
	}
}

Vector2D InputSystem::getMouseLoc()
{
	Vector2D loc(mouseX, mouseY);

	return loc;
}