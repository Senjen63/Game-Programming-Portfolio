#pragma once
#include <allegro5/allegro.h>

#include <cassert>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Timer.h>

using namespace std;

const unsigned char DEFAULT_RED = 0;
const unsigned char DEFAULT_GREEN = 0;
const unsigned char DEFAULT_BLUE = 0;
const unsigned char DEFAULT_ALPHA = 255;

class Color : public Trackable
{
private:
	ALLEGRO_COLOR mInternalColor;
	void updateInternalColor();

	unsigned char mr;
	unsigned char mg;
	unsigned char mb;
	unsigned char ma;

public:
	Color();
	Color(unsigned char r, unsigned char g, unsigned char b);
	Color(unsigned char r, unsigned char g, unsigned char b, unsigned char a);
	~Color();

	unsigned char getR() const;
	unsigned char getG() const;
	unsigned char getB() const;
	unsigned char getA() const;

	void setColor(unsigned char r, unsigned char g, unsigned char b);
	void setColor(unsigned char r, unsigned char g, unsigned char b, unsigned char a);

	friend class GraphicsBuffer;
	friend class GraphicsSystem;
};
