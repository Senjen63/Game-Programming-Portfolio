#include "GraphicsBuffer.h"
using namespace std;

GraphicsBuffer::GraphicsBuffer()
{
	mpBitmap = nullptr;
	mOwnsBitmap = false;
	mHeight = 0;
	mWidth = 0;
}

GraphicsBuffer::GraphicsBuffer(ALLEGRO_BITMAP* givenBitmap)
{
	mpBitmap = givenBitmap;
	mOwnsBitmap = false;
	mHeight = 0;
	mWidth = 0;
}


GraphicsBuffer::GraphicsBuffer(const char* filename)
{
	mHeight = 0;
	mWidth = 0;
	mOwnsBitmap = true;
	mpBitmap = al_load_bitmap(filename);
	assert(mpBitmap);
}

GraphicsBuffer::GraphicsBuffer(Color color, int width, int height)
{
	mHeight = width;
	mWidth = height;
	mOwnsBitmap = true;
	mpBitmap = al_create_bitmap(width, height);
	assert(mpBitmap);
	

	ALLEGRO_BITMAP* oldBitmap = al_get_target_bitmap();
	ALLEGRO_COLOR rgbColor = color.getColor();

	al_set_target_bitmap(mpBitmap);
	al_clear_to_color(color.getColor());
	al_set_target_bitmap(oldBitmap);
}

GraphicsBuffer::~GraphicsBuffer()
{
	if (mOwnsBitmap)
	{
		al_destroy_bitmap(mpBitmap);
	}
}

int GraphicsBuffer::getHeight()
{
	return al_get_bitmap_height(mpBitmap);
}

int GraphicsBuffer::getWidth()
{
	return al_get_bitmap_width(mpBitmap);
}

ALLEGRO_BITMAP* GraphicsBuffer::getBitmap()
{
	return mpBitmap;
}