#include "InputTranslator.h"
#include "EventSystem.h"
#include "KeyboardEvent.h"
#include "ReleaseEvent.h"
#include "InputEvent.h"
#include <SFML/Window/Keyboard.hpp>

using namespace sf;

InputTranslator::InputTranslator()
{
	EventSystem::getInstance()->addListener((EventType)KEYBOARD_EVENT, this);
	EventSystem::getInstance()->addListener((EventType)RELEASE_EVENT, this);
}

InputTranslator::~InputTranslator()
{
}

void InputTranslator::handleEvent(const Event& theEvent)
{
	if (theEvent.getType() == KEYBOARD_EVENT)
	{
		const KeyboardEvent& keyboardEvent = static_cast<const KeyboardEvent&>(theEvent);

		//translate keys to game events
		if (keyboardEvent.getInput() == sf::Keyboard::Up || keyboardEvent.getInput() == sf::Keyboard::W) { EventSystem::getInstance()->fireEvent(InputEvent(UP_EVENT)); }
		if (keyboardEvent.getInput() == sf::Keyboard::Left || keyboardEvent.getInput() == sf::Keyboard::A) { EventSystem::getInstance()->fireEvent(InputEvent(LEFT_EVENT)); }
		if (keyboardEvent.getInput() == sf::Keyboard::Down || keyboardEvent.getInput() == sf::Keyboard::S) { EventSystem::getInstance()->fireEvent(InputEvent(DOWN_EVENT)); }
		if (keyboardEvent.getInput() == sf::Keyboard::Right || keyboardEvent.getInput() == sf::Keyboard::D) { EventSystem::getInstance()->fireEvent(InputEvent(RIGHT_EVENT)); }
		if (keyboardEvent.getInput() == sf::Keyboard::LShift || keyboardEvent.getInput() == sf::Keyboard::RShift) { EventSystem::getInstance()->fireEvent(InputEvent(SHIFT_EVENT)); }
 		if (keyboardEvent.getInput() == sf::Keyboard::Space) { EventSystem::getInstance()->fireEvent(InputEvent(SPACEBAR_EVENT)); }
		if (keyboardEvent.getInput() == sf::Keyboard::Escape) { EventSystem::getInstance()->fireEvent(InputEvent(QUIT_EVENT)); }
	}
	else if (theEvent.getType() == RELEASE_EVENT)
	{
		const ReleaseEvent& releaseEvent = static_cast<const ReleaseEvent&>(theEvent);

		if (releaseEvent.getInput() == sf::Keyboard::Up) { EventSystem::getInstance()->fireEvent(InputEvent(UP_EVENT, true)); }
		if (releaseEvent.getInput() == sf::Keyboard::Down) { EventSystem::getInstance()->fireEvent(InputEvent(DOWN_EVENT, true)); }
		if (releaseEvent.getInput() == sf::Keyboard::Space) { EventSystem::getInstance()->fireEvent(InputEvent(SPACEBAR_EVENT, true)); }
	}
}