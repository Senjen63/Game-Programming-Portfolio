#pragma once

#include "EventListener.h"
#include "Vector2D.h"
#include "PlayerActionEvent.h"

#include <queue>

class UnitManager;
class EventSystem;

enum class Direction
{
	UP = 0,
	DOWN,
	LEFT,
	RIGHT
};

class SnakeManager : public EventListener
{
public:

	SnakeManager(int length, float speed, Vector2D startPos, int cellSize, int lvlWidth, int lvlHeight);
	~SnakeManager();

	void update(double dt);
	void handleEvent(const Event& theEvent);

	int getLength();

	void changeSpeed(float change);
	void growSnake(int amount);

private:

	void checkHeadCollision();	
	bool checkCollision(Direction dir);
	void moveHead();
	void moveTail();

	EventSystem* mpEventSystem = nullptr;
	UnitManager* mpUnitManager = nullptr;

	Direction mDirection = Direction::UP;

	Vector2D mHeadPos;
	Vector2D mTailPos;
	Vector2D mCenterOffset;

	Vector2D mTopCell;
	Vector2D mBottomCell;
	Vector2D mLeftCell;
	Vector2D mRightCell;

	queue<Vector2D> mSnakeBody;

	const float ONE_SECOND_IN_MS = 1000;	
	const float MIN_SPEED = 1;

	float mSpeed = 0;
	double mTimeRemaing = 0;
		
	int mCellSize = 0;
	int mLength = 0;
	int mCurrentLength = 1;
	
	int mLevelHeight = 0;
	int mLevelWidth = 0;
};

