//BP
#include <time.h>
#include "Game.h"
#include <string>
#include <Timer.h>
#include <cassert>
#include <stdlib.h>
#include <iostream>
#include <Vector2D.h>
#include <MemoryTracker.h>
#include <PerformanceTracker.h>

using namespace std;

int main()
{
	srand(time(NULL));
	const int GAME_WINDOW_X_DIMENSION = 1920;
	const int GAME_WINDOW_Y_DIMENSION = 1080;
	//const int DISP_WIDTH = 2560;
	//const int DISP_HEIGHT = 1440;
	EventSystem::initInstance();
	Game::createGameInstance(Vector2D(GAME_WINDOW_X_DIMENSION, GAME_WINDOW_Y_DIMENSION));
	Game* pSnakeGame = Game::getGameInstance();
	pSnakeGame->init();
	pSnakeGame->gameLoop();
	Game::destroyGameInstance();
	EventSystem::cleanupInstance();
	MemoryTracker::getInstance()->reportAllocations(cout);
	system("pause");
	return 0;
}