#include "UnitManager.h"

UnitManager::UnitManager()
{
}

UnitManager::~UnitManager()
{
	clear();
}

void UnitManager::clear()
{
	for (int i = 0; i < mUnitVector.size(); i++)
	{
		delete mUnitVector[i];
	}
	mUnitVector.clear();

}

//Create unit to add in Game
void UnitManager::addUnit(Unit* newUnit)
{
	mUnitVector.push_back(newUnit);
}

void UnitManager::removeUnit(Unit* destroy)
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		Unit* tmp = mUnitVector[i];
		if (tmp == destroy)
		{
			delete tmp;
			mUnitVector.erase(mUnitVector.begin() + i);
		}
	}
}

Unit* UnitManager::getUnit(int index)
{
	return mUnitVector[index];
}

void UnitManager::updateAll(double dt)
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		mUnitVector[i]->update(dt);
	}
}

void UnitManager::drawAll(GraphicsSystem* display)
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		mUnitVector[i]->draw(display);
	}
}

void UnitManager::changeAnim()
{
	mUnitVector[mUnitVector.size() - 1]->setAnimation();
}

void UnitManager::toggleAnim()
{
	for (unsigned int i = 0; i < mUnitVector.size(); i++)
	{
		mUnitVector[i]->toggleEnable();
	}
}

int UnitManager::getSize()
{
	return mUnitVector.size();
}