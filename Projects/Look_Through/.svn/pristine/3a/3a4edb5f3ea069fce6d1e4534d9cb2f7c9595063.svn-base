#include "Animation.h"
#include <Timer.h>

Animation::Animation()
{
	mTime = 0;
	mCurrentTime = 0;
	mCurrentSprite = 0;
	mNumSprites = 0;
	mLoop = false;
	mpSpritesheet = nullptr;
}

Animation::Animation(GraphicsBuffer* pBuffer, int numSprites, float timing, bool loop)
{
	int count = 0;
	Vector2D pos = Vector2D();
	mpSpritesheet = new Sprite[numSprites];
	//same thing I did to randomize the sprites, but now it's splicing them and putting them into a list.
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 4; j++)
		{
			pos.setX(j * 60);
			pos.setY(i * 60);
			mpSpritesheet[count] = Sprite(pBuffer, pos, 60, 60);
			count++;
		}
	}
	mTime = timing;
	mCurrentTime = 0;
	mLoop = loop;
	mCurrentSprite = 0;
	mNumSprites = numSprites;

}

Animation::~Animation()
{
	delete[] mpSpritesheet;
	mpSpritesheet = nullptr;

	mTime = 0;
	mCurrentTime = 0;
	mCurrentSprite = 0;
	mLoop = false;
}

void Animation::Update()
{
	if (mCurrentSprite < mNumSprites - 1)
	{
		mCurrentSprite++;
	}
	else if (mCurrentSprite == mNumSprites - 1)
	{
		if (mLoop)
		{
			mCurrentSprite = 0;
		}
	}
}

Sprite* Animation::GetCurrentSprite()
{
	return &mpSpritesheet[mCurrentSprite];
}

void Animation::AdjustTime(float modifier)
{
	mTime += modifier;

	if (mTime <= 0)
	{
		mTime = .0001;
	}
}

float Animation::GetTime()
{
	return mTime;
}
