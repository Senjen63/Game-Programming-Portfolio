#include "InputSystem.h"

void InputSystem::init()
{
    if (mIsInitted)
    {
        return;
    }

    if (!al_init())
    {
        throw new std::exception("error initting Allegro\n");
    }
    if (!al_install_keyboard())
    {
        throw new std::exception("error - keyboard not installed\n");
    }
    if (!al_install_mouse())
    {
        throw new std::exception("error - mouse not installed\n");
    }

    mIsInitted = true;
}

void InputSystem::cleanUp()
{
    if (!mIsInitted)
    {
        return;
    }

    mIsInitted = false;
}

bool InputSystem::getKeyState(KeyCode keycode)
{
    al_get_keyboard_state(&mKeyBoardState);
    return al_key_down(&mKeyBoardState, (int)keycode);
}

MouseState InputSystem::getMouseState()
{
    al_get_mouse_state(&mMouseState);
    return MouseState(&mMouseState);
}

bool InputSystem::getMouseButtonDown(int mouseButton)
{
    al_get_mouse_state(&mMouseState);
    return al_mouse_button_down(&mMouseState, mouseButton);
}

bool InputSystem::getMouseButtonDown(MouseButton mouseButton)
{
    return getMouseButtonDown((int) mouseButton);
}

Vector2D InputSystem::getMousePosition()
{
    al_get_mouse_state(&mMouseState);
    return Vector2D(mMouseState.x, mMouseState.y);
}

MouseState::MouseState(ALLEGRO_MOUSE_STATE* pMouseState)
{
    mPosition = Vector2D(pMouseState->x, pMouseState->y);
    mScrollPosition = pMouseState->z;
    mButtonsBitfield = pMouseState->buttons;
}
