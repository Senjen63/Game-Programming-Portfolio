#pragma once

#include "GraphicsBuffer.h"
#include "Sprite.h"
#include "Vector2D.h"
#include "Font.h"
#include "Color.h"

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>
#include <Trackable.h>

class GraphicsSystem : public Trackable
{
private:
	ALLEGRO_DISPLAY* mpDisplay;
	GraphicsBuffer* mpBackBuffer;

	static void draw(ALLEGRO_BITMAP* bitmap, Vector2D pos, Sprite sprite, Vector2D scale);
	static void writeText(ALLEGRO_BITMAP* bitmap, Vector2D pos, Font* font, Color color, std::string text, int alignment);

	static ALLEGRO_COLOR colorToAllegroColor(Color col);
	static Color allegroColorToColor(ALLEGRO_COLOR col);

public:
	GraphicsSystem();
	~GraphicsSystem();

	int init(int windowWidth, int windowHeight); // Returns 0 if successful
	void cleanup();

	GraphicsBuffer* getBackBuffer() { return mpBackBuffer; }
	Vector2D getWindowSize() { return Vector2D(al_get_display_width(mpDisplay), al_get_display_height(mpDisplay)); }

	void flip(); // Show drawn GraphicsBuffers on screen

	void draw(Vector2D pos, Sprite sprite, Vector2D scale = Vector2D(1, 1)); // Draws to backbuffer
	static void draw(GraphicsBuffer* graphicsBuffer, Vector2D pos, Sprite sprite, Vector2D scale = Vector2D(1, 1));

	void writeText(Vector2D pos, Font* font, Color color, std::string text, int alignment = ALLEGRO_ALIGN_LEFT); // Draws to backbuffer
	static void writeText(GraphicsBuffer* graphicsBuffer, Vector2D pos, Font* font, Color color, std::string text, int alignment = ALLEGRO_ALIGN_LEFT);

	static void saveBuffer(GraphicsBuffer* graphicsBuffer, std::string fileName);
};