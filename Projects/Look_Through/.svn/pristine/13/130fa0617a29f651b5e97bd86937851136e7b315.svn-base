#pragma once
#include <Trackable.h>
#include <Vector2D.h>
#include <EventSystem.h>

#include <SFML/Graphics/RenderWindow.hpp>
#include <SFML/Window/Event.hpp> //event polling
#include <SFML/Window/Keyboard.hpp> //explicitly check for specific key
#include <SFML/Window/Mouse.hpp> //explicitly check for specific button

#include "MessageEvent.h"
#include "InputEvent.h"
#include "CursorEvent.h"



class InputSystem : public Trackable
{
    private:
        sf::RenderWindow* mpDisplay; //event queues in SFML poll events from the window and need a reference to it

        EventSystem* mpEventSystem;

        bool mInitialized = false;
        bool mCleaned = false;

    public:
        struct
        {
            bool mSpacePressed = false;
            bool mEnterPressed = false;
        } PressedKeys;

        InputSystem();
        ~InputSystem();

        void init();
        void cleanup();

        bool getKeyState(int keyNum);
        bool getMouseState(int mouseNum);
        Vector2D getMousePosition();

        void fireInputEvents();
};