#include "Unit.h"

Unit::Unit()
{
	mPosition = ZERO_VECTOR2D;
}

Unit::~Unit()
{
	mAnimations.clear();
}

void Unit::addAnimation( Animation * animation )
{
	mAnimations.push_back( animation );
	mCurrentAnimation = 0;
}

void Unit::updateUnit()
{
	mAnimations[ mCurrentAnimation ]->updateSprite();
}

void Unit::updatePosition( Vector2D newPos )
{
	mPosition = newPos;
}

void Unit::draw( GraphicsSystem * gfxSystem )
{
	if( mCurrentAnimation == -1 ) return;
	Sprite * currentSprite = mAnimations[ mCurrentAnimation ]->getCurrentSprite();
	gfxSystem->draw( mPosition.getX(), mPosition.getY(), *currentSprite);
}

void Unit::setAnimation( int animation )
{
	if( animation == -1 || animation >= mAnimations.size() ) return;

	mCurrentAnimation = animation;
}

int Unit::getCurrentAnimationIndex() const
{
	return mCurrentAnimation;
}

void Unit::speedUpAnimation()
{
	mAnimations[ mCurrentAnimation ]->speedUp();
}

void Unit::slowDownAnimation()
{
	mAnimations[ mCurrentAnimation ]->slowDown();
}
