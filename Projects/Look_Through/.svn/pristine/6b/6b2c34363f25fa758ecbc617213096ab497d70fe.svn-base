#pragma once
#include <iostream>
#include <cassert>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>

#include <allegro5/allegro.h>

using namespace std;

// We can expand these later. I'm only including the bare essentials because I don't feel like
// typing all of that right now.
enum KeyCodes
{
	KEY_F = 6,
	KEY_S = 19,
	KEY_ENTER = 67,
	KEY_ESCAPE = 59
};

enum MouseCodes
{
	MOUSE_LEFT = 1
};

class InputSystem : public Trackable
{
private:
	ALLEGRO_KEYBOARD_STATE* mpKeyboardState;
	ALLEGRO_MOUSE_STATE* mpMouseState;

	bool mIsActive;

public:
	InputSystem();
	~InputSystem();

	bool init();
	void deinit();

	bool getKeyState(int keyCode);
	bool getMouseButtonState(int mouseCode);
	Vector2D getMousePosition();

	void update();
};

