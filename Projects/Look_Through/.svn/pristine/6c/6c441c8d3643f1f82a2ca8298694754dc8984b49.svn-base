#include "InputSystem.h"
#include "EventSystem.h"

#include "KeyInputEvent.h"
#include "MouseInputEvent.h"

//InputSystem::InputSystem()
//{
//
//}

InputSystem::~InputSystem()
{
	cleanup();
}

void InputSystem::init()
{
	al_install_keyboard();
	al_install_mouse();

	mpQueue = al_create_event_queue();

	al_register_event_source(mpQueue, al_get_keyboard_event_source());
	al_register_event_source(mpQueue, al_get_mouse_event_source());
}
void InputSystem::cleanup()
{
	al_unregister_event_source(mpQueue, al_get_keyboard_event_source());
	al_unregister_event_source(mpQueue, al_get_mouse_event_source());

	al_destroy_event_queue(mpQueue);
	
	al_uninstall_mouse();
	al_uninstall_keyboard();
}

void InputSystem::update()
{
	EventSystem* eventSystem = EventSystem::getInstance();

	while (!al_is_event_queue_empty(mpQueue))
	{
		ALLEGRO_EVENT theEvent;
		al_get_next_event(mpQueue, &theEvent);
		if (theEvent.type == ALLEGRO_EVENT_KEY_DOWN)
		{
			eventSystem->fireEvent(KeyboardInputEvent((KeyCode)theEvent.keyboard.keycode));
		}
		//else if (theEvent.type == ALLEGRO_EVENT_KEY_UP)
		//{
		//	
		//}
		else if (theEvent.type == ALLEGRO_EVENT_MOUSE_BUTTON_DOWN)
		{
			Vector2D pos = getMousePosition();
			eventSystem->fireEvent(MouseInputEvent(pos, (MouseCode)theEvent.mouse.button));
		}
	}
}

bool InputSystem::getKeyState(KeyCode key)
{
	ALLEGRO_KEYBOARD_STATE keyboardState;
	al_get_keyboard_state(&keyboardState);

	return al_key_down(&keyboardState, (int)key);
}

bool InputSystem::getMouseState(MouseCode button)
{
	ALLEGRO_MOUSE_STATE mouseState;
	al_get_mouse_state(&mouseState);

	return mouseState.buttons & (int)button;
}

Vector2D InputSystem::getMousePosition()
{
	ALLEGRO_MOUSE_STATE mouseState;
	al_get_mouse_state(&mouseState);

	return Vector2D(mouseState.x, mouseState.y);
}