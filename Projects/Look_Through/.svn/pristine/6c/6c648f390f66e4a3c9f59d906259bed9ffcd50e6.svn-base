#pragma once

#include <string>
#include <unordered_map>
#include <Trackable.h>

using namespace std;

class GraphicsBuffer;

typedef string GraphicsBufferKey;

class GraphicsBufferManager : public Trackable 
{
	private:
		unordered_map<GraphicsBufferKey, GraphicsBuffer*> mGraphicsBufferMap;
	public:
		GraphicsBufferManager();
		~GraphicsBufferManager();

		void clearGraphicsBuffers();

		void createAndAddGraphicsBuffer(const GraphicsBufferKey& key, string fileName, bool);
		void createAndAddGraphicsBuffer(const GraphicsBufferKey& key, int bitmapWidth, int bitmapHeight);
		void deleteGraphicsBuffer(const GraphicsBufferKey& key);
		void deleteGraphicsBuffer(GraphicsBuffer* buffer);

		GraphicsBuffer* getGraphicsBuffer(const GraphicsBufferKey& key);
};