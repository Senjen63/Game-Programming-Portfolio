/*
* Author: Ananda Shumock-Bailey
* Class: GPR-250-02
* Assignment: Assignment 2
* Certification of Authenticity:
* I certify that this assignment is entirely my own work.
*/

#include <iostream>
#include <cassert>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>
#include <Timer.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#include "EventSystem.h"
#include "Event.h"
#include "EventListener.h"
#include "GraphicsSystem.h"
#include "Game.h"
#include "GraphicsBuffer.h"

using namespace std;

int main()
{
	Game::createInstance();
	Game* gpGame = Game::getInstance();

	EventSystem::initInstance();
	/*EventSystem* pEventSystem = EventSystem::getInstance();
	pEventSystem->init();*/

	gpGame->init();
	gpGame->doLoop();

	gpGame->destroyInstance();
	EventSystem::cleanupInstance();
	

	MemoryTracker::getInstance()->reportAllocations(cout);

	system("pause");
	return 0;
}