#pragma once

#include <map>
#include <string>

class Unit;

/*
* UnitManager Class:
- Holds list of units in game (vector)
- Data
	- Collection of Units (map)
- Functions
	- constructor/destructor
	- adding/deleting/getting Units
	- Clear() - remove all units
	- UpdateAll() and DrawAll()
*/

//UnitManager should have function to get last in vector for toggling unit/ controls

class UnitManager {
public:
	//constructor/destructor
	UnitManager();
	~UnitManager();

	//accessor/mutators
	Unit* getUnit(int unitPos) { return unitVector[unitPos]; };
	void addUnit(Unit* newUnit) { unitVector.push_back(newUnit); };
	void deleteUnit(int unitPos);
	void Clear() { unitVector.clear(); }
	void UpdateAll();
	void DrawAll();
	int getSize() { return unitVector.size(); };

private:
	//int currentUnit;
	std::vector<Unit*> unitVector;
};