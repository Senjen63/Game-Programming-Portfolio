#pragma once

#include "Trackable.h"
#include "Vector2D.h"
#include <vector>
#include "Animation.h"


class Animation;

using namespace std;

enum UnitType
{
	SHIP,
	ASTEROID,
	POINS,
	FAST,
	SLOW,
	BULLET
};

class Unit : public Trackable 
{
	friend class UnitManager;
	friend class ShipManager;
	friend class AsteroidManager;
	friend class ShotManager;

	private:
		Vector2D mLocation;
		Vector2D mHitbox;
		Animation mMainAnimation;
		Animation mAltAnimation;
		float mTimeLeft;
		float mSpeed;
		bool mIsMainAnimation;
		bool mIsAnimating;
		bool mInUse;
		bool mCollide;
		UnitType mType;
		
		int mHalf;

		Unit();
		Unit(Vector2D);
		~Unit();
		void init(Vector2D, Vector2D hit);
		void deinit();
		void setType(UnitType);
		void setSpeed(float);

		const string FILE_PATH = "unit_data.txt";
	public:
		void update(double);
		void draw();

		void setMainAnimation(Animation);
		void setAltAnimation(Animation);
		void setLocation(Vector2D);

		void turnAnimationOff();
		void turnAnimationOn();
		void swapCurrentAnimation();
		void move(int horizontal, int vertical);

		Vector2D getLocation() { return mLocation; }
		float getSpeed() { return mSpeed; }
		float getXPos() { return mLocation.getX(); }
		float getYPos() { return mLocation.getY(); }
		float getWidth() { return mHitbox.getX(); }
		float getHeight() { return mHitbox.getY(); }
		UnitType getType() { return mType; }
		bool getInUse() { return mInUse; }
		Animation getCurrentAnimation();
};