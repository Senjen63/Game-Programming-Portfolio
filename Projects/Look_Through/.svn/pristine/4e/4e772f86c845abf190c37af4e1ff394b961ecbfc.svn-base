#include "GraphicsBuffer.h"

/*
Create a solid color bitmap
*/
GraphicsBuffer::GraphicsBuffer(const Color& color, int height, int width)
{
	mpBitmap = al_create_bitmap(width, height);
	assert(mpBitmap);

	ALLEGRO_BITMAP* current = al_get_target_bitmap();
	al_set_target_bitmap(mpBitmap);
	al_clear_to_color(color.mInternalColor);
	al_set_target_bitmap(current);

	mIsBackBuff = false;
}


/*
Load an image from a file
*/
GraphicsBuffer::GraphicsBuffer(const string& filename)
{
	mpBitmap = al_load_bitmap(filename.c_str());
	assert(mpBitmap);

	mIsBackBuff = false;
}


/*
Used for constructing an object using the backbuffer as a bitmap, extra precautions are taken as to
not delete the backbuffer.
*/
GraphicsBuffer::GraphicsBuffer(ALLEGRO_BITMAP* pBackBuffer)
{
	mpBitmap = pBackBuffer;
	assert(mpBitmap);

	mIsBackBuff = true;
}


/*
Destructor. Only destroy/delete mpBitmap if it's not the backbuffer.
*/
GraphicsBuffer::~GraphicsBuffer()
{
	if (!mIsBackBuff)
	{
		al_destroy_bitmap(mpBitmap);
		mpBitmap = nullptr;
	}
	mpBitmap = nullptr;
}


int GraphicsBuffer::getHeight() const
{
	assert(mpBitmap);
	return al_get_bitmap_height(mpBitmap);
}


int GraphicsBuffer::getWidth() const
{
	assert(mpBitmap);
	return al_get_bitmap_width(mpBitmap);
}
