#include "Unit.h"
#include "Game.h"

Unit::Unit()
{
	mPos = Vector2D();
	mStartPos = mPos;
}

Unit::Unit(Vector2D pos)
{
	mPos = pos;
	mStartPos = mPos;
}

Unit::Unit(GraphicsBuffer* pBuffer, Vector2D pos)
{
	mPos = pos;
	mpSprite = new Sprite(pBuffer, Vector2D(), SPRITE_WIDTH, SPRITE_HEIGHT);
	mStartPos = mPos;
}

Unit::Unit(GraphicsBuffer* pBuffer, Vector2D pos, float width, float height)
{
	mPos = pos;
	mpSprite = new Sprite(pBuffer, Vector2D(), width, height);
	mStartPos = mPos;
}

Unit::~Unit()
{
}

void Unit::updateEnemy(float time, int distance)
{
		if (!mRight)
		{
			mPos = Vector2D(mPos.getX() - distance, mPos.getY());
		}
		if (mRight)
		{
			mPos = Vector2D(mPos.getX() + distance, mPos.getY());
		}
}

void Unit::updateEnemyBullet(float time, int distance)
{
	setPosition(Vector2D(getPosition().getX(), getPosition().getY() + distance));
}

void Unit::drawEnemyBullet(GraphicsSystem* pGraphicsSystem)
{
	pGraphicsSystem->draw(Vector2D(), getSprite(), getPosition().getX(), getPosition().getY());
}

void Unit::draw(GraphicsSystem* pGraphicsSystem, int option, int x, int y)
{
	Vector2D bufferLocation;
	if (option != 1)
	{
		pGraphicsSystem->draw(Vector2D(x, y), getSprite());
	}
}

Vector2D Unit::getPosition()
{
	if (this != nullptr)
		return mPos;
}

void Unit::setPosition(Vector2D pos)
{
	mPos = pos;
}

Sprite* Unit::getSprite()
{
	return mpSprite;
}

void Unit::advanceEnemy()
{
	mRight = !mRight;
	mPos = Vector2D(mPos.getX(), mPos.getY() + 60);
}

bool Unit::getDirection()
{
	return mRight;
}

void Unit::resetPosition()
{
	mPos = mStartPos;
}