#pragma once
#include <fstream>
#include <vector>

#include "Trackable.h"
#include "Vector2D.h"

using namespace std;

class Level : public Trackable
{
    private:
        vector<Vector2D> mWallPositions;
        float mSnakeSpeed = 0;
        int mStartSegmentNum = 0;
        int mEndSegmentNum = 0;
        int mFoodPoints = 0;
        float mPowerUpBaseFrequency = 0; //base seconds between each power up spawn
        float mPowerUpRandomRange = 0; // maximum of random range added to base frequency
        float mBonusChance = 0;
        float mFastChance = 0;
        float mSlowChance = 0;

    public:
        Level();
        Level(float snakeSpeed, int startSegmentNum, int endSegmentNum, int foodPoints, float powerUpBaseFrequency, float powerUpRandomRange, float bonusChance, float fastChance, float slowChance);
        ~Level();

        float getSnakeSpeed() { return mSnakeSpeed; };
        int getStartSegmentNum() { return mStartSegmentNum; };
        int getEndSegmentNum() { return mEndSegmentNum; };
        int getFoodPoints() { return mFoodPoints; };
        float getPowerUpBaseFrequency() { return mPowerUpBaseFrequency; };
        float getPowerUpRandomRange() { return mPowerUpRandomRange; }
        float getBonusChance() { return mBonusChance; };
        float getFastChance() { return mFastChance; };
        float getSlowChance() { return mSlowChance; };
        vector<Vector2D> getWallPositions() { return mWallPositions; }

        void setSnakeSpeed(float newNum) { mSnakeSpeed = newNum; };
        void setStartSegmentNum(int newNum) { mStartSegmentNum = newNum; };
        void setEndSegmentNum(int newNum) { mEndSegmentNum = newNum; };
        void setFoodPoints(int newNum) { mFoodPoints = newNum; };
        void setPowerUpBaseFrequency(float newNum) { mPowerUpBaseFrequency = newNum; };
        void setPowerUpRandomRange(float newNum) { mPowerUpRandomRange = newNum; }
        void setBonusChance(float newNum) { mBonusChance = newNum; };
        void setFastChance(float newNum) { mFastChance = newNum; };
        void setSlowChance(float newNum) { mSlowChance = newNum; };

        void addWallPosition(Vector2D pos);

        void printLevelInfo();
};