#include "HUD.h"
#include "GraphicsSystem.h"
#include "Game.h"
#include "Sprite.h"

HUD::HUD()
{
	mpFont = nullptr;
	mFPS = 0;
	mTime = 0;
}

HUD::~HUD()
{
	cleanUp();
}

void HUD::init(Font* font)
{
	mpFont = font;
	Game::getInstance()->getGraphicsBufferManager()->addBuffer(BLACK_KEY, HUD_WIDTH, HUD_HEIGHT, Color(0, 0, 0));
}

void HUD::cleanUp()
{
	Game::getInstance()->getGraphicsBufferManager()->deleteBuffer(BLACK_KEY);
}

void HUD::drawHUD(GraphicsSystem* display)
{

	Color whiteColor = Color(255, 255, 255);
	display->draw(Vector2D(0,0), Sprite(Game::getInstance()->getGraphicsBufferManager()->getBuffer(BLACK_KEY)), 0, 1, SpriteFlip::NONE);
	//draw(const Vector2D& pos, const Sprite& sprite, float angle, float scale, SpriteFlip flip)
	display->drawText(Vector2D(25, 8), *mpFont, Game::getInstance()->getMenu()->getP1Score(), whiteColor);
	display->drawText(Vector2D(275, 8), *mpFont, Game::getInstance()->getMenu()->getP2Score(), whiteColor);





	//display->drawText(Vector2D(100, 8), *mpFont, "FPS: ", whiteColor);
	//display->WriteText(Vector2D(375, 8), mpFont, whiteColor, "Points: " + to_string(Game::getGame()->getPoints()));
	//display->WriteText(Vector2D(690, 8), mpFont, whiteColor, "Time: " + to_string(Game::getGame()->getTime()));
	//drawText(const Vector2D & pos, const Font & font, const std::string & text, const Color & color)
}