#include "Unit.h"
#include "Game.h"

Unit::Unit()
{
	mPosition = Vector2D();
	mCurrentAnim = 0;
	mHasAnimation = false;
	mpAnim1 = nullptr;
	mHasSprite = false;
}


Unit::Unit(Animation* pAnim1,  Vector2D position)
{
	mPosition = position;
	mCurrentAnim = 1;
	mpAnim1 = pAnim1;
	mHasAnimation = true;
	mTime = 0;
	mIsPaused = false;
	mHasSprite = true;
}


Unit::Unit(GraphicsBuffer* pBuffer, int spriteW, int spriteH)
{
	mPosition = Vector2D(0, 0);
	mCurrentAnim = 1;
	mTime = 0;
	mpAnim1 = nullptr;
	mSprite = new Sprite(pBuffer, Vector2D(), spriteW, spriteH);
	mIsPaused = false;
	mHasAnimation = false;
	mHasSprite = true;
}


Unit::~Unit()
{
	if (mHasAnimation) 
	{
		if (mpAnim1 != nullptr) 
		{
			delete mpAnim1;
			mpAnim1 = nullptr;
		}
	}
}


float Unit::GetTime()
{
	if (mHasAnimation)
	{
		return mpAnim1->GetTime();
	}
	else
	{
		return 0;
	}
}

Vector2D Unit::GetPosition()
{
	return mPosition;
}


void Unit::SetPosition(Vector2D position)
{
	mPosition = position;
}


Sprite* Unit::CurrentSprite()
{
	if (mHasSprite)
	{
		if (mHasAnimation)
		{
			return mpAnim1->GetCurrentSprite(mIsAnimating);
		}
		else
		{
			return mSprite;
		}
	}
	else
	{
		return NULL;
	}
}


void Unit::Update(float t)
{
	mTime += t;
	if (mTime > GetTime() && !mIsPaused && mHasAnimation) 
	{
		if (mpAnim1 != NULL) 
		{
			mpAnim1->Update();
		}
	}
	if (mIsChild) 
	{
		mPosition = mParent->GetPosition() + mParentOffset;
	}
}


void Unit::Draw(GraphicsSystem* pGraphicsSystem)
{
	if (mHasSprite)
	{
		if (mHasAnimation)
		{
			pGraphicsSystem->Draw(CurrentSprite()->GetLocation(), CurrentSprite(), (int)GetPosition().getX(), (int)GetPosition().getY());
		}
		else
		{
			pGraphicsSystem->Draw(Vector2D(GetPosition().getX(), GetPosition().getY()), mSprite);
		}
	}
}


void Unit::SwitchAnimation()
{
	if (mCurrentAnim == 1)
	{
		mCurrentAnim = 0;
	}
	else
	{
		mCurrentAnim = 1;
	}
}


void Unit::TogglePause()
{
	if (mIsPaused)
		mIsPaused = false;
	else
		mIsPaused = true;
}

void Unit::SetHitboxDimensions(int x, int y)
{
	mUnitWidth = x;
	mUnitHeight = y;
}

Vector2D Unit::GetHitboxDimensions()
{
	return Vector2D(mUnitWidth, mUnitHeight);
}

void Unit::SetTime(float timing)
{
	mpAnim1->AdjustTime(timing);
}


void Unit::SetNextSegment(Unit* nextSegment)
{
	mNextSegment = nextSegment;
}

Unit* Unit::GetLastSegment()
{
	return mNextSegment;
}

void Unit::SetWall()
{
	mIsWall = true;
}
bool Unit::GetWall() 
{ 
	return mIsWall; 
}
void Unit::SetPlayer(bool isPlayer)
{
	mIsPlayer = isPlayer;
}
bool Unit::GetPlayer() 
{
	return mIsPlayer;
}
bool Unit::GetGate()
{
	return mIsGate;
}
void Unit::SetGate(bool isGate)
{
	mIsGate = isGate;
}
bool Unit::GetUI()
{
	return mIsUI;
}
void Unit::SetUI(bool isUI)
{
	mIsUI = isUI;
}

void Unit::SetCollTriggered(bool collTrigger)
{
	mCollTriggered = collTrigger;
}

bool Unit::GetCollTriggered()
{
	return mCollTriggered;
}

Unit* Unit::GetParent() 
{
	return mParent;
}

bool Unit::GetObstacle()
{
	return mIsObstacle;
}

void Unit::SetObstacle(bool isObstacle) 
{
	mIsObstacle = isObstacle;
}
void Unit::SetAnimation(bool isAnimating)
{
	mIsAnimating = isAnimating;
}

void Unit::SetParent(Unit* parent)
{
	mParent = parent;
	mParentOffset = mPosition - mParent->GetPosition();
	mIsChild = true;
}