#pragma once

#include <vector>
#include "GraphicsBuffer.h"
#include "Sprite.h"

using namespace std;

class Animation : public Trackable
{
public:
	Animation();
	Animation(GraphicsBuffer* spriteSheet, int perColumn, int perRow, int spriteWidth, int spriteHeight, float targetTime, bool loops);
	~Animation();

	void update(float timePassed);
	void speedUp(float speedIncrease);
	void speedUp();
	void slowDown();
	void slowDown(float speedDecrease);

	Sprite getCurrentSprite();

	void operator=(const Animation& aAnimation);

private:
	const float MIN_SPEED = 0;
	const float MAX_SPEED = 10;
	const float DEFAULT_SPEED = 5;
	const float DEFAULT_SPEED_CHANGE = 1;
	vector<Sprite> mSpriteList;
	float mTimeLeft;
	float mTimePerFrame;
	float mSpeed;
	int mCurrentSprite;
	bool mLooping;
};
