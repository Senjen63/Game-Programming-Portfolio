#pragma once

#include <Event.h>
#include <Vector2D.h>

enum class KeyCode;
enum class MouseButton;

enum KeyboardEventType
{
    EVENT_KEY_DOWN = EventType::NUM_BASE_EVENT_TYPES,
    EVENT_KEY_UP,
    NUM_KEYBOARD_EVENT_TYPES
};

enum MouseEventType
{
    EVENT_MOUSE_BUTTON_DOWN = KeyboardEventType::NUM_KEYBOARD_EVENT_TYPES,
    EVENT_MOUSE_BUTTON_UP,
    EVENT_MOUSE_MOVE,
    NUM_MOUSE_EVENT_TYPES
};

class KeyboardEvent : public Event
{
public:
    KeyboardEvent(KeyboardEventType type, KeyCode keyCode);
    virtual ~KeyboardEvent() {};

    KeyCode getKeyCode() const { return mKeyCode; }

private:
    KeyCode mKeyCode;
};

class MouseEvent : public Event
{
public:
    MouseEvent(MouseEventType type, Vector2D mousePos, Vector2D deltaMousePos);
    MouseEvent(MouseEventType type, Vector2D mousePos, MouseButton mouseButton);
    virtual ~MouseEvent() {};

    Vector2D getMousePos() const { return mMousePos; }
    Vector2D getDeltaMousePos() const { return mDeltaMousePos; }
    MouseButton getMouseButton() const { return mMouseButton; }

private:
    Vector2D mMousePos = Vector2D();
    Vector2D mDeltaMousePos = Vector2D();
    MouseButton mMouseButton = (MouseButton)-1;
};
