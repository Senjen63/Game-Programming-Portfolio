#include "InputSystem.h"

InputSystem::InputSystem()
{
	mpEventQueue = nullptr;
	mpEventSystem = nullptr;
}


InputSystem::~InputSystem()
{
	CleanUp();
}


void InputSystem::Init() 
{
	al_init();
	al_install_keyboard();
	al_install_mouse();
	mpEventSystem = EventSystem::getInstance();
	mpEventSystem->init();
	mpEventQueue = al_create_event_queue();
	al_register_event_source(mpEventQueue, al_get_keyboard_event_source());
}


void InputSystem::CleanUp()
{
	mpEventSystem->cleanup();
}


bool InputSystem::GetKey(int keyCode)
{
	ALLEGRO_KEYBOARD_STATE keyState;
	al_get_keyboard_state(&keyState);

	if (al_key_down(&keyState, keyCode)) 
	{
		return true;
	}
	else
	{
		return false;
	}	
}


bool InputSystem::GetMouseDown(int mouseCode)
{
	al_get_mouse_state(&mMouseState);
	return al_mouse_button_down(&mMouseState, mouseCode);
}


Vector2D InputSystem::GetMousePosition()
{
	al_get_mouse_state(&mMouseState);
	return Vector2D(mMouseState.x, mMouseState.y);
}


void InputSystem::InputEventLoop()
{
	ALLEGRO_KEYBOARD_STATE keyState;
	al_get_keyboard_state(&keyState);
	while (!al_is_event_queue_empty(mpEventQueue))
	{
		ALLEGRO_EVENT currEvent;
		al_get_next_event(mpEventQueue, &currEvent);
		if (currEvent.type == ALLEGRO_EVENT_KEY_DOWN) 
		{
			mpEventSystem->fireEvent(InputEvent((int)currEvent.keyboard.keycode));
		}
	}
}