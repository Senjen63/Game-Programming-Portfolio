#include "Game.h"
#include "Unit.h"
#include "Sprite.h"
#include "Animation.h"
#include "GraphicsSystem.h"


void Unit::update(double dt)
{
	mpCurrentAnim->update(dt);
}

void Unit::draw()
{
	GraphicsSystem* graphSys = GraphicsSystem::getInstance();

	graphSys->draw(mLocation, mpCurrentAnim->getCurrentSprite());
}

void Unit::toggleAnimation()
{
	//updateDrawLocation();
}

void Unit::setLocation(Vector2D location)
{
	mLocation = location;
	//updateDrawLocation();
}

void Unit::pauseAnimation(bool pause)
{
	mMainAnim.setPause(pause);	
}

bool Unit::checkIfIntersecting(Vector2D location)
{
	float localX = location.getX();
	float localY = location.getY();

	float sprtLocationX = mLocation.getX();
	float sprtLocationY = mLocation.getY();

	bool isWithinWidth = localX > sprtLocationX && localX < sprtLocationX + mAnimWidth;
	bool isWithinHeight = localY > sprtLocationY && localY < sprtLocationY + mAnimHeight;

	return isWithinWidth && isWithinHeight;
}

//void Unit::updateDrawLocation()
//{
//	// Location to draw the sprites so they're centered on mLocation
//	mAnimWidth = mpCurrentAnim->getCurrentSprite()->getWidth();
//	mAnimHeight = mpCurrentAnim->getCurrentSprite()->getHeight();
//
//	mDrawLocation = mLocation - Vector2D(mAnimWidth / 2, mAnimHeight / 2);
//}