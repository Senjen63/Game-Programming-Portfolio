#pragma once

#include <Trackable.h>
#include <Vector2D.h>
#include <vector>

#include "Unit.h"

enum class UnitType;

class GraphicsBuffer;
class Animation;
class Unit;

using namespace std;

class UnitManager : public Trackable
{
public:

	UnitManager() {};
	UnitManager(Animation* pWallAnim, Animation* pSnakeAnim, Animation* pFoodAnim, Animation* pPointsAnim, Animation* pSpeedAnim, Animation* pSlowAnim, Animation* pButtonAnim);
	~UnitManager();

	//Unit* getLastUnit();
	Unit* getUnitAt(Vector2D location);
	
	void addUnitAt(Vector2D location, UnitType type);	
	void deleteAllUnitsAt(Vector2D location);
	void clearUnits();

	void setPauseAllUnitAnims(bool pause);

	void updateAll(double dt);
	void drawAll();

private:

	void createUnit(Vector2D location, Animation pAnim, UnitType type);

	static const int UNIT_POOL_SIZE = 24 * 18;

	Unit mUnits[UNIT_POOL_SIZE];

	Unit* mpFirstAvailable = nullptr;

	Animation* mpButtonAnim = nullptr;
	Animation* mpWallAnim = nullptr;
	Animation* mpSnakeAnim = nullptr;
	Animation* mpFoodAnim = nullptr;
	Animation* mpPointsAmim = nullptr;
	Animation* mpSpeedAnim = nullptr;
	Animation* mpSlowAnim = nullptr;

};

