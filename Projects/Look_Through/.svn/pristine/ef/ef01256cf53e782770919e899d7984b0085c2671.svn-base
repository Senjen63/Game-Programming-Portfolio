/*******************************************************
* Author: Aven Presseisen
* Class: GPR-250-02
* Assignment: Assignment 3
* Certification of Authenticity:
* I certify that this assignment is entirely my own work.
************/

#pragma once

#include <allegro5/allegro.h>
#include <Vector2D.h>

enum class Key
{
	A = 1,
	B,
	C,
	D,
	E,
	F,
	G,
	H,
	I,
	J,
	K,
	L,
	M,
	N,
	O,
	P,
	Q,
	R,
	S,
	T,
	U,
	V,
	W,
	X,
	Y,
	Z = 26,

	ESCAPE = 59,
	ENTER = 67,
	SPACE = 75,
};

enum class KeyState
{
	RELEASED,
	PRESSED,
};

struct MouseState : public Trackable
{
	enum MouseClick
	{
		NONE,
		LEFT_CLICK,
		RIGHT_CLICK,
		BOTH
	};

	MouseClick mClickType = NONE;
	
	Vector2D mMousePosition = ZERO_VECTOR2D;
};

class InputSystem : public Trackable
{
	ALLEGRO_EVENT_QUEUE * mpQueue;
	ALLEGRO_EVENT mEvent;

	unsigned char mKeys[ ALLEGRO_KEY_MAX ];
	MouseState mMouseState;

public:
	InputSystem();
	~InputSystem();

	void cleanup();
	KeyState getKeyState( Key key );
	MouseState getMouseState();
	void init();
	void pollInputs();
};


