#pragma once

#include <Trackable.h>
#include <SDL.h>
#include <EventSystem.h>
#include "InputEvents.h"

enum class KeyCode
{
    INVALID = -1,
    A = SDLK_a, B = SDLK_b, C = SDLK_c, D = SDLK_d,
    E = SDLK_e, F = SDLK_f, G = SDLK_g, H = SDLK_h,
    I = SDLK_i, J = SDLK_j, K = SDLK_k, L = SDLK_l,
    M = SDLK_m, N = SDLK_n, O = SDLK_o, P = SDLK_p,
    Q = SDLK_q, R = SDLK_r, S = SDLK_s, T = SDLK_t,
    U = SDLK_u, V = SDLK_v, W = SDLK_w, X = SDLK_x,
    Y = SDLK_y, Z = SDLK_z,

    ONE = SDLK_1, TWO = SDLK_2, THREE = SDLK_3,
    FOUR = SDLK_4, FIVE = SDLK_5, SIX = SDLK_6,
    SEVEN = SDLK_7, EIGHT = SDLK_8, NINE = SDLK_9,
    ZERO = SDLK_0,

    ESCAPE = SDLK_ESCAPE,
    TAB = SDLK_TAB,
    SPACE = SDLK_SPACE,

    RIGHT_ARROW = SDLK_RIGHT,
    LEFT_ARROW = SDLK_LEFT,
    UP_ARROW = SDLK_UP,
    DOWN_ARROW = SDLK_DOWN,

    SLASH = SDLK_SLASH,
};

enum class MouseButton
{
    INVALID = -1,
    LEFT = SDL_BUTTON_LEFT,
    RIGHT = SDL_BUTTON_RIGHT,
    MIDDLE = SDL_BUTTON_MIDDLE,
};

class InputSystem : public Trackable
{
public:
    InputSystem() = default;
    InputSystem(const InputSystem&) = delete;
    void operator=(const InputSystem&) = delete;
    ~InputSystem();

    void init() {};
    void cleanUp() {};

    void update();

private:
    SDL_Event theEvent{}; // {} initializes the struct 

    bool mIsInitted = false;
};
