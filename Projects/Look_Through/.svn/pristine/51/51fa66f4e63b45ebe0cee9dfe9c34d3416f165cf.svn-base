#include "Language.h"

Language::Language()
{
	mCurrentLanguage = 0;
}

Language::Language(string languageFile)
{
	mCurrentLanguage = 0;

	ifstream data(languageFile);
	if (data.good())
	{
		string word;
		vector<string> keyWords;
		getline(data, word);
		mLanguages.push_back(word);

		while (!(word == "EOL"))
		{
			getline(data, word);
			mMap.emplace(word + to_string(mCurrentLanguage), word);
			keyWords.push_back(word);
		}

		int i = 0;
		while (!data.eof())
		{
			
			getline(data, word);
			if (word == "Next")
			{
				getline(data, word);
				mLanguages.push_back(word);
				mCurrentLanguage++;
				i = 0;
			}
			else
			{
				mMap.emplace(keyWords.at(i) + to_string(mCurrentLanguage), word);
				i++;
			}
			cout << word << endl;
		}
		mCurrentLanguage = 0;
	}
}

void Language::switchLanguage()
{
	mCurrentLanguage++;
	if (mCurrentLanguage >= mLanguages.size())
	{
		mCurrentLanguage = 0;
	}
}


string Language::getCurrentLanguage()
{
	return mLanguages.at(mCurrentLanguage);
}

string Language::getWord(string baseWord)
{
	return mMap.at(baseWord + to_string(mCurrentLanguage));
}