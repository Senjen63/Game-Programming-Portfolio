#include "UnitManager.h"

UnitManager::~UnitManager()
{
	cleanup();
}


void UnitManager::cleanup()
{

	for (int i = 0; i < mpUnits.size(); i++)
	{
		Unit* pUnit = mpUnits[i];
		delete pUnit;
	}

	mpUnits.clear();
}


void UnitManager::createAndAddUnit(Animation anim)
{
	// create unit
	Unit* pUnit = new Unit(anim);

	// manage the unit
	mpUnits.push_back(pUnit);
}


void UnitManager::update(double dt)
{
	for (int i = 0; i < mpUnits.size(); i++)
	{
		Unit* pUnit = mpUnits[i];
		pUnit->update(dt);
	}
}


void UnitManager::draw(GraphicsSystem* graphSys)
{
	for (int i = 0; i < mpUnits.size(); i++)
	{
		Unit* pUnit = mpUnits[i];
		pUnit->draw(graphSys);
	}
}

Unit* UnitManager::getUnit(int index)
{
	if (mpUnits.size() > 0)
		return mpUnits[index];
	else
		return nullptr;
}
