#pragma once

#include <allegro5/allegro.h>
#include <string>
#include <iostream>
#include "Trackable.h"

class Sprite;
class Font;
class Color;
class GraphicsBuffer;
class Vector2D;

using namespace std;

class GraphicsSystem : public Trackable
{
	private:
		ALLEGRO_DISPLAY* mpDisplay;
		GraphicsBuffer* mpBackBuffer;

		// getters
		int getDisplayHeight() { return al_get_display_height(mpDisplay); }
		int getDisplayWidth() { return al_get_display_width(mpDisplay); }
		ALLEGRO_DISPLAY* getDisplay() { return mpDisplay; }
		ALLEGRO_COLOR createColor(Color*);

	public:
		GraphicsSystem();
		~GraphicsSystem();

		void init(int displayWidth, int displayHeight);
		void cleanUp();

		void flip();

		void draw(Vector2D* loc, Sprite*, float scale = 1.0);
		void draw(GraphicsBuffer* buffer, Vector2D* loc, Sprite*, float scale = 1.0);

		void setColor(GraphicsBuffer* buffer, Color*);

		void writeText(Vector2D* loc, Font*, Color*, string text);
		void writeText(GraphicsBuffer* buffer, Vector2D* loc, Font*, Color*, string text);

		void saveBuffer(GraphicsBuffer* buffer, string filename);

		GraphicsBuffer* getBackBuffer();
};