#include "Unit.h"
#include "Animation.h"
#include "Game.h"
#include "GraphicsSystem.h"
#include "Sprite.h"
#include <fstream>

Unit::Unit(Vector2D location)
{
	ifstream input("../GalahadAssets/data/" + FILE_PATH);
	if (input.good())
	{
		string key;

		while (!input.eof())
		{
			input >> key;
			if (key == "half")
			{
				input >> mHalf;
			}
		}
	}

	this->mLocation = location;
	this->mIsAnimating = true;
	this->mIsMainAnimation = true;
}

Unit::~Unit()
{
}

void Unit::init(Vector2D location, Vector2D hit)
{
	this->mLocation = location;
	this->mHitbox = hit;
	this->mIsAnimating = true;
	this->mIsMainAnimation = true;
	this->mInUse = true;
}

void Unit::deinit()
{
	this->mInUse = false;
}

void Unit::setType(UnitType objType)
{
	this->mType = objType;
}

void Unit::setSpeed(float spd)
{
	this->mSpeed = spd;
}

void Unit::update(double elapsedTime)
{
	if (mIsAnimating) 
	{
		if (mIsMainAnimation)
		{
			mMainAnimation.update(elapsedTime);
		}
		else 
		{
			mAltAnimation.update(elapsedTime);
		}
	}
	else 
	{
		return;
	}	
}

void Unit::draw()
{
	if (mIsMainAnimation)
	{
		Game::getInstance()->getGraphicsSystem()->draw(&Vector2D(mLocation.getX() - mMainAnimation.getCurrentSprite().getSpriteWidth() / mHalf, mLocation.getY() - mMainAnimation.getCurrentSprite().getSpriteHeight() / mHalf), &mMainAnimation.getCurrentSprite());
	}
	else
	{
		Game::getInstance()->getGraphicsSystem()->draw(&Vector2D(mLocation.getX() - mAltAnimation.getCurrentSprite().getSpriteWidth() / mHalf, mLocation.getY() - mAltAnimation.getCurrentSprite().getSpriteHeight() / mHalf), &mAltAnimation.getCurrentSprite());
	}
}

void Unit::setLocation(Vector2D newLocation)
{
	this->mLocation = newLocation;
}


void Unit::setMainAnimation(Animation animation)
{
	this->mMainAnimation = animation;
	mHitbox = animation.getDimen();
}



void Unit::setAltAnimation(Animation animation) 
{
	this->mAltAnimation = animation;
}


void Unit::turnAnimationOff()
{
	mIsAnimating = false;
}

void Unit::turnAnimationOn() 
{
	mIsAnimating = true;
}

void Unit::swapCurrentAnimation() 
{

	if (mIsMainAnimation) 
	{
		mIsMainAnimation = false;
	} 
	else 
	{
		mIsMainAnimation = true;
	}
}

Animation Unit::getCurrentAnimation()
{
	if (mIsMainAnimation) 
	{
		return mMainAnimation;
	}
	else 
	{
		return mAltAnimation;
	}
}

void Unit::move(int horizontal, int vertical)
{
	float xCoor = mLocation.getX() + (horizontal * mSpeed);
	float yCoor = mLocation.getY() + (vertical * mSpeed);
	
	if (mType == SHIP)
	{
		if (xCoor <= mHitbox.getX() / mHalf)
			xCoor = mHitbox.getX() / mHalf;
		if (xCoor >= (float(Game::getInstance()->getWidth()) - mHitbox.getX() / mHalf))
			xCoor = (float(Game::getInstance()->getWidth()) - mHitbox.getX() / mHalf);

		if (yCoor <= mHitbox.getY() / mHalf)
			yCoor = mHitbox.getY() / mHalf;
		if (yCoor >= (float(Game::getInstance()->getHeight()) - mHitbox.getY() / mHalf))
			yCoor = (float(Game::getInstance()->getHeight()) - mHitbox.getY() / mHalf);
	}


	mLocation = Vector2D(xCoor, yCoor);
}
