#include "InputTranslator.h"
#include "EventSystem.h"
#include "KeyboardEvent.h"
#include "InputEvent.h"

InputTranslator::InputTranslator()
{
	EventSystem::getInstance()->addListener((EventType)KEYBOARD_EVENT, this);
}

InputTranslator::~InputTranslator()
{
}

void InputTranslator::handleEvent(const Event& theEvent)
{
	if (theEvent.getType() == KEYBOARD_EVENT)
	{
		const KeyboardEvent& keyboardEvent = static_cast<const KeyboardEvent&>(theEvent);

		//translate keys to game events
		if (keyboardEvent.getInput() == UP) { EventSystem::getInstance()->fireEvent(InputEvent(UP_EVENT)); }
		if (keyboardEvent.getInput() == DOWN) { 
			EventSystem::getInstance()->fireEvent(InputEvent(DOWN_EVENT)); }
		if (keyboardEvent.getInput() == LEFT) { EventSystem::getInstance()->fireEvent(InputEvent(LEFT_EVENT)); }
		if (keyboardEvent.getInput() == RIGHT) { EventSystem::getInstance()->fireEvent(InputEvent(RIGHT_EVENT)); }
		if (keyboardEvent.getInput() == SPACE) { EventSystem::getInstance()->fireEvent(InputEvent(CONTINUE_EVENT)); }
		if (keyboardEvent.getInput() == ESCAPE) { EventSystem::getInstance()->fireEvent(InputEvent(QUIT_EVENT)); }
	}
}