/*
Author: David Silverman
Class: GPR-250-01
Assignment: Assignment 3
Certification of Authenticity:
I certify that this assignment is entirely my own work.
 */

#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>
#include <Trackable.h>
#include <Vector2D.h>
#include <vector>

#include "unit.h"

using namespace std;

class UnitManager : public Trackable 
{
		vector<Unit*> mpUnits;
		Animation* mpSmurfAnimation;
		Animation* mpDeanAnimation;
		bool inBounds(Unit* dUnit, Vector2D loc);
		float mSystemSpeed;
	public:
		UnitManager();
		UnitManager(Animation* smurfAnimation, Animation* deanAnimation);
		~UnitManager();
		void Cleanup();
		void AddNewUnit();
		void AddNewUnit(Vector2D loc);
		void DestroyUnit();
		void DestroyUnit(int del);
		void DestroyUnit(Unit* pUnit);
		Unit* getUnit();
		Unit* getUnit(int get);
		void switchLast();
		void updateAll(double dt);
		void drawAll();
		void drawAll(GraphicsBuffer* buffer);
		void setManagerSpeed(bool increase, float rate);
		void deleteUnit(Vector2D pos);
		void Clear();
		void setAnimations(Animation* smurfAnimation, Animation* deanAnimation);
		float getSystemSpeed() { return mSystemSpeed; }
};