#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include "allegro5/base.h"
#include "allegro5/events.h"
#include "allegro5/keycodes.h"

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Trackable.h>

#include <iostream>
#include <cassert>
#include <string>
#include <Vector2D.h>
#include <Timer.h>
#include <time.h>

#include "GraphicsSystem.h"
#include "InputSystem.h"
#include "Animation.h"
#include "Unit.h"

using namespace std;

//files
const string ASSET_PATH = "..\\..\\common\\assets\\";
const string WOOD_FILENAME = "Woods.png";
const string SMURF_FILENAME = "smurf_sprites.png";
const string DEAN_FILENAME = "dean_sprites.png";

//Display
const int DISP_WIDTH = 800;
const int DISP_HEIGHT = 600;
const int S_WIDTH = 60;
const int S_HEIGHT = 60;
const int FPS = 16.7;
const int SPRITE_COUNT = 16;
const float INITIAL_SPEED = 0.008;
const int SMURF_AMOUNT_MULTIPLE = 4;

//holds all systems and game loop
class Game : public Trackable
{
private:
	
	Animation mpSmurfA;
	Animation mpDeanA;

	Unit* mpUnit;
	

	GraphicsSystem* mpgSystem;
	InputSystem* mpInputSystem;

	GraphicsBuffer* mpWoodPNG;
	GraphicsBuffer* mpSmurfPNG;
	GraphicsBuffer* mpDeanPNG;

public:
	Game();
	~Game();

	void initialize(int width, int height);
	void cleanUp();

	void doLoop(); //tim egame loop
	//get user input
	//adjust game state
	//draw current game state
	//wait until the target amount of time has elapsed
	//create sprites from smurf and  and dean, create animation and unit

};

extern Game* gpGame;