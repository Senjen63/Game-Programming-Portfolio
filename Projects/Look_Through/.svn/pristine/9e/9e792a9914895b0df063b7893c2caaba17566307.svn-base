#include "Animation.h"


void Animation::addSprites(GraphicsBuffer* buffer, int width, int height, int size)
{
	int count = 0;
	int numWidth = width;
	int numHeight = height;
	int spriteSize = size;

	Vector2D loc = Vector2D();

	for (int i = 0; i < numHeight; i++)
	{
		for (int j = 0; j < numWidth; j++)
		{
			loc.setX(j * spriteSize);
			loc.setY(i * spriteSize);

			mSpriteList[count] = Sprite(buffer, loc, spriteSize, spriteSize);
			count++;
		}
	}
}

Animation::Animation(Animation* anim)
{
	mSpriteList = anim->mSpriteList;

	mCurrentSprite = 0;
	mTimeLeft = 0;

	mTemplate = anim->getAnimationManager();
}

Animation::Animation(AnimationManager* temp, GraphicsBuffer* buffer)
{
	mTemplate = temp;

	mSpriteList = new Sprite[mTemplate->getNumSprites()];

	addSprites(buffer, mTemplate->getSpriteWidth(), mTemplate->getSpriteHeight(), mTemplate->getSpriteSize());

	mCurrentSprite = 0;

	mTimeLeft = 0;
}

Animation::~Animation()
{
}

void Animation::cleanUp()
{
	delete[] mSpriteList;
}

AnimationManager* Animation::getAnimationManager()
{
	return mTemplate;
}

Sprite* Animation::getCurrentSprite()
{
	return &mSpriteList[mCurrentSprite];
}

void Animation::Update(double dt)
{
	mTimeLeft -= dt;

	if (mTimeLeft <= 0)
	{
		mCurrentSprite++;
		mTimeLeft = mTemplate->getTimePerFrame();

		if (mCurrentSprite >= mTemplate->getNumSprites() && mTemplate->getShouldLoop())
		{
			mCurrentSprite = 0;
		}
	}
}