#pragma once

#include <unordered_map>
#include <vector>
#include <fstream>
#include "Menu.h"
#include "Game.h"

class Game;

class SettingsMenu : public Menu
{
	std::unordered_map<std::string, std::string> mEnglish;
	std::unordered_map<std::string, std::string> mSpanish;
	std::unordered_map<std::string, std::string> mPolish;

	std::vector<std::unordered_map<std::string, std::string>> mLanguages;

public:
	SettingsMenu() {};
	~SettingsMenu() { cleanup(); }

	virtual void init() override;
	virtual void cleanup() override;

	virtual void onButtonPressed(std::string buttonID) override;

	std::string getWord(std::string text);
	std::unordered_map<std::string, std::string> getCurLangStrings() { return mLanguages[Game::getInstance()->getCurrentLanguage()]; };
};