#include "Animation.h"

Animation::Animation(float framerate)
{
	mFps = framerate;
	mTimeBetweenFrame = 1000.0/mFps;
	mPlaceInVector = 0;
	mTimeLeft = mTimeBetweenFrame;
	mShouldLoop = true;
}

Animation::~Animation()
{
	
}

void Animation::addSprite(Sprite sprite)
{
	mFrames.push_back(sprite);
}

void Animation::update(double dt)
{
	mTimeLeft -= dt;
	if (mTimeLeft <= 0)
	{
		mPlaceInVector++;
		mTimeLeft = mTimeBetweenFrame;
		if (mPlaceInVector == mFrames.size())
		{
			mPlaceInVector = 0;
		}
	}
}

Sprite Animation::getCurrentSprite()
{
	return mFrames[mPlaceInVector];
}

void Animation::speedUpAnim(int newFPS)
{
	cout << mFps << endl;
	mFps = newFPS;
	cout << mFps << endl;
	mTimeBetweenFrame = 1000.0 / mFps; 
}

void Animation::slowDownAnim(int newFPS)
{
	cout << mFps << endl;
	mFps = newFPS;
	cout << mFps << endl;
	mTimeBetweenFrame = 1000.0 / mFps;
}