//Evan Norzow, Nicolas Delbue, and Brandon Perry
#pragma once
#include "Sprite.h"
#include "Trackable.h"
#include <vector>

class Animation : public Trackable
{
private:
	std::vector<Sprite> mSpriteList;
	//Timing info
	double mTimePerFrame = 16.7;
	bool mShouldLoop = false;

public:
	Animation() {};
	void addSprite(GraphicsBuffer* frames, int columns, int rows, int fps, bool shouldLoop);
	~Animation() {};
	Sprite getSprite(int i) { return mSpriteList[i]; };

	int getNumSprites() { return mSpriteList.size(); };
	double getTimePerFrame() { return mTimePerFrame; };
	bool getShouldLoop() { return mShouldLoop; };

	void speedChange(double amount);
};