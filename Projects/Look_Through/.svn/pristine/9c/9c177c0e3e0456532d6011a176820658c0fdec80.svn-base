//BP
#include "GameLevel.h"

GameLevel::GameLevel()
{
    mEndBodyParts = 10;
    mFoodScoreValue = 1;
    mBeginBodyParts = 1;
    mPlayerSnakeSpeed = 1;
    mBeginItemProbability = 10;
    mRandomItemProbability = 0;
    mFastItemProbability = .33f;
    mSlowItemProbability = .34f;
    mBonusItemProbability = .33f;
}

GameLevel::GameLevel(float speed, int beginBodyParts, int endBodyParts, int foodVal, float beginItemProb, float randItemProb, float bonusItemProb, float fastProb, float slowProb)
{
    mPlayerSnakeSpeed = speed;
    mFoodScoreValue = foodVal;
    mEndBodyParts = endBodyParts;
    mFastItemProbability = fastProb;
    mSlowItemProbability = slowProb;
    mBeginBodyParts = beginBodyParts;
    mBeginItemProbability = beginItemProb;
    mRandomItemProbability = randItemProb;
    mBonusItemProbability = bonusItemProb;
}

GameLevel::~GameLevel()
{
    //Unused Destructor
}

void GameLevel::printCurrentLevelStats()
{
    cout << "Beginning Item Probability - "
        << mBeginItemProbability
        << endl;
    cout << "Random Item Probability - "
        << mRandomItemProbability
        << endl;
    cout << "Fast Item Probability - "
        << mFastItemProbability
        << endl;
    cout << "Slow Item Probability - "
        << mSlowItemProbability
        << endl;
    cout << "Bonus Item Probability - "
        << mBonusItemProbability
        << endl;
    cout << "Player Speed - " 
        << mPlayerSnakeSpeed 
        << endl;
    cout << "Beginning Body Parts - " 
        << mBeginBodyParts 
        << endl;
    cout << "End Body Parts - " 
        << mEndBodyParts 
        << endl;
    cout << "Food Score Value - " 
        << mFoodScoreValue 
        << endl;
    for (int i = 0; i < mWallLocations.size(); i++)
    {

        cout << "Walls on this level - " << i
            << " - (" << mWallLocations[i].getX()
            << ", " << mWallLocations[i].getY()
            << ")" << endl;

    }
    cout << endl;
}

void GameLevel::addWallLocation(Vector2D location)
{
    mWallLocations.push_back(location);
}