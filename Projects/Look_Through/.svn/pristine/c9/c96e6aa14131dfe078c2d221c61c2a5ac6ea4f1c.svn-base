#pragma once

#include <Trackable.h>
#include <allegro5/allegro_color.h>

/// <summary>
/// Holds info for rgba colors ranging 0-255 
/// </summary>
struct Color : public Trackable
{
    friend class GraphicsSystem;

    Color(unsigned char r, unsigned char g, unsigned char b, unsigned char a = 255);
    Color(float r, float g, float b, float a = 1.0f);

    unsigned char r, g, b, a;

private:
    /// <summary>
    /// Implicit cast to convert into an ALLEGRO_COLOR 
    /// </summary>
    operator ALLEGRO_COLOR() const;
};


/* Consts to make life easier */
// Short for Color(255, 0, 0, 255)
const Color COLOR_RED = Color((unsigned char)255, 0, 0, 255);
// Short for Color(0, 255, 0, 255);
const Color COLOR_GREEN = Color((unsigned char)0, 255, 0, 255);
// Short for Color(0, 0, 255, 255);
const Color COLOR_BLUE = Color((unsigned char)0, 0, 255, 255);
// Short for Color(255, 255, 0, 255);
const Color COLOR_YELLOW = Color((unsigned char)255, 255, 0, 255);
// Short for Color(255, 0, 255, 255);
const Color COLOR_MAGENTA = Color((unsigned char)255, 0, 255, 255);
// Short for Color(0, 255, 255, 255);
const Color COLOR_CYAN = Color((unsigned char)0, 255, 255, 255);
// Short for Color(255, 255, 255, 255);
const Color COLOR_WHITE = Color((unsigned char)255, 255, 255, 255);
// Short for Color(0, 0, 0, 255);
const Color COLOR_BLACK = Color((unsigned char)0, 0, 0, 255);
// Short for Color(128, 128, 128, 255);
const Color COLOR_GREY = Color((unsigned char)128, 128, 128, 255);
const Color COLOR_GRAY = COLOR_GREY;
// Short for Color(0, 0, 0, 0);
const Color COLOR_CLEAR = Color((unsigned char)0, 0, 0, 0);