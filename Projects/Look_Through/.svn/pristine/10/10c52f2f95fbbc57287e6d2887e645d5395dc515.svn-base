#pragma once

#include "Collider.h"

class CircleCollider : public Collider
{
public:
    CircleCollider(CollisionTag collisionTag, float radius);
    virtual ~CircleCollider() {};

    // Implement these as needed 
    virtual	void init() {};
    virtual void cleanUp() {};
    virtual void Update(double deltaTime) { Collider::Update(deltaTime); };
    virtual void handleEvent(const Event& theEvent) {};

    virtual bool collides(const Collider& other) const;

    float getRadius() const { return mRadius; }
    float getRadiusSqr() const { return mRadius * mRadius; }

private:
    // This is less negotiable than box collider 
    // If you really want you could bring this to a stuct but I don't see why 
    float mRadius;
};
