#pragma once
#include "Animation.h"
#include "Vector2D.h"
#include <PerformanceTracker.h>
#include <MemoryTracker.h>

class Unit : public Trackable
{
private:
	Vector2D mPosition;
	int mCurrentAnim;
	float mTime;
	Animation* mpAnim1;
	bool mIsPaused;
	bool mHasAnimation = false;
	Sprite* mSprite;
	Unit* mNextSegment;
	bool mIsFood = false;
	bool mIsWall = false;
	bool mIsFloor = false;
	int  mPowerUpType = 0;

public:
	Unit();
	Unit(Animation* pAnim1, Vector2D position);
	Unit(GraphicsBuffer* pBuffer);
	~Unit();

	float GetTime();
	Sprite* CurrentSprite();
	bool CheckIfWall();
	bool CheckIfFood();
	bool CheckIfFloor();
	void SetWall();
	void SetFood();
	void SetFloor();
	void Update(float t);
	void Draw(GraphicsSystem* pGraphicsSystem);
	void SwitchAnimation();
	void SetTime(float t);
	Vector2D GetPosition();
	void SetPosition(Vector2D position);
	void TogglePause();
	void SetNextSegment(Unit* nextSegment);
	Unit* GetLastSegment();
	void SetPowerUpType(int type);
	int GetPowerUpType();

};