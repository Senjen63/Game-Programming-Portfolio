#include "Solicitor.h"
#include "Game.h"

Solicitor::Solicitor(Direction dir, Vector2D location, Animation* anim, Player* p) : EnemyBase{ dir, location, anim }
{
	mSpeed = SOLICITOR_SPEED;

	mMaxHealth = SOLICITOR_HEALTH;
	if (Game::getInstance()->getDifficulty() == NORMAL) { mMaxHealth = int(mMaxHealth * HEALTH_MULT_NORMAL); }
	if (Game::getInstance()->getDifficulty() == HARD) { mMaxHealth = int(mMaxHealth * HEALTH_MULT_HARD); }
	mCurrentHealth = mMaxHealth;

	mInvFrames = SOLICITOR_INV;
	mpPlayer = p;
}

void Solicitor::move()
{
	//check if sees player
	if (Vector2D::getDistanceBetween(mLocation, mpPlayer->getLocation()) < SOLICITOR_LOOK_DISTANCE) { mSeesPlayer = true; }
	else { mSeesPlayer = false; }

	if (mSeesPlayer)
	{
		if (mLocation.getX() > mpPlayer->getX() && abs(mLocation.getX() - mpPlayer->getX()) > SOLICITOR_LOOK_SMOOTHING)
		{
			Vector2D locationToMoveTo = Vector2D(mLocation.getX() - mSpeed, mLocation.getY());

			if (!isColliding(locationToMoveTo)) mLocation.setX(locationToMoveTo.getX());
		}
		else if (mLocation.getX() < mpPlayer->getX() && abs(mLocation.getX() - mpPlayer->getX()) > SOLICITOR_LOOK_SMOOTHING)
		{
			Vector2D locationToMoveTo = Vector2D(mLocation.getX() + mSpeed, mLocation.getY());

			if (!isColliding(locationToMoveTo)) mLocation.setX(locationToMoveTo.getX());
		}

		if (mLocation.getY() > mpPlayer->getY() && abs(mLocation.getY() - mpPlayer->getY()) > SOLICITOR_LOOK_SMOOTHING)
		{
			Vector2D locationToMoveTo = Vector2D(mLocation.getX(), mLocation.getY() - mSpeed);

			if (!isColliding(locationToMoveTo)) mLocation.setY(locationToMoveTo.getY());
		}
		else if (mLocation.getY() < mpPlayer->getY() && abs(mLocation.getY() - mpPlayer->getY()) > SOLICITOR_LOOK_SMOOTHING)
		{
			Vector2D locationToMoveTo = Vector2D(mLocation.getX(), mLocation.getY() + mSpeed);

			if (!isColliding(locationToMoveTo)) mLocation.setY(locationToMoveTo.getY());
		}
	}
}