//BP
#pragma once
#include <Trackable.h>
#include <string>
#include <Vector2D.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>
#include "Color.h"

using namespace std;

class GraphicsBuffer : public Trackable
{
friend class GraphicsSystem;
private:
    bool mOwnsBitmap = false;
    ALLEGRO_BITMAP* mpBitmap;
    Vector2D mPieces = Vector2D(1, 1);
public:
    GraphicsBuffer(GraphicsBuffer* pBuff);
    GraphicsBuffer(ALLEGRO_BITMAP* pBitmap);
    GraphicsBuffer(string path, Vector2D pieces);
    GraphicsBuffer(Color color, int xLength, int yLength);
    ~GraphicsBuffer();
    void resetColors(Color color);
    Vector2D getSections() { return mPieces; }
    bool checkBitmap() { return (mpBitmap == nullptr); }
    void setSections(Vector2D pieces) { mPieces = pieces; }
    int getWidth() { return al_get_bitmap_width(mpBitmap); }
    int getHeight() { return al_get_bitmap_height(mpBitmap); }
};