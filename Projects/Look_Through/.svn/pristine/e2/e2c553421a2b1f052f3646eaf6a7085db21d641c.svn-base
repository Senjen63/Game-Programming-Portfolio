//Evan Norzow, Nicolas Delbue, and Brandon Perry
#include "Unit.h"
#include "Game.h"

Unit::Unit(float posX, float posY, float scaleX, float scaleY)
{
	mLocation = Vector2D(posX, posY);
	mScale = Vector2D(scaleX, scaleY);
}

Unit::Unit(float posX, float posY, float scaleX, float scaleY, string tag)
{
	mLocation = Vector2D(posX, posY);
	mScale = Vector2D(scaleX, scaleY);
	mTag = tag;
}

Unit::~Unit()
{

}

void Unit::draw()
{
	Game* game = Game::getGameInstance();
	GraphicsSystem* graphics = game->getGraphicsSystem();
	graphics->draw(mpAnimations->getSprite(mCurrentSprite), mLocation.getX(), mLocation.getY(), mScale.getX(), mScale.getY());
}

void Unit::setAnimation(Animation* animation)
{
	mpAnimations = animation;
	mTimeLeft = mpAnimations->getTimePerFrame();
	mCurrentSprite = 0;
}

void Unit::update(double dt)
{
	mTimeLeft -= dt;
	if (mTimeLeft <= 0)
	{
		mCurrentSprite++;
		if (mCurrentSprite >= mpAnimations->getNumSprites())
		{
			if (mpAnimations->getShouldLoop())
			{
				mCurrentSprite = 0;
			}
			else
			{
				mCurrentSprite--;
			}
		}
		mTimeLeft = mpAnimations->getTimePerFrame();
	}
}

bool Unit::doesPointIntersect(Vector2D vec)
{
	Sprite sprite = mpAnimations->getSprite(mCurrentSprite);
	//Vector2D sourceLoc = sprite.getSourcePosition();
	Vector2D size = sprite.getHeightAndWidth();

	//topleft is 0,0
	int xMin = mLocation.getX();
	int xMax = mLocation.getX() + (size.getX() * mScale.getX());
	int yMin = mLocation.getY();
	int yMax = mLocation.getY() + (size.getY() * mScale.getY());

	if (vec.getX() >= xMin && vec.getX() <= xMax)
	{
		if (vec.getY() >= yMin && vec.getY() <= yMax)
		{
			return true;
		}
	}
	return false;
}