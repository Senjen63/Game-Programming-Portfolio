#pragma once
#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <iostream>
#include <cassert>
#include <string>

#include <PerformanceTracker.h>
#include <MemoryTracker.h>
#include <Vector2D.h>
#include <Timer.h>

#include "GraphicsBuffer.h"
#include "Sprite.h"
#include "Trackable.h"
#include "Font.h"
#include "Color.h"

using namespace std;

class GraphicsSystem : public Trackable
{
public:
	GraphicsSystem();
	GraphicsSystem(int width, int height);
	~GraphicsSystem();
	bool init();
	void cleanUp();
	int getHeight();
	int getWidth();
	GraphicsBuffer* getBuffer();
	void flip();
	void draw(int x, int y, Sprite sprite, float scale = 1.0);
	void draw(GraphicsBuffer* buff, int x, int y, float scale = 1.0);
	void draw(GraphicsBuffer* buff, int x, int y, Sprite sprite, float scale = 1.0);
	void write(int x, int y, Font* font, Color color, string text);
	void write(GraphicsBuffer* buff, int x, int y, Font* font, Color color, string text);
	bool saveBuffer(GraphicsBuffer* save, string filename);


private:
	
	ALLEGRO_DISPLAY* mDisplay;
	GraphicsBuffer* mBackBuffer;


};