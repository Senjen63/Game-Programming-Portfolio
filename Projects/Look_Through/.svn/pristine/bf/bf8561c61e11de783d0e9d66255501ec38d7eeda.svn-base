#pragma once

#include "Trackable.h"
#include "Vector2D.h"
#include <vector>
#include <string>

class Vector2D;
class InputSystem;
class GraphicsSystem;
class GraphicsBuffer;
class Sprite;
class Animation;
class Unit;
class Timer;
class PerformanceTracker;

class Game : public Trackable
{
	const int DISP_WIDTH = 800;
	const int DISP_HEIGHT = 600;
	const int ROW = 4;
	const int COLUMN = 4;

	const double ANIM_TICK = 16.7;
	const double BACKGROUND_SCALE = 0.5f;

	const std::string WOODS_IMAGE = "Woods.png";
	const std::string DEAN_IMAGE = "dean_sprites.png";
	const std::string SMURF_IMAGE = "smurf_sprites_numbered.png";
	const std::string LOOP = "loop";

	const Vector2D ORIGIN_LOCATION = Vector2D(0, 0);
	const Vector2D CENTER_LOCATION = Vector2D(DISP_WIDTH / 2, DISP_HEIGHT / 2);

private:

	bool mIsGameContinuing;

	InputSystem* mpInputSystem;

	GraphicsSystem* mpGraphicsSystem;

	GraphicsBuffer* mpWoodsBuffer;
	GraphicsBuffer* mpSmurfBuffer;
	GraphicsBuffer* mpDeanBuffer;

	Sprite* mpWoodsSprite;

	Animation* mpSmurfAnimation;
	Animation* mpDeanAnimation;

	Unit* mpUnit;

	Timer* mpTimer;

	PerformanceTracker* mpPerformanceTracker;

public:

	Game();
	~Game();

	void init();
	void cleanup();
	void gameLoop();

	GraphicsSystem* getGraphicsSystem() { return mpGraphicsSystem; }
};

extern Game* gpGame;