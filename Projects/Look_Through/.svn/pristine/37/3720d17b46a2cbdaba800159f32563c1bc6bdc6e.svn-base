#include "Level.h"

Level::Level() = default;

Level::~Level()
{
    mWalls.clear();
}

void Level::addWall( const Vector2D wall )
{
    mWalls.push_back( wall );
}

std::tuple<Color, Color> Level::getBackgroundColors() const
{
    return mBackgroundColors;
}

int Level::getEndSize() const
{
    return mEndSize;
}

Color & Level::getFoodColor()
{
    return mFoodColor;
}

std::string Level::getName() const
{
    return mName;
}

int Level::getPointsPerFood() const
{
    return mPointsPerFood;
}

int Level::getPowerUpRate() const
{
    return mPowerUpRate;
}

Vector2D Level::getResolution() const
{
    return mTilesResolution;
}

Color Level::getSnakeColor() const
{
    return mSnakeColor;
}

float Level::getSnakeSpeed() const
{
    return mSnakeSpeed;
}

int Level::getStartSize() const
{
    return mStartSize;
}

std::vector<Vector2D> Level::getWalls() const
{
    return mWalls;
}

Color Level::getWallColor() const
{
    return mWallColor;
}

void Level::setBackgroundColors( const Color & color1, const Color & color2 )
{
    mBackgroundColors = std::tuple( color1, color2 );
}

void Level::setEndSize( const int endSize )
{
    mEndSize = endSize;
}

void Level::setFoodColor( const Color & color )
{
    mFoodColor = color;
}

void Level::setName( const std::string & name )
{
    mName = name;
}

void Level::setPointsPerFood( const int points )
{
    mPointsPerFood = points;
}

void Level::setPowerUpRate( const int rate )
{
    mPowerUpRate = rate;
}

void Level::setResolution( const Vector2D & res )
{
    mTilesResolution = res;
}

void Level::setSnakeColor( const Color & color )
{
    mSnakeColor = color;
}

void Level::setSnakeSpeed( const float snakeSpeed )
{
    mSnakeSpeed = snakeSpeed;
}

void Level::setStartSize( const int startSize )
{
    mStartSize = startSize;
}

void Level::setWallColor( const Color & color )
{
    mWallColor = color;
}
