#pragma once

#include <Trackable.h>
#include <EventListener.h>
#include <EventSystem.h>
#include <fstream>
#include <Timer.h>
#include <PerformanceTracker.h>

#include "GraphicsSystem.h"
#include "GameEvents.h"
#include "GraphicsBufferManager.h"
#include "AudioSystem.h"
#include "LevelManager.h"
#include "CollisionManager.h"
#include "AudioManager.h"
#include "InputSystem.h"
#include "InputTranslator.h"
#include "BulletPool.h"
#include "InputEvents.h"
#include "Animation.h"
#include "EntityManager.h"
#include "Level.h"
#include "HUD.h"
#include "Menu.h"

//testing
const int TEST_SCREEN_WIDTH = 600;
const int TEST_SCREEN_HEIGHT = 400;
const int NUM_BULLETS = 20;


class Game : public EventListener
{
public:
    Game() = delete;
    Game(const Game&) = delete;
    void operator=(const Game&) = delete;

    static void createInstance(int screenWidth, int screenHeight, float frameRate);
    static void destoryInstance();
    static Game* getInstance() { return smpInst; }

    // None of these are const bc we want things to be able to change them 
    GraphicsSystem* getGraphicsSystem() const { return mpGraphicsSystem; }
    GraphicsBufferManager* getGraphicsBufferManager() const { return mpGraphicsBufferManager; }
    AudioSystem* getAudioSystem() const { return mpAudioSystem; }
    LevelManager* getLevelManager() const { return mpLevelManager; }
    CollisionManager* getCollisionManager() const { return mpCollisionManager; }
    AudioManager* getAudioManager() const { return mpAudioManager; }
    BulletPool* getBulletPool() const { return mpBulletPool; }
    Menu* getMenu() const { return mpMenu; };

    int getPlayer1Score() { return mPlayer1Score; };
    int getPlayer2Score() { return mPlayer2Score; };
    void setScores(int p1, int p2);

    void init();
    void cleanUp();

    void doLoop();

    void handleEvent(const Event& theEvent);

    int getLanguage() { return mLanguage; };

    void setGameState(bool gameState);

private:
    Game(int screenWidth, int screenHeight, float frameRate);
    ~Game();

    void update(double deltaTime);
    void draw(GraphicsSystem* display);

    static Game* smpInst;

    double mFrameTargetTime;
    bool mIsInitted = false;
    bool mShouldRun = true;

    bool mMainMenu = true;
    int mLanguage = 0; //english by default

    int mPlayer1Score = 0, mPlayer2Score = 0;

    int mScreenWidth;
    int mScreenHeight;

    GraphicsSystem* mpGraphicsSystem = nullptr;
    GraphicsBufferManager* mpGraphicsBufferManager = nullptr;
    AudioSystem* mpAudioSystem = nullptr;
    LevelManager* mpLevelManager = nullptr;
    CollisionManager* mpCollisionManager = nullptr;
    AudioManager* mpAudioManager = nullptr;
    InputSystem mInputSystem;
    InputTranslator mInputTranslator;

    Menu* mpMenu = nullptr;
    Font* mpFont = nullptr;
    HUD* mpHUD = nullptr;

    // Tanks specific stuff 
    void tanksCreation();
    void tanksDestruction();
    void tanksUpdate(double deltaTime);
    void tanksDraw();

    BulletPool* mpBulletPool = nullptr;
    Animation* mpBulletAnim = nullptr;


};

const std::string LOOP_TRACKER_NAME = "Loop";
