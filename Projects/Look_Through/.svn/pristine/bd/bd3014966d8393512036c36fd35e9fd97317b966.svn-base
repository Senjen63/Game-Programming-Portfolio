#include "Sprite.h"

Sprite::Sprite() 
{
	mSprite = nullptr;
	mTexture = nullptr;
	mIntRect = sf::IntRect();

	mX = -1;
	mY = -1;
	mWidth = -1;
	mHeight = -1;
}

Sprite::Sprite(Texture* baseTexture, int xPos, int yPos, float xScale, float yScale)
{
	mTexture = baseTexture;
	mIntRect = sf::IntRect();
	mSprite = new sf::Sprite(*(baseTexture->mTexture));
	setPosition(float(xPos), float(yPos));
	setScale(xScale, yScale);

	mX = -1;
	mY = -1;
	mWidth = -1;
	mHeight = -1;
}

Sprite::Sprite(Texture* baseTexture, int x, int y, int width, int height, int xPos, int yPos, float xScale, float yScale)
{
	mTexture = baseTexture;
	mIntRect = sf::IntRect(x, y, width, height);
	mSprite = new sf::Sprite(*(baseTexture->mTexture), mIntRect);
	setPosition(float(xPos), float(yPos));
	setScale(xScale, yScale);

	mX = x;
	mY = y;
	mWidth = width;
	mHeight = height;
}

Sprite::Sprite(const Sprite* spr, int xPos, int yPos, float xScale, float yScale)
{
	mTexture = spr->mTexture;
	if (spr->mX != -1) // copying sprite that's only part of a texture
	{ 
		mIntRect = sf::IntRect(spr->mX, spr->mY, spr->mWidth, spr->mHeight);
		mSprite = new sf::Sprite(*(mTexture->mTexture), mIntRect);
	}
	
	else // copying full texture
	{
		mIntRect = sf::IntRect();
		mSprite = new sf::Sprite(*(mTexture->mTexture));
	}

	setPosition(float(xPos), float(yPos));
	setScale(xScale, yScale);

	mX = spr->mX;
	mY = spr->mY;
	mWidth = spr->mWidth;
	mHeight = spr->mHeight;
}

Sprite::~Sprite() 
{
	//delete mSprite;
}