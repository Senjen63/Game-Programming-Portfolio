#include "Animation.h"

Animation::Animation()
{
	mpSprites = nullptr;
	mTime = 0;
	mCurrentTime = 0;
	mNumSprites = 0;
	mCurrentSprite = 0;
	mLoop = false;
}

Animation::Animation(GraphicsBuffer* pBuffer, int numSprites, float time, bool loop)
{
	mpSprites = new Sprite[numSprites];
	int count = 0;
	Vector2D source = Vector2D();
	Vector2D size = Vector2D(60, 60);

	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 4; j++)
		{
			source.setX(j * 60);
			source.setY(i * 60);

			mpSprites[count] = Sprite(pBuffer, source, size);
			count++;
		}
	}

	mTime = time;
	mCurrentTime = 0;
	mNumSprites = numSprites;
	mCurrentSprite = 0;
	mLoop = loop;
}

Animation::~Animation()
{
	delete[] mpSprites;
	
	mpSprites = nullptr;
	mTime = 0;
	mCurrentTime = 0;
	mNumSprites = 0;
	mCurrentSprite = 0;
	mLoop = false;
}

void Animation::update(double dt)
{
	if (mCurrentSprite < mNumSprites - 1)
	{
		mCurrentSprite++;
	}
	else if (mCurrentSprite == mNumSprites - 1)
	{
		if (mLoop)
		{
			mCurrentSprite = 0;
		}
	}
}

void Animation::changeTime(float timeChange)
{
	mTime += timeChange;

	if (mTime <= 0)
	{
		mTime = .0001;
	}
}

float Animation::getTime()
{
	return mTime;
}

Sprite* Animation::getCurrentSprite()
{
	return &mpSprites[mCurrentSprite];
}