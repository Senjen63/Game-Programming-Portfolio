#pragma once
#include <Trackable.h>
#include <PerformanceTracker.h>
#include <algorithm>

#include "InputSystem.h"
#include "GraphicsSystem.h"
#include "UnitManager.h"
#include "GraphcisBufferManager.h"

const float TIME_SCALE = 1000.0; //converts seconds to milliseconds
const int X_SECTIONS = 4;
const int Y_SECTIONS = 4;
const int FRAME_CHANGE_FACTOR = 40;
const int FRAME_RATE_CAP = 120;
const int FRAME_RATE_MIN = 1;
const int DEFAULT_WIDTH = 800;
const int DEFAULT_HEIGHT = 600;
const string LOOP_TRACKER_NAME = "loop";
const string ASSET_PATH = "..\\..\\common\\assets\\";
const string WOODS_FILENAME = "Woods.png";
const string SMURF_FILENAME = "smurf_sprites.png";
const string DEAN_FILENAME = "dean_sprites.png";

const enum KeyCodes
{
    F_KEY = 6,
    S_KEY = 19,
    ESCAPE = 59,
    ENTER = 67,
    SPACE = 75,
    LEFT_MOUSE = 1,
    RIGHT_MOUSE = 2
};

class Game : public Trackable
{
    private:
        static Game* spGame;

        GraphicsSystem* mpGraphics;
        UnitManager* mpUnitManager;
        GraphicsBufferManager* mpGBManager;
        InputSystem mInput;

        int mFps = 60;
        float mTimePerFrame = 1000.0 / mFps;

        bool mEndGame = false;
        bool mInitialized = false;
        bool mCleaned = false;

        Vector2D mWidthHeight;

        Game();
        Game(Vector2D widthHeight);
        ~Game();
        
    public:
        static void createGame();
        static void createGame(Vector2D widthHeight);
        static void destroyGame();

        static Game* getGame();

        void init();
        void cleanup();

        GraphicsSystem* getGraphicsSystem();

        void input();
        void update(float elapsedTime);
        void render();
        void gameLoop();
};