#include "LevelManager.h"

LevelManager::LevelManager()
{
	mNumLevels = 0;
}

LevelManager::~LevelManager()
{
	cleanup();
}

void LevelManager::cleanup()
{
	int i;
	for (i = 0; i < mNumLevels; i++)
	{
		delete mpLevels[i];
	}

	mNumLevels = 0;
	mpLevels.clear();
}

void LevelManager::addLevel()
{
	mpLevels.push_back(new Level());
	mNumLevels++;
}

void LevelManager::addLevel(string message)
{
	mpLevels.push_back(new Level(message));
	mNumLevels++;
}

void LevelManager::addLevel(int wallArray[10][14], string path, string sprite)
{
	mpLevels.push_back(new Level(wallArray, path, sprite));
	mNumLevels++;
}

void LevelManager::drawHUD(int target, Font* font)
{
	int i;
	for (i = 0; i < mpLevels.size(); i++)
	{
		if (i == target)
		{
 			mpLevels[i]->drawHUD(font);
		}
	}
}

void LevelManager::drawHUD(int target, Font* pFont, int score, float FPS, float time)
{
	int i;
	for (i = 0; i < mpLevels.size(); i++)
	{
		if (i == target)
		{
			mpLevels[i]->drawHUD(pFont, score, FPS, time);
		}
	}
}

void LevelManager::drawWalls(int target, ALLEGRO_DISPLAY* backBuff, GraphicsBuffer* pBuff, int scale)
{
	int i;
	for (i = 0; i < mpLevels.size(); i++)
	{
		if (i == target)
		{
			mpLevels[i]->draw(backBuff, pBuff, scale);
		}
	}
}