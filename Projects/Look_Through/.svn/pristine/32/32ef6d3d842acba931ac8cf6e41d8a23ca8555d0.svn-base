#include "Animation.h"

Animation::Animation()
{

}

Animation::Animation(GraphicsBuffer* spriteSheet, int perColumn, int perRow, int spriteWidth, int spriteHeight, float timePerFrame, bool loops)
{
	mLooping = loops;
	mTimePerFrame = timePerFrame;
	mTimeLeft = timePerFrame;
	mSpeed = DEFAULT_SPEED;
	mCurrentSprite = 0;

	for (int i = 0; i < perRow; i++)
	{
		for (int j = 0; j < perColumn; j++)
		{
			Sprite cutSprite = Sprite(spriteSheet, Vector2D(spriteWidth * i, spriteHeight * j), spriteHeight, spriteWidth);
			mSpriteList.push_back(cutSprite);
		}
	}
}

Animation::~Animation()
{

}

void Animation::update()
{
	mTimeLeft -= mSpeed;
	if (mTimeLeft <= 0)
	{
		if (mCurrentSprite < mSpriteList.size())
		{
			mCurrentSprite++;
		}
		if (mCurrentSprite >= mSpriteList.size() && mLooping)
		{
			mCurrentSprite = 0;
		}
		mTimeLeft = mTimePerFrame;
	}
}

void Animation::speedUp()
{
	mSpeed += DEFAULT_SPEED_CHANGE;
}

void Animation::slowDown()
{
	mSpeed -= DEFAULT_SPEED_CHANGE;
	if (mSpeed < 0)
	{
		mSpeed = 0;
	}
}

Sprite Animation::getCurrentSprite()
{
	return mSpriteList.at(mCurrentSprite);
}
