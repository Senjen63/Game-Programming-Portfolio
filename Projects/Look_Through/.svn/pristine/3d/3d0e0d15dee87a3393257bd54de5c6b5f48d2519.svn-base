#include "Menu.h"

Menu::Menu()
{
    
}


Menu::Menu(Button* firstButton, string text)
{
    mTitleText = text;

    mButtons.push_back(firstButton);
}


Menu::Menu(Button* firstButton, Button* secondButton, string text)
{
    mTitleText = text;

    mButtons.push_back(firstButton);
    mButtons.push_back(secondButton);
}


Menu::Menu(Button* firstButton, Button* secondButton, Button* thirdButton, string text)
{
    mTitleText = text;

    mButtons.push_back(firstButton);
    mButtons.push_back(secondButton);
    mButtons.push_back(thirdButton);
}


Menu::Menu(Button* firstButton, Button* secondButton, Button* thirdButton, Button* fourthButton, string text)
{
    mTitleText = text;

    mButtons.push_back(firstButton);
    mButtons.push_back(secondButton);
    mButtons.push_back(thirdButton);
    mButtons.push_back(fourthButton);
}


Menu::Menu(Button* firstButton, Button* secondButton, Button* thirdButton, Button* fourthButton, Button* fifthButton,
    Button* sixthButton, Button* seventhButton, Button* eigthButton, Button* ninthButton, string text)
{
    mTitleText = text;

    mButtons.push_back(firstButton);
    mButtons.push_back(secondButton);
    mButtons.push_back(thirdButton);
    mButtons.push_back(fourthButton);
    mButtons.push_back(fifthButton);
    mButtons.push_back(sixthButton);
    mButtons.push_back(seventhButton);
    mButtons.push_back(eigthButton);
    mButtons.push_back(ninthButton);
}


Menu::~Menu()
{
    cleanup();
}


void Menu::init()
{

}


void Menu::cleanup()
{
    clearButtons();
}


/*void Menu::instantiateButtons(UnitManager* unitManager)
{
    for (auto button : mButtons)
    {
        unitManager->addUnit(button);
    }
}*/


void Menu::setButtonsActive(bool active)
{
    for (unsigned int i = 0; i < mButtons.size(); i++)
    {
        mButtons[i]->setActive(active);
    }
}


void Menu::update(float timeElapsed)
{
    for (unsigned int i = 0; i < mButtons.size(); i++)
    {
        mButtons[i]->update(timeElapsed);
    }
}


void Menu::drawButtons()
{
    for (unsigned int i = 0; i < mButtons.size(); i++)
    {
        mButtons[i]->draw();
    }
}


void Menu::clearButtons()
{
    for (unsigned int i = 0; i < mButtons.size(); i++)
    {
        delete mButtons[i];
    }

    mButtons.clear();
}