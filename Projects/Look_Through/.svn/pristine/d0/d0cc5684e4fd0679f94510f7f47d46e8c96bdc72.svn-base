#pragma once

#include <allegro5/allegro.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_ttf.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>
#include <allegro5/allegro_primitives.h>

#include <Trackable.h>
#include <Vector2D.h>
#include <EventSystem.h>

#include <iostream>
#include <cassert>
#include <string>

#include "MoveEvent.h"

using namespace std;

class InputSystem : public Trackable
{
	friend class Game;
public:
	InputSystem();
	~InputSystem();

	void Init();
	void cleanUp();
	void runQueue();

	Vector2D getMousePos();

private:
	bool getKeyState(int mKeyCode);
	bool getMouseStateLeft();
	bool getMouseStateRight();

	ALLEGRO_KEYBOARD_STATE mKeyState;
	ALLEGRO_MOUSE_STATE mMouseState;

	ALLEGRO_EVENT_QUEUE* queue;

	EventSystem* pEventSystem;

	bool isInit;
};

enum MyKeyCode
{
	F_KEY = ALLEGRO_KEY_F,
	W_KEY = ALLEGRO_KEY_W,
	A_KEY = ALLEGRO_KEY_A,
	S_KEY = ALLEGRO_KEY_S,
	D_KEY = ALLEGRO_KEY_D,
	ENTER_KEY = ALLEGRO_KEY_ENTER,
	ESCAPE_KEY = ALLEGRO_KEY_ESCAPE,
	SPACE_KEY = ALLEGRO_KEY_SPACE,
	UP_KEY = ALLEGRO_KEY_UP,
	DOWN_KEY = ALLEGRO_KEY_DOWN,
	LEFT_KEY = ALLEGRO_KEY_LEFT,
	RIGHT_KEY = ALLEGRO_KEY_RIGHT
};