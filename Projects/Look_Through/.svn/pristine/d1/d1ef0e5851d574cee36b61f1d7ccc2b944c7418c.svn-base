#include "InputSystem.h"

InputSystem::InputSystem()
{

}


InputSystem::~InputSystem()
{
	CleanUp();
}


void InputSystem::Init() 
{
	al_init();
	al_install_keyboard();
	al_install_mouse();
}


void InputSystem::CleanUp()
{
	//I don't think anything is needed here??
}


//bad system that works, because allegro input system is also a bad system >:(
bool InputSystem::GetKey(int keyCode)
{
	switch (keyCode)
	{
		case ALLEGRO_KEY_S:
			if (mSFlag) 
			{
				al_get_keyboard_state(&mKeyState);
				if (!al_key_down(&mKeyState, keyCode))
				{
					mSFlag = false;
				}
				return false;
			}
			else
			{
				al_get_keyboard_state(&mKeyState);
				if (al_key_down(&mKeyState, keyCode))
				{
					mSFlag = true;
				}
				return al_key_down(&mKeyState, keyCode);
			}
			break;
		case ALLEGRO_KEY_F:
			if (mFFlag)
			{
				al_get_keyboard_state(&mKeyState);
				if (!al_key_down(&mKeyState, keyCode))
				{
					mFFlag = false;
				}
				return false;
			}
			else
			{
				al_get_keyboard_state(&mKeyState);
				if (al_key_down(&mKeyState, keyCode))
				{
					mFFlag = true;
				}
				return al_key_down(&mKeyState, keyCode);
			}
			break;
		case ALLEGRO_KEY_ENTER:
			if (mEnterFlag)
			{
				al_get_keyboard_state(&mKeyState);
				if (!al_key_down(&mKeyState, keyCode))
				{
					mEnterFlag = false;
				}
				return false;
			}
			else
			{
				al_get_keyboard_state(&mKeyState);
				if (al_key_down(&mKeyState, keyCode))
				{
					mEnterFlag = true;
				}
				return al_key_down(&mKeyState, keyCode);
			}
		case ALLEGRO_KEY_SPACE:
			if (mSpaceFlag)
			{
				al_get_keyboard_state(&mKeyState);
				if (!al_key_down(&mKeyState, keyCode))
				{
					mSpaceFlag = false;
				}
				return false;
			}
			else
			{
				al_get_keyboard_state(&mKeyState);
				if (al_key_down(&mKeyState, keyCode))
				{
					mSpaceFlag = true;
				}
				return al_key_down(&mKeyState, keyCode);
			}
			break;
		default:
			al_get_keyboard_state(&mKeyState);
			return al_key_down(&mKeyState, keyCode);
			break;
	}
}


bool InputSystem::GetMouseDown(int mouseCode)
{
	al_get_mouse_state(&mMouseState);
	return al_mouse_button_down(&mMouseState, mouseCode);
}


Vector2D InputSystem::GetMousePosition()
{
	al_get_mouse_state(&mMouseState);
	return Vector2D(mMouseState.x, mMouseState.y);
}