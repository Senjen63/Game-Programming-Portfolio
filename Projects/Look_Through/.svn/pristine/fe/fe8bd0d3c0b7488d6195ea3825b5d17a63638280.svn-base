#pragma once
#include <iostream>
#include <cassert>
#include <string>
#include <fstream>
#include <Vector2D.h>
#include <Timer.h>
#include "GraphicsSystem.h"
#include "GraphicsBuffer.h"
#include "InputSystem.h"
#include "Color.h"
#include "Sprite.h"
#include "Font.h"
#include "Animation.h"
#include "Unit.h"
#include "UnitManager.h"
#include "BufferManager.h"
#include "HUD.h"
#include "UIEvent.h"
#include "Sound.h"

const string ASSET_DATA_FILENAME = "AssetData.txt";
const string BUTTON_BUFFER = "button";
class Game : public EventListener
{
private:
	//determined values - left not empty for now so I can easily copy them. 
	string mAssetPath;
	string mRocketFilename;
	string mWallFilename;
	string mBackground1;
	string mBackground2;
	string mBackground3;
	string mFontFilename;
	string mSoundPoint;
	string mSoundDeath;
	string mMusic;
	string mSoundPath;
    int mPlayerPos;
	float mPlayerSpeed;
	float mObstacleSpeed1;
	float mObstacleSpeed2;
	float mObstacleSpeed3;
	int mHUDFontSize;
	int mUIFontSize;
	float mAnimTime;
	float mTimeIncrement;
	int mPlayerWidth;
	int mPlayerHeight;
	int mObstacleWidth;
	int mObstacleHeight;
	int mGateWidth;
	int mGateHeight;
	int mSpriteWidth;
	int mSpriteHeight;
	float mSleep;
	int mDispWidth;
	int mDispHeight;
	int mButtonWidth;
	int mButtonHeight;
	bool mHasAudio = true;
	string mLangFileNames[3];
	string mSaveDataName;
	struct Language
	{
		string playGame;
		string settings;
		string language;
		string youDied;
		string restart;
		string mainMenu;
		string exitGame;
		string easy;
		string normal;
		string hard;
		string sound;
		string on;
		string off;
		string resume;
	};


	static Game* mpsGameInstance;
	GraphicsSystem* mpGraphSystem;
	Sound mSoundSystem;
	InputSystem mInputSystem;
	BufferManager mBufferManager;
	UnitManager mUnitManager;
	EventSystem* mpEventSystem;
	HUD* mHUD;
	Font* mpFont;
	Font* mpFontSmall;
	bool leave = false;
	Language mCurrentLanguage;
	double mGameTime = 0;
	SDL_Event mEvent;
	bool mLMBDown;
	int mDifficulty;
	int mScore;
	enum class GameState
	{
		MAIN_MENU = 0,
		IN_GAME = 1,
		DEATH_SCREEN = 2,
		SETTINGS = 3,
		LANGUAGE = 4,
		DIFF_SELECT = 5,
		PAUSE_SCREEN = 6
	};
	GameState mCurrentState;
public:
	void Init();
	void CleanUp();
	static Game* GetInstance();
	Game();
	~Game();
	void DoLoop();
	void PauseGame();
	void LoadLanguage(int lang);
	GraphicsBuffer* GetBuffer(string index);
	GraphicsSystem* GetGraphicsSystem();
	void LoadAssetsAndData();
	virtual void handleEvent(const Event& event);
	int GetSpriteWidth();
	int GetSpriteHeight();
	int GetDisplayWidth();
	int GetDisplayHeight();
	void PlayerDeath();
	void LoadDeathScreen();
	void LoadMainMenu();
	void LoadDifficultySelection();
	void LoadGame();
	void LoadSettings();
	void LoadLanguageSettings();
	void AddScore();
	bool LoadSavedData();
	void SaveData();
};


